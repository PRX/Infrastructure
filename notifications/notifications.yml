AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Creates foundational resources needed to handle infrastructure-related
  messaging and notifications
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Storage Stack
        Parameters:
          - InfrastructureStorageStackName
      - Label:
          default: Infrastructure Config
        Parameters:
          - InfrastructureConfigStagingKey
      - Label:
          default: Slack Tokens
        Parameters:
          - IkeSlackVerificationToken
      - Label:
          default: Slack Webhooks
        Parameters:
          - AutoScalingSlackWebhookUrl
          - CloudFormationSlackWebhookUrl
          - CloudWatchSlackWebhookUrl
          - CodeBuildSlackWebhookUrl
          - CodePipelineSlackWebhookUrl
          - IkeDeploysSlackSlackWebhookUrl
    ParameterLabels:
      InfrastructureStorageStackName:
        default: Storage stack name
      InfrastructureConfigStagingKey:
        default: Staging S3 object key
      AutoScalingSlackWebhookUrl:
        default: Auto Scaling
      CloudWatchSlackWebhookUrl:
        default: CloudWatch
      CloudFormationSlackWebhookUrl:
        default: CloudFormation
      CodePipelineSlackWebhookUrl:
        default: CodePipeline
      CodeBuildSlackWebhookUrl:
        default: CodeBuild
      IkeDeploysSlackSlackWebhookUrl:
        default: Ike Deploys
      IkeSlackVerificationToken:
        default: Ike Verification Token
Parameters:
  InfrastructureStorageStackName:
    Default: infrastructure-storage
    Description: The name of a previously launched infrastructure storage stack
    Type: String
  InfrastructureConfigStagingKey:
    Default: template-config-staging.zip
    Description: >
      The S3 object key for the staging template configuration file archive
      (.zip), inside the InfrastructureConfigBucket
    Type: String
  AutoScalingSlackWebhookUrl:
    Type: String
  CloudWatchSlackWebhookUrl:
    Type: String
  CloudFormationSlackWebhookUrl:
    Type: String
  CodePipelineSlackWebhookUrl:
    Type: String
  CodeBuildSlackWebhookUrl:
    Type: String
  IkeDeploysSlackSlackWebhookUrl:
    Type: String
  IkeSlackVerificationToken:
    Type: String
Resources:
  # SNS Topics
  SlackMessageRelaySnsTopic:
    Type: "AWS::SNS::Topic"
  OpsDebugMessagesSnsTopic:
    Type: "AWS::SNS::Topic"
  OpsInfoMessagesSnsTopic:
    Type: "AWS::SNS::Topic"
  OpsWarnMessagesSnsTopic:
    Type: "AWS::SNS::Topic"
  OpsErrorMessagesSnsTopic:
    Type: "AWS::SNS::Topic"
  OpsFatalMessagesSnsTopic:
    Type: "AWS::SNS::Topic"
  # IAM Roles
  LambdaBasicExecutionIamRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
  IkeHandlerLambdaIamRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: CodePipelineApprovalPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "codepipeline:PutApprovalResult"
                Resource:
                  - "*" # This should be okay
        - PolicyName: S3ProductionConfigPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:List*"
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - "s3:Get*"
                Resource:
                  - !Join ["", ["arn:aws:s3:::", "Fn::ImportValue": !Sub "${InfrastructureStorageStackName}-InfrastructureConfigBucket", "/*"]]
              - Effect: Allow
                Action:
                  - "s3:Put*"
                Resource:
                  - !Join ["", ["arn:aws:s3:::", "Fn::ImportValue": !Sub "${InfrastructureStorageStackName}-InfrastructureConfigBucket", "/", !Ref InfrastructureConfigStagingKey]]
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
  # Lambda Functions
  SlackMessageRelayLambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket:
          Fn::ImportValue:
            !Sub ${InfrastructureStorageStackName}-InfrastructureSupportBucket
        S3Key: "notifications/slack-message-relay.zip"
      Description: >
        Receives preformed Slack message payloads and sends them to the provided
        Incoming Webhook URL
      Handler: index.handler
      MemorySize: 128
      Role: !GetAtt LambdaBasicExecutionIamRole.Arn
      Runtime: nodejs6.10
      Tags:
        - Key: Project
          Value: Infrastructure
      Timeout: 3
  SnsOpsMessagesToSlackLambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket:
          Fn::ImportValue:
            !Sub ${InfrastructureStorageStackName}-InfrastructureSupportBucket
        S3Key: "notifications/sns-ops-to-slack.zip"
      Description: >
        Relays messages, which are produced by various AWS services and posted
        to SNS, to the channels in Slack
      Environment:
        Variables:
          ASG_SLACK_WEBHOOK_URL: !Ref AutoScalingSlackWebhookUrl
          CW_SLACK_WEBHOOK_URL: !Ref CloudWatchSlackWebhookUrl
          PIPELINE_SLACK_WEBHOOK_URL: !Ref CodePipelineSlackWebhookUrl
          CFN_SLACK_WEBHOOK_URL: !Ref CloudFormationSlackWebhookUrl
          CODEBUILD_SLACK_WEBHOOK_URL: !Ref CodeBuildSlackWebhookUrl
          IKE_DEPLOYS_SLACK_WEBHOOK_URL: !Ref IkeDeploysSlackSlackWebhookUrl
      Handler: index.handler
      MemorySize: 128
      Role: !GetAtt LambdaBasicExecutionIamRole.Arn
      Runtime: nodejs6.10
      Tags:
        - Key: Project
          Value: Infrastructure
      Timeout: 3
  IkeCallbackHandlerLambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket:
          Fn::ImportValue:
            !Sub ${InfrastructureStorageStackName}-InfrastructureSupportBucket
        S3Key: "notifications/ike-interactive-messages-callback-handler.zip"
      Description: >
        Handles requests from Slack for interactive messages
      Environment:
        Variables:
          SLACK_VERIFICATION_TOKEN: !Ref IkeSlackVerificationToken
          INFRASTRUCTURE_CONFIG_BUCKET:
            Fn::ImportValue:
              !Sub ${InfrastructureStorageStackName}-InfrastructureConfigBucket
          INFRASTRUCTURE_CONFIG_STAGING_KEY: !Ref InfrastructureConfigStagingKey
      Handler: index.handler
      MemorySize: 128
      Role: !GetAtt IkeHandlerLambdaIamRole.Arn
      Runtime: nodejs6.10
      Tags:
        - Key: Project
          Value: Infrastructure
      Timeout: 3
  IkeSlashCommandsHandlerLambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket:
          Fn::ImportValue:
            !Sub ${InfrastructureStorageStackName}-InfrastructureSupportBucket
        S3Key: "notifications/ike-slash-commands-handler.zip"
      Description: >
        Handles requests from Slack for slash commands
      Environment:
        Variables:
          SLACK_VERIFICATION_TOKEN: !Ref IkeSlackVerificationToken
          INFRASTRUCTURE_CONFIG_BUCKET:
            Fn::ImportValue:
              !Sub ${InfrastructureStorageStackName}-InfrastructureConfigBucket
          INFRASTRUCTURE_CONFIG_STAGING_KEY: !Ref InfrastructureConfigStagingKey
      Handler: index.handler
      MemorySize: 512
      Role: !GetAtt IkeHandlerLambdaIamRole.Arn
      Runtime: nodejs6.10
      Tags:
        - Key: Project
          Value: Infrastructure
      Timeout: 3
  # Lambda Permssions for SNS
  SlackMessageRelayPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref SlackMessageRelayLambdaFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref SlackMessageRelaySnsTopic
  OpsDebugTopicInvokeRelayFunctionPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref SnsOpsMessagesToSlackLambdaFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref OpsDebugMessagesSnsTopic
  OpsInfoTopicInvokeRelayFunctionPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref SnsOpsMessagesToSlackLambdaFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref OpsInfoMessagesSnsTopic
  OpsWarnTopicInvokeRelayFunctionPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref SnsOpsMessagesToSlackLambdaFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref OpsWarnMessagesSnsTopic
  OpsErrorTopicInvokeRelayFunctionPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref SnsOpsMessagesToSlackLambdaFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref OpsErrorMessagesSnsTopic
  OpsFatalTopicInvokeRelayFunctionPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref SnsOpsMessagesToSlackLambdaFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref OpsFatalMessagesSnsTopic
  # Lambda Permissions for API Gateway
  IkeCallbackHandlerRestApiLambdaPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref IkeCallbackHandlerLambdaFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/${RestApiStage}/*"  # TOD This isn't quite right. Reference one made by the console to correct
  IkeSlashCommandsHandlerRestApiLambdaPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref IkeSlashCommandsHandlerLambdaFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/${RestApiStage}/*"  # TOD This isn't quite right. Reference one made by the console to correct
  # Lambda Alarms
  SlackMessageRelayErrorAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmName: Slack Messgage Relay Lambda Errors
      AlarmActions:
        - !Ref OpsWarnMessagesSnsTopic
      InsufficientDataActions:
        - !Ref OpsWarnMessagesSnsTopic
      OKActions:
        - !Ref OpsWarnMessagesSnsTopic
      AlarmDescription: >
        The error rate on the Slack message relay lambda has exceeded 0 in
        the last minute.
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: "1"
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: "60"
      Statistic: Sum
      Threshold: "0"
      TreatMissingData: notBreaching
      Dimensions:
        - Name: FunctionName
          Value: !Ref SlackMessageRelayLambdaFunction
  SlackRelayErrorAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmName: Slack Relay Lambda Errors
      AlarmActions:
        - !Ref OpsWarnMessagesSnsTopic
      InsufficientDataActions:
        - !Ref OpsWarnMessagesSnsTopic
      OKActions:
        - !Ref OpsWarnMessagesSnsTopic
      AlarmDescription: >
        The error rate on the Slack relay lambda has exceeded 0 in
        the last minute.
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: "1"
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: "60"
      Statistic: Sum
      Threshold: "0"
      TreatMissingData: notBreaching
      Dimensions:
        - Name: FunctionName
          Value: !Ref SnsOpsMessagesToSlackLambdaFunction
  IkeCallbackHandlerErrorAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmName: Ike Callback Handler Lambda Errors
      AlarmActions:
        - !Ref OpsWarnMessagesSnsTopic
      InsufficientDataActions:
        - !Ref OpsWarnMessagesSnsTopic
      OKActions:
        - !Ref OpsWarnMessagesSnsTopic
      AlarmDescription: >
        The error rate on the Ike callback handler lambda has exceeded 0 in
        the last minute.
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: "1"
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: "60"
      Statistic: Sum
      Threshold: "0"
      TreatMissingData: notBreaching
      Dimensions:
        - Name: FunctionName
          Value: !Ref IkeCallbackHandlerLambdaFunction
  IkeSlashCommandsHandlerErrorAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmName: Ike Slash Commands Lambda Errors
      AlarmActions:
        - !Ref OpsWarnMessagesSnsTopic
      InsufficientDataActions:
        - !Ref OpsWarnMessagesSnsTopic
      OKActions:
        - !Ref OpsWarnMessagesSnsTopic
      AlarmDescription: >
        The error rate on the Ike /commands handler lambda has exceeded 0 in
        the last minute.
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: "1"
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: "60"
      Statistic: Sum
      Threshold: "0"
      TreatMissingData: notBreaching
      Dimensions:
        - Name: FunctionName
          Value: !Ref IkeSlashCommandsHandlerLambdaFunction
  # SNS Subscriptions
  SlackMessageRelaySubscription:
    Type: "AWS::SNS::Subscription"
    Properties:
      Endpoint: !GetAtt SlackMessageRelayLambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Ref SlackMessageRelaySnsTopic
  RelayFunctionDebugSubscription:
    Type: "AWS::SNS::Subscription"
    Properties:
      Endpoint: !GetAtt SnsOpsMessagesToSlackLambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Ref OpsDebugMessagesSnsTopic
  RelayFunctionInfoSubscription:
    Type: "AWS::SNS::Subscription"
    Properties:
      Endpoint: !GetAtt SnsOpsMessagesToSlackLambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Ref OpsInfoMessagesSnsTopic
  RelayFunctionWarnSubscription:
    Type: "AWS::SNS::Subscription"
    Properties:
      Endpoint: !GetAtt SnsOpsMessagesToSlackLambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Ref OpsWarnMessagesSnsTopic
  RelayFunctionErrorSubscription:
    Type: "AWS::SNS::Subscription"
    Properties:
      Endpoint: !GetAtt SnsOpsMessagesToSlackLambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Ref OpsErrorMessagesSnsTopic
  RelayFunctionFatalSubscription:
    Type: "AWS::SNS::Subscription"
    Properties:
      Endpoint: !GetAtt SnsOpsMessagesToSlackLambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Ref OpsFatalMessagesSnsTopic
  # API Gateway
  RestApi:
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      Name: !Sub ${AWS::StackName} API
      Description: >
        Provides an API for inbound requests used by the notifications stack,
        such as Slack interactive messages
  IkeRestApiResource:
    Type: "AWS::ApiGateway::Resource"
    Properties:
      RestApiId: !Ref RestApi
      ParentId: !GetAtt RestApi.RootResourceId
      PathPart: "ike"
  IkeSlashCommandsRestApiResource:
    Type: "AWS::ApiGateway::Resource"
    Properties:
      RestApiId: !Ref RestApi
      ParentId: !Ref IkeRestApiResource
      PathPart: "slash-commands"
  IkeSlashCommandsRestApiProxyMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref IkeSlashCommandsRestApiResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${IkeSlashCommandsHandlerLambdaFunction.Arn}/invocations
  IkeCodePipelineRestApiResource:
    Type: "AWS::ApiGateway::Resource"
    Properties:
      RestApiId: !Ref RestApi
      ParentId: !Ref IkeRestApiResource
      PathPart: "codepipeline"
  IkeCodePipelineApprovalRestApiResource:
    Type: "AWS::ApiGateway::Resource"
    Properties:
      RestApiId: !Ref RestApi
      ParentId: !Ref IkeCodePipelineRestApiResource
      PathPart: "approval"
  IkeCodePipelineApprovalRestApiProxyMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref IkeCodePipelineApprovalRestApiResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${IkeCallbackHandlerLambdaFunction.Arn}/invocations
  RestApiDeployment:
    DependsOn: IkeSlashCommandsRestApiProxyMethod
    DependsOn: IkeCodePipelineApprovalRestApiProxyMethod
    Type: "AWS::ApiGateway::Deployment"
    Properties:
      RestApiId: !Ref RestApi
      Description: "Notifications stack deployment"
  RestApiStage:
    Type: "AWS::ApiGateway::Stage"
    Properties:
      StageName: prod
      Description: "Production stage for notifications stack"
      RestApiId: !Ref RestApi
      DeploymentId: !Ref RestApiDeployment
Outputs:
  SnsOpsMessagesToSlackLambdaFunctionName:
    Value: !Ref SnsOpsMessagesToSlackLambdaFunction
    Export:
      Name: !Sub ${AWS::StackName}-SnsOpsMessagesToSlackLambdaFunctionName
  SnsOpsMessagesToSlackLambdaFunctionArn:
    Value: !GetAtt SnsOpsMessagesToSlackLambdaFunction.Arn
    Export:
      Name: !Sub ${AWS::StackName}-SnsOpsMessagesToSlackLambdaFunctionArn
  SlackMessageRelaySnsTopicArn:
    Value: !Ref SlackMessageRelaySnsTopic
    Export:
      Name: !Sub ${AWS::StackName}-SlackMessageRelaySnsTopicArn
  OpsDebugMessagesSnsTopicArn:
    Value: !Ref OpsDebugMessagesSnsTopic
    Export:
      Name: !Sub ${AWS::StackName}-OpsDebugMessagesSnsTopicArn
  OpsInfoMessagesSnsTopicArn:
    Value: !Ref OpsInfoMessagesSnsTopic
    Export:
      Name: !Sub ${AWS::StackName}-OpsInfoMessagesSnsTopicArn
  OpsWarnMessagesSnsTopicArn:
    Value: !Ref OpsWarnMessagesSnsTopic
    Export:
      Name: !Sub ${AWS::StackName}-OpsWarnMessagesSnsTopicArn
  OpsErrorMessagesSnsTopicArn:
    Value: !Ref OpsErrorMessagesSnsTopic
    Export:
      Name: !Sub ${AWS::StackName}-OpsErrorMessagesSnsTopicArn
  OpsFatalMessagesSnsTopicArn:
    Value: !Ref OpsFatalMessagesSnsTopic
    Export:
      Name: !Sub ${AWS::StackName}-OpsFatalMessagesSnsTopicArn
  IkeCodePipelineApprovalHandlerCallbackUrl:
    Value: !Sub "https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/${RestApiStage}/ike/codepipeline/approval"
  IkeSlashCommandsHandlerCallbackUrl:
    Value: !Sub "https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/${RestApiStage}/ike/slash-commands"
  CodePipelineSlackWebhookUrl:
    Value: !Ref CodePipelineSlackWebhookUrl
    Export:
      Name: !Sub ${AWS::StackName}-CodePipelineSlackWebhookUrl
