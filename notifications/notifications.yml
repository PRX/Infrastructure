# notifications/notifications.yml
AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Description: >-
  Creates foundational resources needed to handle infrastructure-related
  messaging and notifications

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: SNS Topic Access
        Parameters:
          - SnsTopicPolicyPublishAllowanceAccountIds
          - SnsTopicPolicyPublishAllowanceOrganizationId
    ParameterLabels:
      SnsTopicPolicyPublishAllowanceAccountIds:
        default: "SNS:Publish Account IDs"
      SnsTopicPolicyPublishAllowanceOrganizationId:
        default: "SNS:Publish Organization ID"

Parameters:
  SnsTopicPolicyPublishAllowanceAccountIds:
    Type: CommaDelimitedList
    Description: >-
      Account IDs that will be given SNS:Publish access to notification SNS
      topics. This grants access to all resources/roles/etc in that account.
  SnsTopicPolicyPublishAllowanceOrganizationId:
    Type: String
    Description: >-
      Organization ID that will be given SNS:Publish access to notification SNS
      topics. This grants access to all resources/roles/etc in that
      organization.
  FatalNotificationEmailAddress:
    Type: String
    Description: >-
      An email address to deliver fatal alarm notifications to
  CrossAccountCloudWatchAlarmReaderRoleName:
    Type: String
    Description: >-
      The name of an IAM role that exists in other AWS accounts that are
      generating CloudWatch Alarms that this stack will handle.

Resources:
  # Common IAM policies
  SlackRelaySnsPublishOnlyAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: sns:Publish
            Effect: Allow
            Resource: !Ref SlackMessageRelaySnsTopic
        Version: "2012-10-17"
  # Slack message relay
  SlackMessageRelaySnsTopic:
    Type: AWS::SNS::Topic
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      Tags:
        - Key: Project
          Value: Infrastructure
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
  SlackMessageRelaySnsTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Id: OrganizationAcccessPolicy
        Version: "2012-10-17"
        Statement:
          - Sid: AccountPublish
            Effect: Allow
            Principal:
              AWS: !Ref SnsTopicPolicyPublishAllowanceAccountIds
            Action:
              - sns:Publish
            Resource: !Ref SlackMessageRelaySnsTopic
          - Sid: OrganizationPublish
            Effect: Allow
            Principal:
              AWS: "*"
            Action:
              - sns:Publish
            Resource: !Ref SlackMessageRelaySnsTopic
            Condition:
              StringEquals:
                "aws:PrincipalOrgID": !Ref SnsTopicPolicyPublishAllowanceOrganizationId
          - Sid: OrganizationSubscribe
            Effect: Allow
            Principal:
              AWS: "*"
            Action:
              - sns:Subscribe
            Resource: !Ref SlackMessageRelaySnsTopic
            Condition:
              StringEquals:
                "aws:PrincipalOrgID": !Ref SnsTopicPolicyPublishAllowanceOrganizationId
          - Sid: OwnerAllAccess
            Effect: Allow
            Principal:
              AWS: "*"
            Action:
              - sns:GetTopicAttributes
              - sns:SetTopicAttributes
              - sns:AddPermission
              - sns:RemovePermission
              - sns:DeleteTopic
              - sns:Subscribe
              - sns:ListSubscriptionsByTopic
              - sns:Publish
              - sns:Receive
            Resource: !Ref SlackMessageRelaySnsTopic
            Condition:
              StringEquals:
                "AWS:SourceOwner": !Ref AWS::AccountId
      Topics:
        - !Ref SlackMessageRelaySnsTopic
  # CloudFormation notifications
  CloudFormationNotificationSnsTopic:
    Type: AWS::SNS::Topic
  CloudFormationNotificationSnsTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Id: OrganizationAcccessPolicy
        Statement:
          - Action: sns:Publish
            Effect: Allow
            Principal:
              AWS: !Ref SnsTopicPolicyPublishAllowanceAccountIds
            Resource: !Ref CloudFormationNotificationSnsTopic
            Sid: AccountPublish
          - Action: sns:Publish
            Condition:
              StringEquals:
                aws:PrincipalOrgID: !Ref SnsTopicPolicyPublishAllowanceOrganizationId
            Effect: Allow
            Principal:
              AWS: "*"
            Resource: !Ref CloudFormationNotificationSnsTopic
            Sid: OrganizationPublish
          - Action:
              - sns:AddPermission
              - sns:DeleteTopic
              - sns:GetTopicAttributes
              - sns:ListSubscriptionsByTopic
              - sns:Publish
              - sns:Receive
              - sns:RemovePermission
              - sns:SetTopicAttributes
              - sns:Subscribe
            Condition:
              StringEquals:
                AWS:SourceOwner: !Ref AWS::AccountId
            Effect: Allow
            Principal:
              AWS: "*"
            Resource: !Ref CloudFormationNotificationSnsTopic
            Sid: OwnerAllAccess
        Version: "2012-10-17"
      Topics:
        - !Ref CloudFormationNotificationSnsTopic
  CloudFormationNotificationHandlerLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/cloudformation-notification-handler/
      Description: >-
        Handles notifications sent by CloudFormation about stack updates
      Environment:
        Variables:
          SLACK_MESSAGE_RELAY_TOPIC_ARN: !Ref SlackMessageRelaySnsTopic
      Events:
        SnsMessages:
          Properties:
            Topic: !Ref CloudFormationNotificationSnsTopic
          Type: SNS
      Handler: index.handler
      MemorySize: 128
      Policies:
        - !Ref SlackRelaySnsPublishOnlyAccessPolicy
      Runtime: nodejs12.x
      Tags:
        Project: Infrastructure
        "prx:cloudformation:stack-name": !Ref AWS::StackName
        "prx:cloudformation:stack-id": !Ref AWS::StackId
      Timeout: 10
  CloudFormationNotificationHandlerErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmName: "[Notif][Cfn][Lambda] Elevated error volume"
      AlarmActions:
        - !Ref OpsWarnMessagesSnsTopic
      InsufficientDataActions:
        - !Ref OpsWarnMessagesSnsTopic
      OKActions:
        - !Ref OpsWarnMessagesSnsTopic
      AlarmDescription: >-
        CloudFormation notifications function has encountered several
        invocation errors
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 120
      Statistic: Sum
      Threshold: 2
      TreatMissingData: notBreaching
      Dimensions:
        - Name: FunctionName
          Value: !Ref CloudFormationNotificationHandlerLambdaFunction
  CloudFormationNotificationHandlerLambdaFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${CloudFormationNotificationHandlerLambdaFunction}
      RetentionInDays: 5
  # CloudWatch Alarms Notifications
  CloudWatchAlarmNotificationHandlerLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/cloudwatch-alarm-notification-handler/
      Description: >-
        Handles notifications from CloudWatch Alarms
      Environment:
        Variables:
          SLACK_MESSAGE_RELAY_TOPIC_ARN: !Ref SlackMessageRelaySnsTopic
          CROSS_ACCOUNT_CLOUDWATCH_ALARM_IAM_ROLE_NAME: !Ref CrossAccountCloudWatchAlarmReaderRoleName
      Events:
        DebugMessages:
          Properties:
            Topic: !Ref OpsDebugMessagesSnsTopic
          Type: SNS
        InfoMessages:
          Properties:
            Topic: !Ref OpsInfoMessagesSnsTopic
          Type: SNS
        WarnMessages:
          Properties:
            Topic: !Ref OpsWarnMessagesSnsTopic
          Type: SNS
        ErrorMessages:
          Properties:
            Topic: !Ref OpsErrorMessagesSnsTopic
          Type: SNS
        FatalMessages:
          Properties:
            Topic: !Ref OpsFatalMessagesSnsTopic
          Type: SNS
      Handler: lambda_function.lambda_handler
      MemorySize: 192
      Role: !GetAtt LambdaBasicExecutionIamRole.Arn
      Runtime: python3.6
      Tags:
        Project: Infrastructure
        "prx:cloudformation:stack-name": !Ref AWS::StackName
        "prx:cloudformation:stack-id": !Ref AWS::StackId
      Timeout: 10
  CloudWatchAlarmNotificationHandlerErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmName: "[Notif][Alarms][Lambda] Elevated error volume"
      AlarmActions:
        - !Ref OpsWarnMessagesSnsTopic
      InsufficientDataActions:
        - !Ref OpsWarnMessagesSnsTopic
      OKActions:
        - !Ref OpsWarnMessagesSnsTopic
      AlarmDescription: >-
        CloudWatch Alarms notifications function has encountered several
        invocation errors
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 120
      Statistic: Sum
      Threshold: 2
      TreatMissingData: notBreaching
      Dimensions:
        - Name: FunctionName
          Value: !Ref CloudWatchAlarmNotificationHandlerLambdaFunction
  CloudWatchAlarmNotificationHandlerLambdaFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${CloudWatchAlarmNotificationHandlerLambdaFunction}
      RetentionInDays: 5
  OpsDebugMessagesSnsTopic:
    Type: AWS::SNS::Topic
  OpsDebugMessagesSnsTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Id: OrganizationAcccessPolicy
        Statement:
          - Action: sns:Publish
            Condition:
              ArnLike:
                aws:SourceArn: "arn:aws:cloudwatch:*:*:alarm:*"
            Effect: Allow
            Principal:
              AWS: "*"
            Resource: !Ref OpsDebugMessagesSnsTopic
            Sid: CloudWatchAlarmsPublish
        Version: "2012-10-17"
      Topics:
        - !Ref OpsDebugMessagesSnsTopic
  OpsInfoMessagesSnsTopic:
    Type: AWS::SNS::Topic
  OpsInfoMessagesSnsTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Id: OrganizationAcccessPolicy
        Statement:
          - Action: sns:Publish
            Condition:
              ArnLike:
                aws:SourceArn: "arn:aws:cloudwatch:*:*:alarm:*"
            Effect: Allow
            Principal:
              AWS: "*"
            Resource: !Ref OpsDebugMessagesSnsTopic
            Sid: CloudWatchAlarmsPublish
        Version: "2012-10-17"
      Topics:
        - !Ref OpsInfoMessagesSnsTopic
  OpsWarnMessagesSnsTopic:
    Type: AWS::SNS::Topic
  OpsWarnMessagesSnsTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Id: OrganizationAcccessPolicy
        Statement:
          - Action: sns:Publish
            Condition:
              ArnLike:
                aws:SourceArn: "arn:aws:cloudwatch:*:*:alarm:*"
            Effect: Allow
            Principal:
              AWS: "*"
            Resource: !Ref OpsDebugMessagesSnsTopic
            Sid: CloudWatchAlarmsPublish
        Version: "2012-10-17"
      Topics:
        - !Ref OpsWarnMessagesSnsTopic
  OpsErrorMessagesSnsTopic:
    Type: AWS::SNS::Topic
  OpsErrorMessagesSnsTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Id: OrganizationAcccessPolicy
        Statement:
          - Action: sns:Publish
            Condition:
              ArnLike:
                aws:SourceArn: "arn:aws:cloudwatch:*:*:alarm:*"
            Effect: Allow
            Principal:
              AWS: "*"
            Resource: !Ref OpsDebugMessagesSnsTopic
            Sid: CloudWatchAlarmsPublish
        Version: "2012-10-17"
      Topics:
        - !Ref OpsErrorMessagesSnsTopic
  OpsFatalMessagesSnsTopic:
    Type: AWS::SNS::Topic
  OpsFatalMessagesSnsTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Id: OrganizationAcccessPolicy
        Statement:
          - Action: sns:Publish
            Condition:
              ArnLike:
                aws:SourceArn: "arn:aws:cloudwatch:*:*:alarm:*"
            Effect: Allow
            Principal:
              AWS: "*"
            Resource: !Ref OpsDebugMessagesSnsTopic
            Sid: CloudWatchAlarmsPublish
        Version: "2012-10-17"
      Topics:
        - !Ref OpsFatalMessagesSnsTopic

  # Fatal email redundancy
  OpsFatalMessagesSnsTopicEmailSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Ref FatalNotificationEmailAddress
      Protocol: email
      TopicArn: !Ref OpsFatalMessagesSnsTopic

  # Shared IAM Roles
  LambdaBasicExecutionIamRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: CloudWatchAlarmPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "cloudwatch:DescribeAlarmHistory"
                  - "cloudwatch:DescribeAlarms"
                Resource:
                  - "*"
        - PolicyName: StsPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "sts:AssumeRole"
                Resource:
                  - "*"
        - PolicyName: SnsPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "sns:Publish"
                Resource:
                  - !Ref SlackMessageRelaySnsTopic
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Tags:
        - Key: Project
          Value: Infrastructure
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId

Outputs:
  # Slack relay topic used by many other notification handlers
  SlackMessageRelaySnsTopicArn:
    Value: !Ref SlackMessageRelaySnsTopic
    Export:
      Name: !Sub ${AWS::StackName}-SlackMessageRelaySnsTopicArn
  # Log-level topics used by CloudWatch Alarms
  OpsDebugMessagesSnsTopicArn:
    Value: !Ref OpsDebugMessagesSnsTopic
    Export:
      Name: !Sub ${AWS::StackName}-OpsDebugMessagesSnsTopicArn
  OpsInfoMessagesSnsTopicArn:
    Value: !Ref OpsInfoMessagesSnsTopic
    Export:
      Name: !Sub ${AWS::StackName}-OpsInfoMessagesSnsTopicArn
  OpsWarnMessagesSnsTopicArn:
    Value: !Ref OpsWarnMessagesSnsTopic
    Export:
      Name: !Sub ${AWS::StackName}-OpsWarnMessagesSnsTopicArn
  OpsErrorMessagesSnsTopicArn:
    Value: !Ref OpsErrorMessagesSnsTopic
    Export:
      Name: !Sub ${AWS::StackName}-OpsErrorMessagesSnsTopicArn
  OpsFatalMessagesSnsTopicArn:
    Value: !Ref OpsFatalMessagesSnsTopic
    Export:
      Name: !Sub ${AWS::StackName}-OpsFatalMessagesSnsTopicArn
  # Service-specific notification handler topics
  CloudFormationNotificationSnsTopic:
    Value: !Ref CloudFormationNotificationSnsTopic
    Export:
      Name: !Sub ${AWS::StackName}-CloudFormationNotificationSnsTopic
