# notifications/template.yml
AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Description: >-
  Creates foundational resources needed to handle infrastructure-related
  messaging and notifications

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: SNS Topic Access
        Parameters:
          - SnsTopicPolicyPublishAllowanceAccountIds
          - SnsTopicPolicyPublishAllowanceOrganizationId
    ParameterLabels:
      SnsTopicPolicyPublishAllowanceAccountIds:
        default: "SNS:Publish Account IDs"
      SnsTopicPolicyPublishAllowanceOrganizationId:
        default: "SNS:Publish Organization ID"

Parameters:
  SnsTopicPolicyPublishAllowanceAccountIds:
    Type: CommaDelimitedList
    Description: >-
      Account IDs that will be given SNS:Publish access to notification SNS
      topics. This grants access to all resources/roles/etc in that account.
    Default: ""
  SnsTopicPolicyPublishAllowanceOrganizationId:
    Type: String
    Description: >-
      Organization ID that will be given SNS:Publish access to notification SNS
      topics. This grants access to all resources/roles/etc in that
      organization.
    Default: ""
  SlackMessageRelaySnsTopicArn:
    Type: String

Conditions:
  IsUsEast1: !Equals [!Ref "AWS::Region", us-east-1]

Resources:
  # Slack message relay
  # This is a LEGACY topic and should no longer be used
  SlackMessageRelaySnsTopic:
    Type: AWS::SNS::Topic
    Condition: IsUsEast1
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      Tags:
        - Key: Project
          Value: Infrastructure
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
  SlackMessageRelaySnsTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Condition: IsUsEast1
    Properties:
      PolicyDocument:
        Id: OrganizationAcccessPolicy
        Version: "2012-10-17"
        Statement:
          - Sid: AccountPublish
            Effect: Allow
            Principal:
              AWS: !Ref SnsTopicPolicyPublishAllowanceAccountIds
            Action:
              - sns:Publish
            Resource: !Ref SlackMessageRelaySnsTopic
          - Sid: OrganizationPublish
            Effect: Allow
            Principal:
              AWS: "*"
            Action:
              - sns:Publish
            Resource: !Ref SlackMessageRelaySnsTopic
            Condition:
              StringEquals:
                "aws:PrincipalOrgID": !Ref SnsTopicPolicyPublishAllowanceOrganizationId
          - Sid: OrganizationSubscribe
            Effect: Allow
            Principal:
              AWS: "*"
            Action:
              - sns:Subscribe
            Resource: !Ref SlackMessageRelaySnsTopic
            Condition:
              StringEquals:
                "aws:PrincipalOrgID": !Ref SnsTopicPolicyPublishAllowanceOrganizationId
          - Sid: OwnerAllAccess
            Effect: Allow
            Principal:
              AWS: "*"
            Action:
              - sns:GetTopicAttributes
              - sns:SetTopicAttributes
              - sns:AddPermission
              - sns:RemovePermission
              - sns:DeleteTopic
              - sns:Subscribe
              - sns:ListSubscriptionsByTopic
              - sns:Publish
              - sns:Receive
            Resource: !Ref SlackMessageRelaySnsTopic
            Condition:
              StringEquals:
                "AWS:SourceOwner": !Ref AWS::AccountId
      Topics:
        - !Ref SlackMessageRelaySnsTopic

  # CloudFormation notifications
  CloudFormationNotificationSnsTopic:
    Type: AWS::SNS::Topic
  CloudFormationNotificationSnsTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Id: OrganizationAcccessPolicy
        Statement:
          - Action:
              - sns:AddPermission
              - sns:DeleteTopic
              - sns:GetTopicAttributes
              - sns:ListSubscriptionsByTopic
              - sns:Publish
              - sns:Receive
              - sns:RemovePermission
              - sns:SetTopicAttributes
              - sns:Subscribe
            Condition:
              StringEquals:
                AWS:SourceOwner: !Ref AWS::AccountId
            Effect: Allow
            Principal:
              AWS: "*"
            Resource: !Ref CloudFormationNotificationSnsTopic
            Sid: OwnerAllAccess
        Version: "2012-10-17"
      Topics:
        - !Ref CloudFormationNotificationSnsTopic
  CloudFormationNotificationHandlerLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/cloudformation-notification-handler/
      Description: >-
        Handles notifications sent by CloudFormation about stack updates
      Environment:
        Variables:
          SLACK_MESSAGE_RELAY_TOPIC_ARN: !Ref SlackMessageRelaySnsTopicArn
      Events:
        SnsMessages:
          Properties:
            Topic: !Ref CloudFormationNotificationSnsTopic
          Type: SNS
      Handler: index.handler
      MemorySize: 128
      Policies:
        - Statement:
            - Action: sns:Publish
              Effect: Allow
              Resource: !Ref SlackMessageRelaySnsTopicArn
          Version: "2012-10-17"
      Runtime: nodejs14.x
      Tags:
        Project: Infrastructure
        "prx:cloudformation:stack-name": !Ref AWS::StackName
        "prx:cloudformation:stack-id": !Ref AWS::StackId
      Timeout: 10
  CloudFormationNotificationHandlerErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub WARN [Notifications] CloudFormation notifications <prod> INVOCATIONS ERRORS (${AWS::StackName})
      AlarmDescription: >-
        CloudFormation notifications function has encountered several
        invocation errors
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref CloudFormationNotificationHandlerLambdaFunction
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 120
      Statistic: Sum
      Threshold: 2
      TreatMissingData: notBreaching
  CloudFormationNotificationHandlerLambdaFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${CloudFormationNotificationHandlerLambdaFunction}
      RetentionInDays: 5

Outputs:
  # Slack relay topic used by many other notification handlers
  SlackMessageRelaySnsTopicArn:
    Condition: IsUsEast1
    Value: !Ref SlackMessageRelaySnsTopic
    Export:
      Name: !Sub ${AWS::StackName}-SlackMessageRelaySnsTopicArn
  # Service-specific notification handler topics
  CloudFormationNotificationSnsTopic:
    Value: !Ref CloudFormationNotificationSnsTopic
    Export:
      Name: !Sub ${AWS::StackName}-CloudFormationNotificationSnsTopic
