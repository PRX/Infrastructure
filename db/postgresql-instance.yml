# db/postgresql-instance.yml
AWSTemplateFormatVersion: "2010-09-09"
Description: Create an RDS Postgres instance
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: General
        Parameters:
          - UniqueName
          - DBInstanceIdentifier
          - ProjectName
          - EnvironmentType
      - Label:
          default: RDS Setup
        Parameters:
          - EngineVersion
          - DBInstanceClass
          - AllocatedStorage
          - BackupRetentionPeriod
      - Label:
          default: DB Setup
        Parameters:
          - MasterUsername
          - MasterUserPassword
      - Label:
          default: Networking
        Parameters:
          - VPCStackName
      - Label:
          default: Alarms
        Parameters:
          - AlarmSnsTopic
Parameters:
  AlarmSnsTopic:
    Type: String
    Description: Optional topic arn for CloudWatch RDS alarms
  AllocatedStorage:
    Type: Number
    Description: The size of the database (GB)
    Default: 100
    AllowedValues: [100, 200, 300, 400, 500]
  BackupRetentionPeriod:
    Type: Number
    Description: Days to retain backups (0 = no backups)
    Default: 7
    AllowedValues: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]
  DBInstanceClass:
    Type: String
    Description: The database instance type
    Default: db.t3.small
    AllowedValues: ["db.t3.micro", "db.t3.small", "db.t3.medium", "db.t3.large", "db.t3.xlarge", "db.m5.large", "db.m5.xlarge", "db.r5.large", "db.r5.xlarge"]
  DBInstanceIdentifier:
    Type: String
    Description: Unique name for the database instance (lower-case-dashed; SHOULD include env name)
    AllowedPattern: ^[a-z][a-z0-9\-]*$
  EngineVersion:
    Type: String
    Description: Postgres version to use
    AllowedValues: ["9.4.24", "9.5.19", "9.6.15", "10.10", "11.5"]
  EnvironmentType:
    Type: String
    Description: Environment for this database
    Default: Staging
    AllowedValues: ["Testing", "Beta", "Staging", "Production"]
  MasterUsername:
    Type: String
    Description: Postgres root user name
  MasterUserPassword:
    Type: String
    Description: Postgres root user password
    NoEcho: true
  ProjectName:
    Type: String
    Description: Value for the project tag
    MinLength: 1
    MaxLength: 256
  UniqueName:
    Type: String
    Description: Unique name for associated resources (CamelCase; should not include env name)
    AllowedPattern: ^[a-zA-Z][a-zA-Z0-9\-]*$
  VPCStackName:
    Type: String
    Description: VPC stack to launch the database into
    Default: DataVPCStack
Conditions:
  CreateAlarms: !Not [!Equals [!Ref AlarmSnsTopic, ""]]
  IsProduction: !Equals [!Ref EnvironmentType, Production]
Mappings:
  EngineVersionMap:
    "9.4.24":
      family: postgres9.4
    "9.5.19":
      family: postgres9.5
    "9.6.15":
      family: postgres9.6
    "10.10":
      family: postgres10
    "11.5":
      family: postgres11
  StorageAlarmMap:
    "100":
      threshold: 10
    "200":
      threshold: 20
    "300":
      threshold: 30
    "400":
      threshold: 40
    "500":
      threshold: 50
  ConnectionAlarmMap:
    # for pg 10/11 max_connections = LEAST({DBInstanceClassMemory/9531392},5000)
    db.t3.micro:
      # 1 GiB = 1073741824 B -> 112 conns
      threshold: 90
    db.t3.small:
      # 2 GiB = 2147483648 B -> 225 conns
      threshold: 180
    db.t3.medium:
      # 4 GiB = 4294967296 B -> 450 conns
      threshold: 400
    db.t3.large:
      # 8 GiB  = 8589934592 B -> 901 conns
      threshold: 800
    db.t3.xlarge:
      # 16 GiB  = 17179869184 B -> 1802 conns
      threshold: 1600
    db.m5.large:
      # 8 GiB  = 8589934592 B -> 901 conns
      threshold: 800
    db.m5.xlarge:
      # 16 GiB  = 17179869184 B -> 1802 conns
      threshold: 1600
    db.r5.large:
      # 16 GiB  = 17179869184 B -> 1802 conns
      threshold: 1600
    db.r5.xlarge:
      # 32 GiB = 34359738368 B -> 3604 conns
      threshold: 3000
Resources:
  PostgresInstance:
    Type: "AWS::RDS::DBInstance"
    DeletionPolicy: Retain
    Properties:
      AllocatedStorage: !Ref AllocatedStorage
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: false
      BackupRetentionPeriod: !Ref BackupRetentionPeriod
      CopyTagsToSnapshot: true
      DBInstanceClass: !Ref DBInstanceClass
      DBInstanceIdentifier: !Ref DBInstanceIdentifier
      DBParameterGroupName: !Ref PostgresParameterGroup
      DBSubnetGroupName: !Ref PostgresSubnetGroup
      DeleteAutomatedBackups: true
      DeletionProtection: true
      EnablePerformanceInsights: !If [IsProduction, true, false]
      Engine: postgres
      EngineVersion: !Ref EngineVersion
      MasterUsername: !Ref MasterUsername
      MasterUserPassword: !Ref MasterUserPassword
      MultiAZ: !If [IsProduction, true, false]
      PerformanceInsightsRetentionPeriod: !If [IsProduction, 7, !Ref "AWS::NoValue"]
      PreferredBackupWindow: "08:00-08:30"
      PreferredMaintenanceWindow: "tue:06:15-tue:06:45"
      PubliclyAccessible: true
      StorageType: gp2
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
      VPCSecurityGroups: [!Ref PostgresVPCSecurityGroup]
  PostgresParameterGroup:
    Type: "AWS::RDS::DBParameterGroup"
    DeletionPolicy: Retain
    Properties:
      Description: !Sub ${UniqueName} ${EnvironmentType} Parameter Group
      Family: !FindInMap [EngineVersionMap, !Ref EngineVersion, family]
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
  PostgresSubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    DeletionPolicy: Retain
    Properties:
      DBSubnetGroupDescription: !Sub ${UniqueName} ${EnvironmentType} Subnet Group
      DBSubnetGroupName: !Sub ${UniqueName}-${EnvironmentType}-Postgres
      SubnetIds:
        - Fn::ImportValue:
            !Sub ${VPCStackName}-Subnet1
        - Fn::ImportValue:
            !Sub ${VPCStackName}-Subnet2
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
  PostgresVPCSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: Retain
    Properties:
      GroupName: !Sub ${UniqueName}${EnvironmentType}Postgres
      GroupDescription: !Sub ${UniqueName} ${EnvironmentType} Postgres Security Group
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: "tcp"
          FromPort: 5432
          ToPort: 5432
        - CidrIpv6: "::/0"
          IpProtocol: "tcp"
          FromPort: 5432
          ToPort: 5432
      Tags:
        - Key: Name
          Value: !Sub ${UniqueName}${EnvironmentType}Postgres
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
      VpcId:
        Fn::ImportValue: !Sub ${VPCStackName}-VPC
  DiskSpaceAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CreateAlarms
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[RDS][${UniqueName}][${EnvironmentType}] Disk Space"
      AlarmActions: [!Ref AlarmSnsTopic]
      InsufficientDataActions: [!Ref AlarmSnsTopic]
      OKActions: [!Ref AlarmSnsTopic]
      AlarmDescription: Free Storage Space getting low
      ComparisonOperator: LessThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: FreeStorageSpace
      Namespace: AWS/RDS
      Period: 300
      Statistic: Average
      Threshold: !FindInMap [StorageAlarmMap, !Ref AllocatedStorage, threshold]
      Unit: Gigabytes
      TreatMissingData: notBreaching
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref PostgresInstance
  MaxConnectionsAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CreateAlarms
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[RDS][${UniqueName}][${EnvironmentType}] Database Connections"
      AlarmActions: [!Ref AlarmSnsTopic]
      InsufficientDataActions: [!Ref AlarmSnsTopic]
      OKActions: [!Ref AlarmSnsTopic]
      AlarmDescription: Database connections nearing max
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      MetricName: DatabaseConnections
      Namespace: AWS/RDS
      Period: 300
      Statistic: Maximum
      Threshold: !FindInMap [ConnectionAlarmMap, !Ref DBInstanceClass, threshold]
      Unit: Count
      TreatMissingData: notBreaching
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref PostgresInstance
Outputs:
  InstanceId:
    Description: InstanceId of the newly created RDS Instance
    Value: !Ref PostgresInstance
