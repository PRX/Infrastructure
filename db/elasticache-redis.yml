AWSTemplateFormatVersion: "2010-09-09"
Description: >-
  AWS CloudFormation Redis Template: Template to create Elasticache Redis cluster
Parameters:
  ClusterName:
    Description: eg. production-myappname, staging-otherappname
    Type: String
  ProjectTag:
    Description: eg. myapp.prx.org
    Type: String
  EnvironmentType:
    Type: String
    AllowedValues:
      - Staging
      - Production
  CacheNodeType:
    Description: The cache instance type
    Type: String
    Default: cache.t2.micro
    AllowedValues:
      - cache.t2.micro    # $0.017
      - cache.t2.small    # $0.034
      - cache.t2.medium   # $0.068
      - cache.m4.large    # $0.156
      - cache.m4.xlarge   # $0.311
      - cache.m4.2xlarge  # $0.623
      - cache.m4.4xlarge  # $1.245
      - cache.m4.10xlarge # $3.112
      - cache.r4.large    # $0.288
      - cache.r4.xlarge   # $0.455
      - cache.r4.2xlarge  # $0.910
      - cache.r4.4xlarge  # $1.820
      - cache.r4.8xlarge  # $3.640
      - cache.r4.16xlarge # $7.280
      - cache.r3.large    # $0.228
      - cache.r3.xlarge   # $0.455
      - cache.r3.2xlarge  # $0.910
      - cache.r3.4xlarge  # $1.820
      - cache.r3.8xlarge  # $3.640
  NumShards:
    Description: The shard count
    Type: Number
    Default: 1
    AllowedValues:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
  NumReplicas:
    Description: The number of replicas per shard
    Type: Number
    Default: 1
    AllowedValues:
      - 0
      - 1
      - 2
      - 3
  VPCStack:
    Description: VPC stack to add this cache into
    Type: String
    Default: DataVPCStack
Conditions:
  MultiZone: !Not [!Equals [!Ref NumReplicas, 0]]
Resources:
  ElasticacheSubnetGroup:
    Type: "AWS::ElastiCache::SubnetGroup"
    Properties:
      CacheSubnetGroupName: !Sub Platform-${EnvironmentType}-${AWS::StackName}-cache
      Description: !Ref EnvironmentType
      SubnetIds:
        - Fn::ImportValue:
            !Sub ${VPCStack}-Subnet1
        - Fn::ImportValue:
            !Sub ${VPCStack}-Subnet2
  ElasticacheSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      VpcId:
        Fn::ImportValue:
          !Sub ${VPCStack}-VPC
      GroupDescription: "Elasticache Security Group"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: "tcp"
          FromPort: 6379
          ToPort: 6379
  ElasticacheCluster:
    Type: "AWS::ElastiCache::CacheCluster"
    Properties:
      AutoMinorVersionUpgrade: false
      CacheNodeType: !Ref CacheNodeType
      CacheSubnetGroupName: !Sub Platform-${EnvironmentType}-${AWS::StackName}-cache
      ClusterName: !Ref ClusterName
      Engine: "redis"
      EngineVersion: "4.0.10"
      NumCacheNodes: !Ref NumShards
      PreferredMaintenanceWindow: mon:08:00-mon:09:00
      SnapshotRetentionLimit: 7
      SnapshotWindow: 06:00-07:00
      VpcSecurityGroupIds:
        - !GetAtt ElasticacheSecurityGroup.GroupId
      Tags:
        - Key: Project
          Value: !Ref ProjectTag
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: 'prx:cloudformation:stack-name'
          Value: !Ref AWS::StackName
        - Key: 'prx:cloudformation:stack-id'
          Value: !Ref AWS::StackId
  ElasticacheReplication:
    Type: "AWS::ElastiCache::ReplicationGroup"
    Properties:
      AutomaticFailoverEnabled: !If [MultiZone, true, false]
      NodeGroupConfiguration:
        - ReplicaCount: !Ref NumReplicas
      NumNodeGroups: !Ref NumShards
      ReplicationGroupDescription: Redis replication group
      PrimaryClusterId: !Ref ElasticacheCluster
Outputs:
  RedisEndpoint:
    Description: Endpoint of the created redis cluster
    Value: !GetAtt ElasticacheCluster.RedisEndpoint.Address
  RedisPort:
    Description: Port number of the created redis cluster
    Value: !GetAtt ElasticacheCluster.RedisEndpoint.Port
