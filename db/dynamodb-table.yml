# db/dynamodb-table.yml
AWSTemplateFormatVersion: "2010-09-09"
Description: >-
  Create a simple primary-key-lookup DynamoDB table
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Table Definition
        Parameters:
          - TableName
          - PrimaryKey
          - PrimaryType
          - ExpirationField
      - Label:
          default: Optional Permissions
        Parameters:
          - ForeignAccountId
          - ForeignRoleName
      - Label:
          default: Capacity
        Parameters:
          - BillingMode
          - ProvisionedReadCapacityUnits
          - ProvisionedWriteCapacityUnits
          - EnableAutoScaling
          - ReadCapacityMin
          - ReadCapacityMax
          - WriteCapacityMin
          - WriteCapacityMax
          - AutoScalingCooldown
          - ReadUtilizationScalingTarget
          - WriteUtilizationScalingTarget
      - Label:
          default: Metadata
        Parameters:
          - EnvironmentType
          - ProjectTag
    ParameterLabels:
      TableName:
        default: Table name
      PrimaryKey:
        default: Primary key field
      PrimaryType:
        default: Primary key type
      ExpirationField:
        default: Field to enable expiration on
      ForeignAccountId:
        default: Foreign account id
      ForeignRoleName:
        default: Role name in foreign account
      EnvironmentType:
        default: Environment type
      ProjectTag:
        default: Project tag
      BillingMode:
        default: Billing mode
      ProvisionedReadCapacityUnits:
        default: Provisioned read capacity (RCU)
      ProvisionedWriteCapacityUnits:
        default: Provisioned write capacity (WCU)
      EnableAutoScaling:
        default: Enable auto scaling
      WriteCapacityMin:
        default: Write capacity minimum (WCU)
      WriteCapacityMax:
        default: Write capacity maximum (WCU)
      ReadCapacityMin:
        default: Read capacity minimum (RCU)
      ReadCapacityMax:
        default: Read capacity maximum (RCU)
      AutoScalingCooldown:
        default: Auto scaling cooldown period
      WriteUtilizationScalingTarget:
        default: Write capacity utilization scaling target (%)
      ReadUtilizationScalingTarget:
        default: Read capacity utilization scaling target (%)
Parameters:
  TableName:
    Type: String
    Description: The unique DynamoDB table name.
  PrimaryKey:
    Type: String
    Description: The name of the primary key field
  PrimaryType:
    Type: String
    Description: The type of the primary key field
    AllowedValues:
      - String
      - Numeric
      - Binary
  ExpirationField:
    Type: String
    Description: Optionally enable Time-To-Live on this field
  ForeignAccountId:
    Type: String
    Description: Optional account to enable write access to
  ForeignRoleName:
    Type: String
    Description: Optional role name within that account (MUST EXIST)
  EnvironmentType:
    Type: String
    Description: Environment this table is used by.
    AllowedValues:
      - Testing
      - Staging
      - Production
  BillingMode:
    Type: String
    AllowedValues:
      - PAY_PER_REQUEST
      - PROVISIONED
    Default: PAY_PER_REQUEST
  ProvisionedReadCapacityUnits:
    Type: Number
    Default: 0
    Description: Only used under provisioned billing
  ProvisionedWriteCapacityUnits:
    Type: Number
    Default: 0
    Description: Only used under provisioned billing
  EnableAutoScaling:
    Type: String
    AllowedValues:
      - "True"
      - "False"
    Default: "False"
    Description: Only used under provisioned billing
  WriteCapacityMin:
    Type: Number
    Default: 0
    Description: Only used under provisioned billing with auto scaling
  WriteCapacityMax:
    Type: Number
    Default: 0
    Description: Only used under provisioned billing with auto scaling
  ReadCapacityMin:
    Type: Number
    Default: 0
    Description: Only used under provisioned billing with auto scaling
  ReadCapacityMax:
    Type: Number
    Default: 0
    Description: Only used under provisioned billing with auto scaling
  AutoScalingCooldown:
    Type: Number
    Default: 60
    Description: Only used under provisioned billing with auto scaling
  WriteUtilizationScalingTarget:
    Type: Number
    Default: 70
    Description: Only used under provisioned billing with auto scaling
  ReadUtilizationScalingTarget:
    Type: Number
    Default: 70
    Description: Only used under provisioned billing with auto scaling
  ProjectTag:
    Type: String
    Description: The value used for the Project tag on resources that support tagging.
  WarnMessagesSnsTopicArn:
    Type: String
Conditions:
  HasExpirationField: !Not [!Equals [!Ref ExpirationField, ""]]
  HasForeignAccount: !Not [!Equals [!Ref ForeignAccountId, ""]]
  HasForeignRole: !Not [!Equals [!Ref ForeignRoleName, ""]]
  HasProvisionedBilling: !Equals [!Ref BillingMode, "PROVISIONED"]
  AutoScalingRequested: !Equals [!Ref EnableAutoScaling, "True"]
  CreateAutoScaling: !And
    - !Condition AutoScalingRequested
    - !Condition HasProvisionedBilling
  CreateAlarms: !Not [!Equals [!Ref WarnMessagesSnsTopicArn, ""]]
Mappings:
  DataTypesMap:
    String:
      Symbol: S
    Numeric:
      Symbol: N
    Binary:
      Symbol: B
Resources:
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: !Ref PrimaryKey
          AttributeType: !FindInMap [DataTypesMap, !Ref PrimaryType, Symbol]
      # https://github.com/awslabs/cfn-python-lint/issues/509
      BillingMode: !Ref BillingMode
      KeySchema:
        - AttributeName: !Ref PrimaryKey
          KeyType: HASH
      TableName: !Ref TableName
      ProvisionedThroughput: !If
        - HasProvisionedBilling
        - ReadCapacityUnits: !Ref ProvisionedReadCapacityUnits
          WriteCapacityUnits: !Ref ProvisionedWriteCapacityUnits
        - !Ref "AWS::NoValue"
      Tags:
        - Key: Project
          Value: !Ref ProjectTag
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
      TimeToLiveSpecification:
        AttributeName: !If [HasExpirationField, !Ref "ExpirationField", !Ref "AWS::NoValue"]
        Enabled: !If [HasExpirationField, true, false]
  CrossAccountAccessRole:
    Type: "AWS::IAM::Role"
    Condition: HasForeignAccount
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "sts:AssumeRole"
            Principal: !If
              - HasForeignRole
              - AWS: !Sub "arn:aws:iam::${ForeignAccountId}:role/${ForeignRoleName}"
              - AWS: !Ref ForeignAccountId
      Path: "/"
      Policies:
        - PolicyName: DynamoDBWritePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "dynamodb:BatchGetItem"
                  - "dynamodb:BatchWriteItem"
                  - "dynamodb:ConditionCheck"
                  - "dynamodb:DeleteItem"
                  - "dynamodb:DescribeTable"
                  - "dynamodb:DescribeTimeToLive"
                  - "dynamodb:GetItem"
                  - "dynamodb:PutItem"
                  - "dynamodb:Query"
                  - "dynamodb:UpdateItem"
                Resource:
                  - !GetAtt DynamoDBTable.Arn
      Tags:
        - Key: Project
          Value: !Ref ProjectTag
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
  # Auto scaling
  TableWriteCapacityScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Condition: CreateAutoScaling
    Properties:
      MaxCapacity: !Ref WriteCapacityMax
      MinCapacity: !Ref WriteCapacityMin
      ResourceId: !Sub table/${DynamoDBTable}
      RoleARN: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable
      ScalableDimension: dynamodb:table:WriteCapacityUnits
      ServiceNamespace: dynamodb
  TableWriteCapacityScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: CreateAutoScaling
    Properties:
      PolicyName: TableWriteCapacityScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref TableWriteCapacityScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization
        ScaleInCooldown: !Ref AutoScalingCooldown
        ScaleOutCooldown: !Ref AutoScalingCooldown
        TargetValue: !Ref WriteUtilizationScalingTarget
  TableReadCapacityScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Condition: CreateAutoScaling
    Properties:
      MaxCapacity: !Ref ReadCapacityMax
      MinCapacity: !Ref ReadCapacityMin
      ResourceId: !Sub table/${DynamoDBTable}
      RoleARN: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable
      ScalableDimension: dynamodb:table:ReadCapacityUnits
      ServiceNamespace: dynamodb
  TableReadCapacityScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: CreateAutoScaling
    Properties:
      PolicyName: TableReadCapacityScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref TableReadCapacityScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization
        ScaleInCooldown: !Ref AutoScalingCooldown
        ScaleOutCooldown: !Ref AutoScalingCooldown
        TargetValue: !Ref ReadUtilizationScalingTarget
  # Alarms
  ScanThrottledRequestsAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateAlarms
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub ${AWS::StackName} Scan throttling
      AlarmActions:
        - !Ref WarnMessagesSnsTopicArn
      InsufficientDataActions:
        - !Ref WarnMessagesSnsTopicArn
      OKActions:
        - !Ref WarnMessagesSnsTopicArn
      AlarmDescription: Scan operations are being throttled
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      MetricName: ThrottledRequests
      Namespace: AWS/DynamoDB
      Period: 60
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching
      Dimensions:
        - Name: TableName
          Value: !Ref DynamoDBTable
        - Name: Operation
          Value: Scan
  BatchGetItemThrottledRequestsAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateAlarms
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub ${AWS::StackName} BatchGetItem throttling
      AlarmActions:
        - !Ref WarnMessagesSnsTopicArn
      InsufficientDataActions:
        - !Ref WarnMessagesSnsTopicArn
      OKActions:
        - !Ref WarnMessagesSnsTopicArn
      AlarmDescription: BatchGetItem operations are being throttled
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      MetricName: ThrottledRequests
      Namespace: AWS/DynamoDB
      Period: 60
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching
      Dimensions:
        - Name: TableName
          Value: !Ref DynamoDBTable
        - Name: Operation
          Value: BatchGetItem
  BatchWriteItemThrottledRequestsAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateAlarms
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub ${AWS::StackName} BatchWriteItem throttling
      AlarmActions:
        - !Ref WarnMessagesSnsTopicArn
      InsufficientDataActions:
        - !Ref WarnMessagesSnsTopicArn
      OKActions:
        - !Ref WarnMessagesSnsTopicArn
      AlarmDescription: BatchWriteItem operations are being throttled
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      MetricName: ThrottledRequests
      Namespace: AWS/DynamoDB
      Period: 60
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching
      Dimensions:
        - Name: TableName
          Value: !Ref DynamoDBTable
        - Name: Operation
          Value: BatchWriteItem
  UpdateItemThrottledRequestsAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateAlarms
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub ${AWS::StackName} UpdateItem throttling
      AlarmActions:
        - !Ref WarnMessagesSnsTopicArn
      InsufficientDataActions:
        - !Ref WarnMessagesSnsTopicArn
      OKActions:
        - !Ref WarnMessagesSnsTopicArn
      AlarmDescription: UpdateItem operations are being throttled
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      MetricName: ThrottledRequests
      Namespace: AWS/DynamoDB
      Period: 60
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching
      Dimensions:
        - Name: TableName
          Value: !Ref DynamoDBTable
        - Name: Operation
          Value: UpdateItem
Outputs:
  RoleArn:
    Condition: HasForeignAccount
    Description: The created DynamoDB table ARN
    Value: !GetAtt CrossAccountAccessRole.Arn
  TableArn:
    Description: The created DynamoDB table ARN
    Value: !GetAtt DynamoDBTable.Arn
