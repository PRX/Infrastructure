# TODO stacks/metrics.prx.org.yml temp-aurora-pg-test
AWSTemplateFormatVersion: "2010-09-09"

Description: >-
  Creates a Aurora database cluster, in an existing VPC. If the cluster is a
  primary cluster, it also creates the Aurora global cluster, which secondary
  clusters can be added to.

Parameters:
  GlobalClusterIdentifier:
    Type: String
    Description: >-
      (optional) The global cluster identifier that this DB cluster will belong
      to. If this parameter is excluded, this will be treated as the primary
      cluser, and a new global cluster will be created.
  DbClusterMasterUsername:
    Type: String
    Description: >-
      This value is required for primary clusters, and ignored for secondary
      clusters
  DbClusterMasterUserPassword:
    Type: String
    Description: >-
      This value is required for primary clusters, and ignored for secondary
      clusters
  EnvironmentType:
    Type: String
    AllowedValues:
      - Staging
      - Production
  SharedVpcId:
    Type: AWS::EC2::VPC::Id
  Subnet1Id:
    Type: AWS::EC2::Subnet::Id
  Subnet2Id:
    Type: AWS::EC2::Subnet::Id
  Subnet3Id:
    Type: AWS::EC2::Subnet::Id
  InstanceSecurityGroupId:
    Type: String

Conditions:
  IsSecondaryCluster: !Not [!Equals [!Ref GlobalClusterIdentifier, ""]]
  IsPrimaryCluster: !Not [Condition: IsSecondaryCluster]

Resources:
  GlobalCluster:
    Type: AWS::RDS::GlobalCluster
    Condition: IsPrimaryCluster
    Properties:
      DeletionProtection: true
      SourceDBClusterIdentifier: !Ref DbCluster

  DbCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      # BackupRetentionPeriod
      DBSubnetGroupName: !Ref DbSubnetGroup
      DeletionProtection: true
      # EnableCloudwatchLogsExports:
      #   - postgresql
      #   - upgrade
      Engine: aurora-postgresql
      EngineVersion: "12.4"
      GlobalClusterIdentifier: !If
        - IsSecondaryCluster
        - !Ref GlobalClusterIdentifier
        - !Ref AWS::NoValue
      MasterUsername: !If
        - IsPrimaryCluster
        - !Ref DbClusterMasterUsername
        - !Ref AWS::NoValue
      MasterUserPassword: !If
        - IsPrimaryCluster
        - !Ref DbClusterMasterUserPassword
        - !Ref AWS::NoValue
      # PreferredBackupWindow
      # PreferredMaintenanceWindow
      Tags:
        - { Key: Name, Value: !Sub "${AWS::StackName}_shared-pg-aurora" }
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      VpcSecurityGroupIds:
        - !Ref DbClusterSecurityGroup

  DbInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      Engine: aurora-postgresql
      DBClusterIdentifier: !Ref DbCluster
      # DBParameterGroupName: default.aurora-mysql5.7
      # PubliclyAccessible: 'true'
      DBInstanceClass: db.r6g.large
      # EnablePerformanceInsights
      # MonitoringInterval
      # MonitoringRoleArn
      # PerformanceInsightsRetentionPeriod
      # PreferredMaintenanceWindow
      # PubliclyAccessible
      Tags:
        - { Key: Name, Value: !Sub "${AWS::StackName}_shared-pg-aurora" }
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }

  DbSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: tktktk # TODO
      SubnetIds:
        - !Ref Subnet1Id
        - !Ref Subnet2Id
        - !Ref Subnet3Id
      Tags:
        - { Key: Name, Value: !Sub "${AWS::StackName}_shared-pg-aurora" }
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }

  DbClusterSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub >-
        Primary security group for the shared ${EnvironmentType} Aurora
        Postgresql database
      Tags:
        - { Key: Name, Value: !Sub "${AWS::StackName}_shared-pg-aurora" }
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      VpcId: !Ref SharedVpcId
  DbClusterInstanceIngressIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: >-
        Allows ingress traffic from the shared ALB ASG instance security group
      FromPort: 3306
      GroupId: !GetAtt DbClusterSecurityGroup.GroupId
      IpProtocol: tcp
      SourceSecurityGroupId: !Ref InstanceSecurityGroupId
      ToPort: 3306

Outputs:
  GlobalClusterIdentifier:
    Condition: IsPrimaryCluster
    Value: !Ref GlobalCluster
