# db/mysql-instance.yml
AWSTemplateFormatVersion: "2010-09-09"
Description: >-
  AWS CloudFormation RDS Template: Template to create RDS MySQL instance.
Parameters:
  DBInstance:
    Default: "name-me"
    Description: >-
      The database instance name.
      When replacement is required, must be different than existing instance name.
    Type: String
    MinLength: 0
    MaxLength: 64
    AllowedPattern: ^$|[a-zA-Z][a-zA-Z0-9\-]*
    ConstraintDescription: >-
      optional, must begin with a letter and contain only alphanumeric characters or dash.
  CreateDBName:
    Default: ""
    Description: The database schema name for create only
    Type: String
    MinLength: 0
    MaxLength: 64
    AllowedPattern: ^$|[a-zA-Z][a-zA-Z0-9\-_]*
    ConstraintDescription: >-
      must begin with a letter and contain only alphanumeric characters, dash,
      or underscore.
  DBUser:
    NoEcho: true
    Description: The database admin account username
    Type: String
    MinLength: 1
    MaxLength: 16
    AllowedPattern: ^[a-zA-Z][a-zA-Z0-9]*$
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    NoEcho: true
    Description: The database admin account password
    Type: String
    MinLength: 1
    MaxLength: 41
    AllowedPattern: ^[a-zA-Z0-9]+$
    ConstraintDescription: must contain only alphanumeric characters.
  DBAllocatedStorage:
    Default: 20
    Description: The size of the database (Gb)
    Type: Number
    MinValue: 5
    MaxValue: 1024
    ConstraintDescription: must be between 5 and 1024Gb.
  BackupRetentionPeriod:
    Type: Number
    Description: Days to retain backups (0 = no backups)
    Default: 7
    AllowedValues: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]
  DBInstanceClass:
    Description: The database instance type
    Type: String
    Default: db.t2.small
    AllowedValues:
      - db.t1.micro
      - db.m1.small
      - db.m1.medium
      - db.m1.large
      - db.m1.xlarge
      - db.m2.xlarge
      - db.m2.2xlarge
      - db.m2.4xlarge
      - db.m3.medium
      - db.m3.large
      - db.m3.xlarge
      - db.m3.2xlarge
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.4xlarge
      - db.m4.10xlarge
      - db.m5.large
      - db.m5.xlarge
      - db.m5.2xlarge
      - db.m5.4xlarge
      - db.m5.12xlarge
      - db.m5.24xlarge
      - db.r3.large
      - db.r3.xlarge
      - db.r3.2xlarge
      - db.r3.4xlarge
      - db.r3.8xlarge
      - db.m2.xlarge
      - db.m2.2xlarge
      - db.m2.4xlarge
      - db.cr1.8xlarge
      - db.t2.micro
      - db.t2.small
      - db.t2.medium
      - db.t2.large
    ConstraintDescription: must select a valid database instance type.
  DBSnapshot:
    Default: ""
    Description: >-
      optional, the DB snapshot that's used to restore the DB instance,
      not used in conjunction with CreateDBName
    Type: String
    AllowedPattern: ^[a-zA-Z]*[a-zA-Z0-9\-:]*$
    ConstraintDescription: >-
      must begin with a letter and contain only alphanumeric characters, dash,
      or colon.
  EngineVersion:
    Type: String
    Description: Mysql version to use
    AllowedValues: ["8.0.21", "8.0.20", "5.7.31", "5.7.30", "5.5.46"]
  EnvironmentType:
    Type: String
    AllowedValues:
      - Staging
      - Production
  VPCStack:
    Description: VPC stack to add this cache into
    Type: String
    Default: DataVPCStack
  CloudWatchWarnDiskSpace:
    Default: 0
    Description: >-
      amount of free disk space in bytes that will trigger warning, 0 means no alarm
    Type: Number
  CloudWatchWarnCPU:
    Default: 0
    Description: percent of CPU that will trigger warning, 0 means no alarm
    Type: Number
    MinValue: 0
    MaxValue: 100
    ConstraintDescription: must be between 0 and 100
  CloudWatchWarnConnections:
    Default: 0
    Description: amount of connections that will trigger warning, 0 means no alarm
    Type: Number
  OpsWarnSnsTopic:
    Default: ""
    Description: ops warn SNS Topic arn
    Type: String
  ProjectName:
    Type: String
    Description: Value for the project tag
    MinLength: 1
    MaxLength: 256
Conditions:
  UseSnapshot: !Not [!Equals [!Ref DBSnapshot, ""]]
  CreateDB: !Not [!Equals [!Ref CreateDBName, ""]]
  NamedInstance: !Not [!Equals [!Ref DBInstance, ""]]
  CreateCloudWatchWarnDiskSpace: !And
    - !Not [!Equals [!Ref OpsWarnSnsTopic, ""]]
    - !Not [!Equals [!Ref CloudWatchWarnDiskSpace, 0]]
  CreateCloudWatchWarnCPU: !And
    - !Not [!Equals [!Ref OpsWarnSnsTopic, ""]]
    - !Not [!Equals [!Ref CloudWatchWarnCPU, 0]]
  CreateCloudWatchWarnConnections: !And
    - !Not [!Equals [!Ref OpsWarnSnsTopic, ""]]
    - !Not [!Equals [!Ref CloudWatchWarnConnections, 0]]
  IsProduction: !Equals [!Ref EnvironmentType, Production]
Resources:
  RDSSubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      DBSubnetGroupName: !Sub Platform-${EnvironmentType}-${AWS::StackName}-db
      DBSubnetGroupDescription: !Ref EnvironmentType
      SubnetIds:
        - Fn::ImportValue: !Sub ${VPCStack}-Subnet1
        - Fn::ImportValue: !Sub ${VPCStack}-Subnet2
  MasterDB:
    Type: "AWS::RDS::DBInstance"
    DependsOn: RDSSubnetGroup
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      AllocatedStorage: !Ref DBAllocatedStorage
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: false
      BackupRetentionPeriod: !Ref BackupRetentionPeriod
      CopyTagsToSnapshot: true
      DBInstanceClass: !Ref DBInstanceClass
      DBInstanceIdentifier:
        !If [NamedInstance, !Ref DBInstance, !Ref "AWS::NoValue"]
      DBName: !If [CreateDB, !Ref CreateDBName, !Ref "AWS::NoValue"]
      DBSnapshotIdentifier:
        !If [UseSnapshot, !Ref DBSnapshot, !Ref "AWS::NoValue"]
      DBSubnetGroupName: !Sub Platform-${EnvironmentType}-${AWS::StackName}-db
      DeleteAutomatedBackups: true
      DeletionProtection: true
      EnablePerformanceInsights: !If [IsProduction, true, false]
      Engine: MySQL
      EngineVersion: !Ref EngineVersion
      MasterUsername: !If [UseSnapshot, !Ref "AWS::NoValue", !Ref DBUser]
      MasterUserPassword:
        !If [UseSnapshot, !Ref "AWS::NoValue", !Ref DBPassword]
      MultiAZ: !If [IsProduction, true, false]
      PerformanceInsightsRetentionPeriod: !If [IsProduction, 7, !Ref "AWS::NoValue"]
      PreferredBackupWindow: "08:00-08:30"
      PreferredMaintenanceWindow: "tue:06:15-tue:06:45"
      PubliclyAccessible: true
      StorageType: gp2
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
    # The MySQL_replication_tunnel security group is added and removed manually for use during migration
    #     VPCSecurityGroups: [!Ref EC2SecurityGroup]
    # replication won't connect via tunnel if false
    # Post migration, we want to set PubliclyAccessible to false
    # But we have to set this manually because if flipped with a stack update, the RDS instance is rebuilt
    # It does not change with other stack updates if set manually
    #     PubliclyAccessible: true
  DiskSpaceAlarm:
    Condition: CreateCloudWatchWarnDiskSpace
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[RDS][${EnvironmentType}][${MasterDB}] Disk Space"
      AlarmActions: [!Ref OpsWarnSnsTopic]
      InsufficientDataActions: [!Ref OpsWarnSnsTopic]
      OKActions: [!Ref OpsWarnSnsTopic]
      AlarmDescription: Free Storage Space getting low
      ComparisonOperator: LessThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: FreeStorageSpace
      Namespace: AWS/RDS
      Period: 300
      Statistic: Average
      Threshold: !Ref CloudWatchWarnDiskSpace
      Unit: Bytes
      TreatMissingData: notBreaching
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref MasterDB
  CPUAlarm:
    Condition: CreateCloudWatchWarnCPU
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[RDS][${EnvironmentType}][${MasterDB}] CPU"
      AlarmActions: [!Ref OpsWarnSnsTopic]
      InsufficientDataActions: [!Ref OpsWarnSnsTopic]
      OKActions: [!Ref OpsWarnSnsTopic]
      AlarmDescription: CPU utilization high
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 5
      MetricName: CPUUtilization
      Namespace: AWS/RDS
      Period: 60
      Statistic: Maximum
      Threshold: !Ref CloudWatchWarnCPU
      Unit: Percent
      TreatMissingData: notBreaching
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref MasterDB
  MaxConnectionsAlarm:
    Condition: CreateCloudWatchWarnConnections
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[RDS][${EnvironmentType}][${MasterDB}] Database Connections"
      AlarmActions: [!Ref OpsWarnSnsTopic]
      InsufficientDataActions: [!Ref OpsWarnSnsTopic]
      OKActions: [!Ref OpsWarnSnsTopic]
      AlarmDescription: Database Connections nearing max
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      MetricName: DatabaseConnections
      Namespace: AWS/RDS
      Period: 60
      Statistic: Maximum
      Threshold: !Ref CloudWatchWarnConnections
      Unit: Count
      TreatMissingData: notBreaching
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref MasterDB
Outputs:
  EC2Platform:
    Description: Platform in which this stack is deployed
    Value: EC2-VPC
