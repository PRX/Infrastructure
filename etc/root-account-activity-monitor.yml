# etc/root-account-activity-monitor.yml
# Sample CloudWatch Events event (from CloudTrail)
# {
#    "version": "0",
#    "id": "a76750eb-b69f-ae47-b183-4d3cb0700618",
#    "detail-type": "AWS API Call via CloudTrail",
#    "source": "aws.s3",
#    "account": "048723829744",
#    "time": "2018-05-22T12:44:24Z",
#    "region": "us-east-1",
#    "resources": [],
#    "detail": {
#       "eventVersion": "1.05",
#       "userIdentity": {},
#       "eventTime": "2018-05-22T12:44:24Z",
#       "eventSource": "s3.amazonaws.com",
#       "eventName": "DeleteBucket",
#       "awsRegion": "us-east-1",
#       "sourceIPAddress": "209.6.231.175",
#       "userAgent": "[S3Console/0.4, aws-internal/3]",
#       "requestParameters": {},
#       "responseElements": null,
#       "additionalEventData": {
#          "vpcEndpointId": "vpce-6d72a204"
#       },
#       "requestID": "51A7870C114C931C",
#       "eventID": "d687e2af-5a29-4acb-bc41-6892b36420bf",
#       "eventType": "AwsApiCall",
#       "vpcEndpointId": "vpce-6d72a204"
#    }
# }

AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >-
  Creates a CloudWatch Events rule that triggers a Lambda function whenever
  there is root account API or Console activity in CloudTrail. A global,
  multi-region CloudTrail trail is also created to log those activities.

Parameters:
  SlackMessageRelayTopicArn:
    Type: String
  OrganizationId:
    Type: String
    Description: >-
      optional. An AWS Organization ID in the format: o-a1s2d3f4f5g. If
      included, the CloudTrail that is created will be a organization trail,
      and log activity from all accounts in the given organization.
    AllowedPattern: ^$|^(o-[a-z0-9]{4,32})$

Conditions:
  IsCloudTrailOrganizationTrail: !Not [!Equals [!Ref OrganizationId, ""]]

Resources:
  # CloudTrail
  CloudTrailS3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 14
            Status: Enabled
      Tags:
        - Key: Project
          Value: Admin
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
  CloudTrailS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: CloudTrailS3Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AWSCloudTrailAclCheck
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !GetAtt CloudTrailS3Bucket.Arn
          - Sid: AWSCloudTrailWrite
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub ${CloudTrailS3Bucket.Arn}/AWSLogs/${AWS::AccountId}/*
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control
          - Sid: AWSOrgCloudTrailWrite
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub ${CloudTrailS3Bucket.Arn}/AWSLogs/${OrganizationId}/*
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control
  CloudTrail:
    Type: AWS::CloudTrail::Trail
    DependsOn:
      - CloudTrailS3BucketPolicy
    Properties:
      IncludeGlobalServiceEvents: true
      IsLogging: true
      IsMultiRegionTrail: true
      S3BucketName: !Ref CloudTrailS3Bucket
      Tags:
        - Key: Project
          Value: Admin
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
  CloudTrailIsOrganizationTrailCustomResource:
    DependsOn:
      - CloudTrail
      - CloudTrailS3BucketPolicy
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt OrganizationTrailCustomResourceFunction.Arn
      # This property is always sent to the Lambda event as a string, even
      # if it's a true YAML boolean value
      IsOrganizationTrail: !If [IsCloudTrailOrganizationTrail, true, false]
  # Monitor Function
  MonitorFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: >-
        Receives CloudWatch Events rule events related to root account activity
        and sends a message to the Slack relay
      Environment:
        Variables:
          SLACK_MESSAGE_RELAY_SNS_TOPIC_ARN: !Ref SlackMessageRelayTopicArn
      Events:
        CloudTrailEventsRule:
          Type: EventBridgeRule
          Properties:
            Pattern:
              detail-type:
                - AWS API Call via CloudTrail
                - AWS Console Sign In via CloudTrail
              detail:
                userIdentity:
                  type:
                    - Root
      Handler: index.handler
      InlineCode: |
        const AWS = require('aws-sdk');

        const sns = new AWS.SNS({ apiVersion: '2010-03-31' });

        const SLACK_ICON = ':ops-cloudtrail:';
        const SLACK_USERNAME = 'AWS CloudTrail';
        const SLACK_CHANNEL = '#ops-fatal';

        exports.handler = async (event) => {
          console.log(JSON.stringify(event))

          await sns.publish({
            TargetArn: process.env.SLACK_MESSAGE_RELAY_SNS_TOPIC_ARN,
            Message: JSON.stringify({
              channel: SLACK_CHANNEL,
              username: SLACK_USERNAME,
              icon_emoji: SLACK_ICON,
              text: `Root account event detected - ${event.account} ${event['detail-type']} ${event.region} ${event.detail.eventName}`,
            }),
          }).promise();
        };
      MemorySize: 128
      Policies:
        - AWSLambdaBasicExecutionRole
        - SNSPublishMessagePolicy:
            TopicName: !Ref SlackMessageRelayTopicArn
      Runtime: nodejs12.x
      Tags:
        Project: Admin
        "prx:cloudformation:stack-name": !Ref AWS::StackName
        "prx:cloudformation:stack-id": !Ref AWS::StackId
      Timeout: 10
  MonitorFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${MonitorFunction}
      RetentionInDays: 30
  # CloudTrail IsOrganizationTrail custom resource function
  OrganizationTrailCustomResourceFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: >-
        A CloudFormation custom resource function that provides support for
        the IsOrganizationTrail property of trails in AWS CloudTrail.
      Environment:
        Variables:
          TRAIL_ARN: !GetAtt CloudTrail.Arn
      Handler: index.handler
      InlineCode: |
        const AWS = require('aws-sdk');
        const cfnResponse = require('cfn-response');

        const cloudtrail = new AWS.CloudTrail({ apiVersion: '2013-11-01' });

        exports.handler = async (event, context) => {
          try {
            console.log(JSON.stringify(event));

            // No need to update the trail when the custom resource is being
            // deleted.
            if (['Create', 'Update'].includes(event.RequestType)) {
              // The custom Properties of a custom resource always come in
              // to the event as strings
              const flag = event.ResourceProperties.IsOrganizationTrail === 'true' ? true : false;

              console.log(`Setting IsOrganizationTrail to ${flag}`);

              const res = await cloudtrail.updateTrail({
                Name: process.env.TRAIL_ARN,
                IsOrganizationTrail: flag,
              }).promise();

              console.log(res);
            }

            await cfnResponse.send(event, context, cfnResponse.SUCCESS, {});
          } catch (error) {
            console.log('Sending FAILED response');
            console.log(error);
            await cfnResponse.send(event, context, cfnResponse.FAILED, {});
          }
        };
      MemorySize: 128
      Policies:
        - AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSCloudTrail_FullAccess
        - Statement:
            - Action:
                - iam:GetRole
                - organizations:EnableAWSServiceAccess
                - organizations:ListAccounts
                - iam:CreateServiceLinkedRole
                - organizations:DisableAWSServiceAccess
                - organizations:DescribeOrganization
                - organizations:ListAWSServiceAccessForOrganization
              Effect: Allow
              Resource: "*"
          Version: "2012-10-17"
      Runtime: nodejs12.x
      Tags:
        Project: Admin
        "prx:cloudformation:stack-name": !Ref AWS::StackName
        "prx:cloudformation:stack-id": !Ref AWS::StackId
      Timeout: 30
  OrganizationTrailCustomFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${OrganizationTrailCustomResourceFunction}
      RetentionInDays: 7
