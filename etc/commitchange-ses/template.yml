# etc/commitchange-ses.yml
AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Processes SES email messages (via an SNS topic subscription) generated from
  CommitChange donation notifications, and sends Slack notifications in some
  cases
Parameters:
  SesRuleSetName:
    Type: String
  SlackMessageRelayTopicArn:
    Type: String
  DestinationSlackChannel:
    Type: String
  RecipientEmailAddress:
    Type: String
  CounterFileObjectKey:
    Type: String
  ActiveCampaignName:
    Type: String
  AlarmSnsTopicArn:
    Type: String
Resources:
  SnsTopic:
    Type: AWS::SNS::Topic
  MessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: index.js
      Description: >-
        Handles CommitChange email notifications and forwards select
        information to Slack
      Environment:
        Variables:
          DESTINATION_SLACK_CHANNEL: !Ref DestinationSlackChannel
          SLACK_MESSAGE_RELAY_TOPIC_ARN: !Ref SlackMessageRelayTopicArn
          COUNTER_FILE_OBJECT_KEY: !Ref CounterFileObjectKey
          ACTIVE_CAMPAIGN_NAME: !Ref ActiveCampaignName
      Events:
        Sns:
          Type: SNS
          Properties:
            Topic: !Ref SnsTopic
      Handler: index.handler
      MemorySize: 128
      Role: !GetAtt MessageFunctionIamRole.Arn
      Runtime: nodejs12.x
      Tags:
        Project: Misc
        prx:cloudformation:stack-name: !Ref AWS::StackName
        prx:cloudformation:stack-id: !Ref AWS::StackId
      Timeout: 4
  MessageFunctionIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: SnsPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource:
                  - !Ref SlackMessageRelayTopicArn
        - PolicyName: S3
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:getObject
                  - s3:putObject
                Resource:
                  - !Sub arn:aws:s3:::farski-sandbox-prx/${CounterFileObjectKey}
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Tags:
        - Key: Project
          Value: Misc
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
  ReceiptRule:
    Type: AWS::SES::ReceiptRule
    Properties:
      Rule:
        Actions:
          - SNSAction:
              Encoding: UTF-8
              TopicArn: !Ref SnsTopic
        Enabled: true
        # Name: !Sub "commitchange-notif-${AWS::StackName}"
        Recipients:
          - !Ref RecipientEmailAddress
        ScanEnabled: false
        TlsPolicy: Optional
      RuleSetName: !Ref SesRuleSetName
  MessageFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${MessageFunction}
      RetentionInDays: 30
  MessageFunctionErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmName: "[Commitchange Counter] Elevated error volume"
      AlarmActions:
        - !Ref AlarmSnsTopicArn
      InsufficientDataActions:
        - !Ref AlarmSnsTopicArn
      OKActions:
        - !Ref AlarmSnsTopicArn
      AlarmDescription: >-
        The error rate on the Commitchange thing has exceeded 0.
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching
      Dimensions:
        - Name: FunctionName
          Value: !Ref MessageFunction
