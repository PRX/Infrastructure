# etc/adzerk-poller/template.yml
AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Description: >-
  Creates a Lambda function that polls the Classy API for recent activity, and
  sends messages to Slack for certain activities

Parameters:
  ClassyApiClientId:
    Type: String
  ClassyApiClientSecret:
    Type: String
  SlackMessageRelayTopicArn:
    Type: String
  Frequency:
    Type: String
    Description: In minutes, greater than 1
    Default: 2
  CounterBucket:
    Type: String
  CounterObject:
    Type: String

Resources:
  PollerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: index.js
      Description: >-
        Polls Classy for new activity
      Environment:
        Variables:
          CLASSY_API_CLIENT_ID: !Ref ClassyApiClientId
          CLASSY_API_CLIENT_SECRET: !Ref ClassyApiClientSecret
          SLACK_MESSAGE_RELAY_SNS_TOPIC_ARN: !Ref SlackMessageRelayTopicArn
          POLLING_FREQUENCY: !Ref Frequency
          COUNTER_BUCKET: !Ref CounterBucket
          COUNTER_OBJECT: !Ref CounterObject
      Events:
        Poller:
          Properties:
            Description: Runs the Classy poller
            Enabled: true
            Schedule: !Sub rate(${Frequency} minutes)
          Type: Schedule
      Handler: index.handler
      MemorySize: 128
      Policies:
        - Statement:
            - Action: sns:Publish
              Effect: Allow
              Resource: !Ref SlackMessageRelayTopicArn
          Version: "2012-10-17"
        - Statement:
            - Action: sns:Publish
              Effect: Allow
              Resource: !Ref SlackMessageRelayTopicArn
            - Action:
                - s3:getObject
                - s3:putObject
              Effect: Allow
              Resource: !Sub arn:aws:s3:::${CounterBucket}/${CounterObject}
          Version: "2012-10-17"
      Runtime: nodejs18.x
      # Tags:
      #   Project: Misc
      #   prx:cloudformation:stack-name: !Ref AWS::StackName
      #   prx:cloudformation:stack-id: !Ref AWS::StackId
      Timeout: 180
  PollerFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${PollerFunction}
      RetentionInDays: 30
  PollerFunctionErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: "MINOR [Classy] Activity Poller <prod> EXPERIENCING ERRORS"
      AlarmDescription: >-
        The error rate on the Classy app has exceeded 0.
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref PollerFunction
      EvaluationPeriods: 2
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching
