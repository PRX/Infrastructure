# etc/adzerk-poller/template.yml
AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Description: >-
  Tools for dealing with various accounting- and finance-related systems

Parameters:
  AccountingZendeskApiUsername:
    Type: String
  AccountingZendeskApiToken:
    Type: String
    NoEcho: true
  PrxZendeskApiUsername:
    Type: String
  PrxZendeskApiToken:
    Type: String
    NoEcho: true
  NetSuiteDomainSlug:
    Type: String
  NetSuiteCertificateId:
    Type: String
    NoEcho: true
  NetSuiteClientId:
    Type: String
    NoEcho: true
  Frequency:
    Type: String
    Description: In minutes, greater than 1
    Default: 360

Resources:
  NetSuiteSyncFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/netsuite-sync
      Description: >-
        Syncs data from NetSuite to Zendesk
      Environment:
        Variables:
          NETSUITE_DOMAIN_SLUG: !Ref NetSuiteDomainSlug
          NETSUITE_CLIENT_ID: !Ref NetSuiteClientId
          NETSUITE_CERTIFICATE_ID: !Ref NetSuiteCertificateId
          ACCOUNTING_ZENDESK_API_USERNAME: !Ref AccountingZendeskApiUsername
          ACCOUNTING_ZENDESK_API_TOKEN: !Ref AccountingZendeskApiToken
          PRX_ZENDESK_API_USERNAME: !Ref PrxZendeskApiUsername
          PRX_ZENDESK_API_TOKEN: !Ref PrxZendeskApiToken
      Events:
        Poller:
          Properties:
            Description: Runs the Zendesk data sync
            Enabled: true
            Schedule: !Sub rate(${Frequency} minutes)
          Type: Schedule
      Handler: lambda_function.lambda_handler
      MemorySize: 256
      Runtime: ruby2.7
      Tags:
        prx:meta:tagging-version: "2021-04-07"
        prx:cloudformation:stack-name: !Ref AWS::StackName
        prx:cloudformation:stack-id: !Ref AWS::StackId
        prx:ops:environment: Production
        prx:dev:application: Accounting Toolkit
      Timeout: 300
  NetSuiteSyncFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${NetSuiteSyncFunction}
      RetentionInDays: 30
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: Production }
        - { Key: prx:dev:application, Value: Accounting Toolkit }
  NetSuiteSyncFunctionErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: "MINOR [Zendesk] NetSuite Sync <prod> EXPERIENCING ERRORS"
      AlarmDescription: >-
        The error rate on the Zendesk sync app has exceeded 0.
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref NetSuiteSyncFunction
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching

  ZendeskSyncFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/zendesk-sync
      Description: >-
        Syncs data from Zendesk to Zendesk
      Environment:
        Variables:
          ACCOUNTING_ZENDESK_API_USERNAME: !Ref AccountingZendeskApiUsername
          ACCOUNTING_ZENDESK_API_TOKEN: !Ref AccountingZendeskApiToken
          PRX_ZENDESK_API_USERNAME: !Ref PrxZendeskApiUsername
          PRX_ZENDESK_API_TOKEN: !Ref PrxZendeskApiToken
      Events:
        Poller:
          Properties:
            Description: Runs the Zendesk data sync
            Enabled: true
            Schedule: rate(1 day)
          Type: Schedule
      Handler: lambda_function.lambda_handler
      MemorySize: 256
      Runtime: ruby2.7
      Tags:
        prx:meta:tagging-version: "2021-04-07"
        prx:cloudformation:stack-name: !Ref AWS::StackName
        prx:cloudformation:stack-id: !Ref AWS::StackId
        prx:ops:environment: Production
        prx:dev:application: Accounting Toolkit
      Timeout: 300
  ZendeskSyncFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${ZendeskSyncFunction}
      RetentionInDays: 30
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: Production }
        - { Key: prx:dev:application, Value: Accounting Toolkit }
  ZendeskSyncFunctionErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: "MINOR [Zendesk] Zendesk Sync <prod> EXPERIENCING ERRORS"
      AlarmDescription: >-
        The error rate on the Zendesk sync app has exceeded 0.
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref ZendeskSyncFunction
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching

  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Tags:
        prx:meta:tagging-version: "2021-04-07"
        prx:cloudformation:stack-name: !Ref AWS::StackName
        prx:cloudformation:stack-id: !Ref AWS::StackId
        prx:ops:environment: Production
        prx:dev:application: Accounting Toolkit

  ZendeskWebhookFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/zendesk-webhook
      Description: >-
        Handles webhooks from Zendesk
      Environment:
        Variables:
          PRX_ZENDESK_API_USERNAME: !Ref PrxZendeskApiUsername
          PRX_ZENDESK_API_TOKEN: !Ref PrxZendeskApiToken
      Handler: lambda_function.lambda_handler
      MemorySize: 256
      Runtime: ruby2.7
      Tags:
        prx:meta:tagging-version: "2021-04-07"
        prx:cloudformation:stack-name: !Ref AWS::StackName
        prx:cloudformation:stack-id: !Ref AWS::StackId
        prx:ops:environment: Production
        prx:dev:application: Accounting Toolkit
      Timeout: 16
  ZendeskWebhookFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${ZendeskWebhookFunction}
      RetentionInDays: 30
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: Production }
        - { Key: prx:dev:application, Value: Accounting Toolkit }
  ZendeskWebhookFunctionErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: "MINOR [Zendesk] Zendesk Webhook <prod> EXPERIENCING ERRORS"
      AlarmDescription: >-
        The error rate on the Zendesk webhook app has exceeded 0.
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref ZendeskWebhookFunction
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching
