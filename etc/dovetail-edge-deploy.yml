# etc/dovetail-edge-deploy.yml
# Deploys Dovetail Lambda@Edge functions.
AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Builds a release pipeline via CodePipeline to deploy Dovetail Lambda@Edge
  functions
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: GitHub API
        Parameters:
          - GitHubToken
          - GitHubWebhookSecret
    ParameterLabels:
      GitHubToken:
        default: Access token
      GitHubWebhookSecret:
        default: Webhook secret
      InfrastructureNotificationsStackName:
        default: Notifications stack name
Parameters:
  InfrastructureNotificationsStackName:
    Default: infrastructure-notifications
    Type: String
  GitHubToken:
    Description: >
      A GitHub access token with permissions to update statuses, request
      content, etc
    Type: String
  GitHubWebhookSecret:
    Description: >
      A secret used to sign requests made by GitHub to webhook endpoints.
      This secret shared by all webhooks created by this template.
    Type: String
Resources:
  # Pipeline
  PipelineArtifactStore:
    # The bucket used to store artifacts generated by CodePipeline actions.
    # This bucket is to be used exclusively by AWS; don't use it to store any
    # app, infrastructure, or user data.
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 14
            Status: Enabled
      Tags:
        - Key: Project
          Value: Infrastructure
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
  PipelineIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        # CodePipeline seems to need access to special buckets
        - PolicyName: GenericCodePipelineS3PutPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource:
                  - arn:aws:s3:::codepipeline*
        # Let CodePipeline read and write artifacts
        - PolicyName: ArtifactStoreFullAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:Put*
                  - s3:List*
                Resource:
                  - !Sub arn:aws:s3:::${PipelineArtifactStore}
                  - !Sub arn:aws:s3:::${PipelineArtifactStore}/*
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref PipelineArtifactStore
        Type: S3
      RoleArn: !GetAtt PipelineIamRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: MetaRepo
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: "1"
              Configuration:
                Owner: PRX
                Repo: meta.prx.org
                Branch: master
                OAuthToken: !Ref GitHubToken
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: MetaRepoSourceArtifact
              RunOrder: 1
        - Name: Staging
          Actions:




            - Name: CreateStagingChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_IAM
                ChangeSetName: !Sub ${AWS::StackName}StagingChangeSet
                RoleArn: !GetAtt CloudFormationIamRole.Arn
                StackName: !Sub ${AWS::StackName}-root-staging
                # ParameterOverrides: !Sub |
                #   {
                #     "InfrastructureStorageStackName": "${InfrastructureStorageStackName}",
                #     "NotificationsStackName": "${InfrastructureNotificationsStackName}",
                #     "SecretsStackName": "${SecretsStackName}",
                #     "InfrastructureGitCommit": { "Fn::GetParam" : ["RepoStateArtifact", "state.json", "commit"]},
                #     "PipelineExecutionNonce": { "Fn::GetArtifactAtt" : ["InfrastructureRepoSourceArtifact", "ObjectKey"]}
                #   }
                # TemplateConfiguration: TemplateConfigStagingZipArtifact::staging.json
                TemplatePath: InfrastructureRepoSourceArtifact::stacks/root.yml
              InputArtifacts:
                # - Name: TemplateConfigStagingZipArtifact
                # - Name: InfrastructureRepoSourceArtifact
                # - Name: RepoStateArtifact
              RunOrder: 1

        - Name: Testing
          Actions:
            - Name: Acceptance
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref AcceptanceTestsCodeBuildProject
              InputArtifacts:
                - Name: MetaRepoSourceArtifact
              OutputArtifacts:
                - Name: AcceptanceTestArtifact
              RunOrder: 1
  PipelineMetaRepoGitHubWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubWebhookSecret
      Filters:
        - JsonPath: "$.ref"
          # Properties from the target action configuration can be included as
          # placeholders in this value by surrounding the action configuration
          # key with curly braces. For example, if the value supplied here is
          # "refs/heads/{Branch}" and the target action has an action
          # configuration property called "Branch" with a value of "master",
          # the MatchEquals value will be evaluated as "refs/heads/master".
          MatchEquals: "refs/heads/{Branch}"
      RegisterWithThirdParty: true
      TargetAction: MetaRepo
      TargetPipeline: !Ref Pipeline
      TargetPipelineVersion: !GetAtt Pipeline.Version
  # Acceptance Test Pipeline Action
  AcceptanceTestsCodeBuildIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
      Path: "/"
      Policies:
        # Allow CodeBuild to log to CloudWatch
        - PolicyName: CodeBuildLogs
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource:
                  # NOTE These need to stay in sync with the CodeBuild Project
                  # name from below
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${AWS::StackName}-AcceptanceTests
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${AWS::StackName}-AcceptanceTests:*
        # CodeBuild sources from CodePipeline artifacts, so it needs access
        - PolicyName: ArtifactStoreBasicAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                Effect: Allow
                Resource: !Sub arn:aws:s3:::${ArtifactStore}/*
        - PolicyName: ParameterStorePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameters
                Resource:
                  - "*" # TODO
  AcceptanceTestsCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Description: Runs acceptance tests for Dovetail
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 561178107736.dkr.ecr.us-east-1.amazonaws.com/meta.prx.org:latest
        Type: LINUX_CONTAINER
      # If this Name changes, the CodeBuild role policy needs to change too
      Name: !Sub ${AWS::StackName}-AcceptanceTests
      ServiceRole: !GetAtt AcceptanceTestsCodeBuildIamRole.Arn
      Source:
        BuildSpec: "buildspec-pipeline.yml"
        Type: CODEPIPELINE
      Tags:
        - Key: Project
          Value: Infrastructure
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
      TimeoutInMinutes: 5
  # CloudFormation Pipeline Actions
  CloudFormationIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
