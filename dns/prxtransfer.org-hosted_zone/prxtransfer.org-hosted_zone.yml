# dns/prxtransfer.org-hosted_zone/prxtransfer.org-hosted_zone.yml
AWSTemplateFormatVersion: "2010-09-09"
Description: >-
  Hosted zone and record sets for prxtransfer.org

Parameters:
  Domain:
    Default: prxtransfer.org.
    Description: The domain name and hosted zone
    Type: String

  ProdUsEast1HealthCheckChildHealthCheckIdFromUsEast2: { Type: String }
  ProdUsEast1HealthCheckChildHealthCheckIdFromUsWest2: { Type: String }
  ProdUsWest2HealthCheckChildHealthCheckIdFromUsEast2: { Type: String }
  ProdUsWest2HealthCheckChildHealthCheckIdFromUsWest2: { Type: String }

  # Staging load balanced hostnames
  kStagingUsEast1LoadBalancerHostname: { Type: String, Default: infra-FtpSe-PVZ4TQZYADYA-dc6e2279abf01ee4.elb.us-east-1.amazonaws.com }
  kStagingUsWest2LoadBalancerHostname: { Type: String, Default: infra-FtpSe-TF9DIS2J9L4Y-10b4eadefd902f88.elb.us-west-2.amazonaws.com }

  # Production load balanced hostnames
  kProductionUsEast1LoadBalancerHostname: { Type: String, Default: infra-FtpSe-1W1OF5U4X8M3Z-284373e0ff42a3aa.elb.us-east-1.amazonaws.com }
  kProductionUsWest2LoadBalancerHostname: { Type: String, Default: infra-FtpSe-8HU0JXCWHS5S-c4fadec5f526520a.elb.us-west-2.amazonaws.com }

Conditions:
  HasProdUsEast1HealthCheckChildHealthCheckIdFromUsEast2: !Not [!Equals [!Ref ProdUsEast1HealthCheckChildHealthCheckIdFromUsEast2, ""]]
  HasProdUsEast1HealthCheckChildHealthCheckIdFromUsWest2: !Not [!Equals [!Ref ProdUsEast1HealthCheckChildHealthCheckIdFromUsWest2, ""]]
  CreateProdUsEast1HealthCheck: !And
    - !Condition HasProdUsEast1HealthCheckChildHealthCheckIdFromUsEast2
    - !Condition HasProdUsEast1HealthCheckChildHealthCheckIdFromUsWest2

  HasProdUsWest2HealthCheckChildHealthCheckIdFromUsEast2: !Not [!Equals [!Ref ProdUsWest2HealthCheckChildHealthCheckIdFromUsEast2, ""]]
  HasProdUsWest2HealthCheckChildHealthCheckIdFromUsWest2: !Not [!Equals [!Ref ProdUsWest2HealthCheckChildHealthCheckIdFromUsWest2, ""]]
  CreateProdUsWest2HealthCheck: !And
    - !Condition HasProdUsWest2HealthCheckChildHealthCheckIdFromUsEast2
    - !Condition HasProdUsWest2HealthCheckChildHealthCheckIdFromUsWest2

Resources:
  HostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      HostedZoneConfig:
        Comment: Broadcast FTP pull delivery
      HostedZoneTags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: Production }
        - { Key: prx:dev:application, Value: Broadcast Delivery }
      Name: !Ref Domain

  ProdUsEast1HealthCheck:
    Type: AWS::Route53::HealthCheck
    Condition: CreateProdUsEast1HealthCheck
    Properties:
      HealthCheckConfig:
        ChildHealthChecks:
          # All of these are testing the us-east-1 prod servers
          - !Ref ProdUsEast1HealthCheckChildHealthCheckIdFromUsEast2
          - !Ref ProdUsEast1HealthCheckChildHealthCheckIdFromUsWest2
        HealthThreshold: 1 # Should always be 1
        Type: CALCULATED
      HealthCheckTags:
        - { Key: Name, Value: delivery_prod_us-east-1 }
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: Production }
        - { Key: prx:dev:application, Value: Broadcast Delivery }
  ProdUsEast1HealthCheckAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateProdUsEast1HealthCheck
    Properties:
      AlarmName: !Sub FATAL [FTP] us-east-1 Server Connectivity <prod> UNHEALTHY (${AWS::StackName})
      AlarmDescription: >-
        All connection tests for prodoction us-east-1 FTP servers are failing.
        This likely means there is a service issue with Transfer Family,
        Lambda, or RDS in us-east-1.

        By the time this alarm has been triggered, the region has already been
        removed from the DNS pool.
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: HealthCheckId
          Value: !GetAtt ProdUsEast1HealthCheck.HealthCheckId
      EvaluationPeriods: 1
      MetricName: HealthCheckStatus
      Namespace: AWS/Route53
      Period: 60
      Statistic: Minimum
      Threshold: 1
      TreatMissingData: breaching

  ProdUsWest2HealthCheck:
    Type: AWS::Route53::HealthCheck
    Condition: CreateProdUsWest2HealthCheck
    Properties:
      HealthCheckConfig:
        ChildHealthChecks:
          # All of these are testing the us-west-2 prod servers
          - !Ref ProdUsWest2HealthCheckChildHealthCheckIdFromUsEast2
          - !Ref ProdUsWest2HealthCheckChildHealthCheckIdFromUsWest2
        HealthThreshold: 1 # Should always be 1
        Type: CALCULATED
      HealthCheckTags:
        - { Key: Name, Value: delivery_prod_us-west-2 }
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: Production }
        - { Key: prx:dev:application, Value: Broadcast Delivery }
  ProdUsWest2HealthCheckAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateProdUsWest2HealthCheck
    Properties:
      AlarmName: !Sub FATAL [FTP] us-west-2 Server Connectivity <prod> UNHEALTHY (${AWS::StackName})
      AlarmDescription: >-
        All connection tests for prodoction us-west-2 FTP servers are failing.
        This likely means there is a service issue with Transfer Family,
        Lambda, or RDS in us-east-1.

        By the time this alarm has been triggered, the region has already been
        removed from the DNS pool.
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: HealthCheckId
          Value: !GetAtt ProdUsWest2HealthCheck.HealthCheckId
      EvaluationPeriods: 1
      MetricName: HealthCheckStatus
      Namespace: AWS/Route53
      Period: 60
      Statistic: Minimum
      Threshold: 1
      TreatMissingData: breaching

  ProductionWildcards:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      Comment: Production FTP domains
      HostedZoneId: !GetAtt HostedZone.Id
      RecordSets:
        # Production wildcard traffic. All production traffic from stations
        # would be expected to handled by one of these.
        #
        # THEY ALL RESOLVE TO THE SAME NETWORK LOAD BALANCER!!
        #
        # - prxtransfer.org (shouldn't be in use by anyone)
        # - *.prxtransfer.org (all legacy traffic)
        # - *.station.prxtransfer.org (stations that opted in to Transfer Family early)
        # - *.east.prxtransfer.org (Legacy routing for a few stations to hit specific server locations)
        # - *.west.prxtransfer.org (Legacy routing for a few stations to hit specific server location)
        # - *.west1.prxtransfer.org (Legacy routing for a few stations to hit specific server locations)
        - Name: !Ref Domain
          AliasTarget:
            DNSName: !Ref kProductionUsEast1LoadBalancerHostname
            EvaluateTargetHealth: true
            HostedZoneId: Z26RNL4JYFTOTI
          HealthCheckId: !If [CreateProdUsEast1HealthCheck, !GetAtt ProdUsEast1HealthCheck.HealthCheckId, !Ref AWS::NoValue]
          Region: us-east-1
          SetIdentifier: !Sub ${AWS::StackName}-prod-us-east-1
          Type: A
        - Name: !Ref Domain
          AliasTarget:
            DNSName: !Ref kProductionUsWest2LoadBalancerHostname
            EvaluateTargetHealth: true
            HostedZoneId: Z18D5FSROUN65G
          HealthCheckId: !If [CreateProdUsWest2HealthCheck, !GetAtt ProdUsWest2HealthCheck.HealthCheckId, !Ref AWS::NoValue]
          Region: us-west-2
          SetIdentifier: !Sub ${AWS::StackName}-prod-us-west-2
          Type: A

        - Name: !Sub "*.${Domain}"
          AliasTarget:
            DNSName: !Ref kProductionUsEast1LoadBalancerHostname
            EvaluateTargetHealth: true
            HostedZoneId: Z26RNL4JYFTOTI
          HealthCheckId: !If [CreateProdUsEast1HealthCheck, !GetAtt ProdUsEast1HealthCheck.HealthCheckId, !Ref AWS::NoValue]
          Region: us-east-1
          SetIdentifier: !Sub ${AWS::StackName}-prod-us-east-1
          Type: A
        - Name: !Sub "*.${Domain}"
          AliasTarget:
            DNSName: !Ref kProductionUsWest2LoadBalancerHostname
            EvaluateTargetHealth: true
            HostedZoneId: Z18D5FSROUN65G
          HealthCheckId: !If [CreateProdUsWest2HealthCheck, !GetAtt ProdUsWest2HealthCheck.HealthCheckId, !Ref AWS::NoValue]
          Region: us-west-2
          SetIdentifier: !Sub ${AWS::StackName}-prod-us-west-2
          Type: A

        - Name: !Sub "*.station.${Domain}"
          AliasTarget:
            DNSName: !Ref kProductionUsEast1LoadBalancerHostname
            EvaluateTargetHealth: true
            HostedZoneId: Z26RNL4JYFTOTI
          HealthCheckId: !If [CreateProdUsEast1HealthCheck, !GetAtt ProdUsEast1HealthCheck.HealthCheckId, !Ref AWS::NoValue]
          Region: us-east-1
          SetIdentifier: !Sub ${AWS::StackName}-prod-us-east-1
          Type: A
        - Name: !Sub "*.station.${Domain}"
          AliasTarget:
            DNSName: !Ref kProductionUsWest2LoadBalancerHostname
            EvaluateTargetHealth: true
            HostedZoneId: Z18D5FSROUN65G
          HealthCheckId: !If [CreateProdUsWest2HealthCheck, !GetAtt ProdUsWest2HealthCheck.HealthCheckId, !Ref AWS::NoValue]
          Region: us-west-2
          SetIdentifier: !Sub ${AWS::StackName}-prod-us-west-2
          Type: A

        - Name: !Sub "*.east.${Domain}"
          AliasTarget:
            DNSName: !Ref kProductionUsEast1LoadBalancerHostname
            EvaluateTargetHealth: true
            HostedZoneId: Z26RNL4JYFTOTI
          HealthCheckId: !If [CreateProdUsEast1HealthCheck, !GetAtt ProdUsEast1HealthCheck.HealthCheckId, !Ref AWS::NoValue]
          Region: us-east-1
          SetIdentifier: !Sub ${AWS::StackName}-prod-us-east-1
          Type: A
        - Name: !Sub "*.east.${Domain}"
          AliasTarget:
            DNSName: !Ref kProductionUsWest2LoadBalancerHostname
            EvaluateTargetHealth: true
            HostedZoneId: Z18D5FSROUN65G
          HealthCheckId: !If [CreateProdUsWest2HealthCheck, !GetAtt ProdUsWest2HealthCheck.HealthCheckId, !Ref AWS::NoValue]
          Region: us-west-2
          SetIdentifier: !Sub ${AWS::StackName}-prod-us-west-2
          Type: A

        - Name: !Sub "*.west.${Domain}"
          AliasTarget:
            DNSName: !Ref kProductionUsEast1LoadBalancerHostname
            EvaluateTargetHealth: true
            HostedZoneId: Z26RNL4JYFTOTI
          HealthCheckId: !If [CreateProdUsEast1HealthCheck, !GetAtt ProdUsEast1HealthCheck.HealthCheckId, !Ref AWS::NoValue]
          Region: us-east-1
          SetIdentifier: !Sub ${AWS::StackName}-prod-us-east-1
          Type: A
        - Name: !Sub "*.west.${Domain}"
          AliasTarget:
            DNSName: !Ref kProductionUsWest2LoadBalancerHostname
            EvaluateTargetHealth: true
            HostedZoneId: Z18D5FSROUN65G
          HealthCheckId: !If [CreateProdUsWest2HealthCheck, !GetAtt ProdUsWest2HealthCheck.HealthCheckId, !Ref AWS::NoValue]
          Region: us-west-2
          SetIdentifier: !Sub ${AWS::StackName}-prod-us-west-2
          Type: A

        - Name: !Sub "*.west1.${Domain}"
          AliasTarget:
            DNSName: !Ref kProductionUsEast1LoadBalancerHostname
            EvaluateTargetHealth: true
            HostedZoneId: Z26RNL4JYFTOTI
          HealthCheckId: !If [CreateProdUsEast1HealthCheck, !GetAtt ProdUsEast1HealthCheck.HealthCheckId, !Ref AWS::NoValue]
          Region: us-east-1
          SetIdentifier: !Sub ${AWS::StackName}-prod-us-east-1
          Type: A
        - Name: !Sub "*.west1.${Domain}"
          AliasTarget:
            DNSName: !Ref kProductionUsWest2LoadBalancerHostname
            EvaluateTargetHealth: true
            HostedZoneId: Z18D5FSROUN65G
          HealthCheckId: !If [CreateProdUsWest2HealthCheck, !GetAtt ProdUsWest2HealthCheck.HealthCheckId, !Ref AWS::NoValue]
          Region: us-west-2
          SetIdentifier: !Sub ${AWS::StackName}-prod-us-west-2
          Type: A

  StagingWildcards:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      Comment: Staging FTP domains
      HostedZoneId: !GetAtt HostedZone.Id
      RecordSets:
        # Staging traffic
        # - staging.prxtransfer.org
        # - *.staging.prxtransfer.org
        # - *.station.staging.prxtransfer.org
        # Does NOT support regional wildcard domains that used to be used in
        # production, such as *.east.staging.prxtransfer.org.
        #
        # No one should be using staging domains except for us for internal
        # testing
        - Name: !Sub staging.${Domain}
          AliasTarget:
            DNSName: !Ref kStagingUsEast1LoadBalancerHostname
            EvaluateTargetHealth: true
            HostedZoneId: Z26RNL4JYFTOTI
          Region: us-east-1
          SetIdentifier: !Sub ${AWS::StackName}-stag-us-east-1
          Type: A
        - Name: !Sub staging.${Domain}
          AliasTarget:
            DNSName: !Ref kStagingUsWest2LoadBalancerHostname
            EvaluateTargetHealth: true
            HostedZoneId: Z18D5FSROUN65G
          Region: us-west-2
          SetIdentifier: !Sub ${AWS::StackName}-stag-us-west-2
          Type: A

        - Name: !Sub "*.staging.${Domain}"
          AliasTarget:
            DNSName: !Ref kStagingUsEast1LoadBalancerHostname
            EvaluateTargetHealth: true
            HostedZoneId: Z26RNL4JYFTOTI
          Region: us-east-1
          SetIdentifier: !Sub ${AWS::StackName}-stag-us-east-1
          Type: A
        - Name: !Sub "*.staging.${Domain}"
          AliasTarget:
            DNSName: !Ref kStagingUsWest2LoadBalancerHostname
            EvaluateTargetHealth: true
            HostedZoneId: Z18D5FSROUN65G
          Region: us-west-2
          SetIdentifier: !Sub ${AWS::StackName}-stag-us-west-2
          Type: A

        - Name: !Sub "*.station.staging.${Domain}"
          AliasTarget:
            DNSName: !Ref kStagingUsEast1LoadBalancerHostname
            EvaluateTargetHealth: true
            HostedZoneId: Z26RNL4JYFTOTI
          Region: us-east-1
          SetIdentifier: !Sub ${AWS::StackName}-stag-us-east-1
          Type: A
        - Name: !Sub "*.station.staging.${Domain}"
          AliasTarget:
            DNSName: !Ref kStagingUsWest2LoadBalancerHostname
            EvaluateTargetHealth: true
            HostedZoneId: Z18D5FSROUN65G
          Region: us-west-2
          SetIdentifier: !Sub ${AWS::StackName}-stag-us-west-2
          Type: A

  # Service-specific
  AwsAcmLegacy:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      Comment: AWS ACM validation records for prx-legacy
      HostedZoneId: !Ref HostedZone
      RecordSets:
        # *.prxtransfer.org
        - Name: !Sub _076a6a73853f02e920a0e0dd35c5a602.${Domain}
          ResourceRecords:
            - _0f113259cc3f78e525d0f61450f9f7b3.vrztfgqhxj.acm-validations.aws.
          TTL: "3600"
          Type: CNAME
        # *.station.prxtransfer.org
        - Name: !Sub _041f0e1c6cca23dc2454c37ef77900d1.station.${Domain}
          ResourceRecords:
            - _928a0424ecc27464f39996ea0b9487fb.vrztfgqhxj.acm-validations.aws.
          TTL: "3600"
          Type: CNAME
        # *.staging.prxtransfer.org
        - Name: !Sub _d6d262b369914b25a15b2c92d7d4ecaf.staging.${Domain}
          ResourceRecords:
            - _cf6ee97e3845eac0c69882a0133abc69.vrztfgqhxj.acm-validations.aws.
          TTL: "3600"
          Type: CNAME
        # *.station.staging.prxtransfer.org
        - Name: !Sub _a09679bc6ff048a874fc4163e4627a41.station.staging.${Domain}
          ResourceRecords:
            - _132bb980af32bd41ad8791537c792987.vrztfgqhxj.acm-validations.aws.
          TTL: "3600"
          Type: CNAME
