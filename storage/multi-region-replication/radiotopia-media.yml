# storage/multi-region-replication/radiotopia-media.yml

################################################################################
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# Changes to this template must be deployed to all regions immediately!
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
################################################################################

AWSTemplateFormatVersion: "2010-09-09"
Description: >-
  Creates an S3 bucket to be used as an origin for the media.radiotopia.fm
  CloudFront distribution. Contents will be replicated to a second region.
  Buckets in both regions are created using this template. Once both buckets
  have been created, the destination bucket parameter should be set on the
  stack that is serving as the source region.

Parameters:
  DestinationBucketArn:
    Type: String

Conditions:
  HasDestinationBucketArn: !Not [!Equals [!Ref DestinationBucketArn, ""]]

Resources:
  ReplicationRole:
    Type: AWS::IAM::Role
    Condition: HasDestinationBucketArn
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: s3.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: Production }
        - { Key: prx:dev:application, Value: radiotopia.fm }
  ReplicationSourcePolicy:
    Type: AWS::IAM::Policy
    Condition: HasDestinationBucketArn
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetReplicationConfiguration
              - s3:ListBucket
            Effect: Allow
            Resource: !GetAtt RadiotopiaMediaBucket.Arn
          - Action:
              - s3:GetObjectVersionForReplication
              - s3:GetObjectVersionAcl
              - s3:GetObjectVersionTagging
            Effect: Allow
            Resource: !Sub ${RadiotopiaMediaBucket.Arn}/*
        Version: "2012-10-17"
      PolicyName: ReplicationSourcePolicy
      Roles:
        - !Ref ReplicationRole
  ReplicationDestinationPolicy:
    Type: AWS::IAM::Policy
    Condition: HasDestinationBucketArn
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:ReplicateObject
              - s3:ReplicateDelete
              - s3:ReplicateTags
            Effect: Allow
            Resource: !Sub ${DestinationBucketArn}/*
        Version: "2012-10-17"
      PolicyName: ReplicationDestinationPolicy
      Roles:
        - !Ref ReplicationRole

  RadiotopiaMediaBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Sub prx-mrr-${AWS::Region}-radiotopia-media
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: Production }
        - { Key: prx:dev:application, Value: radiotopia.fm }
      ReplicationConfiguration: !If
        - HasDestinationBucketArn
        - Role: !GetAtt ReplicationRole.Arn
          Rules:
            - Destination:
                Bucket: !Ref DestinationBucketArn
              Status: Enabled
        - !Ref AWS::NoValue
      VersioningConfiguration:
        Status: Enabled # Required for replication
