# storage/multi-region-replication/networks.yml

################################################################################
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# Changes to this template must be deployed to all regions immediately!
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
################################################################################

AWSTemplateFormatVersion: "2010-09-09"
Description: >-
  Creates an S3 bucket to be used for Networks. Contents will be replicated to
  a second region. Buckets in both regions are created using this template.
  Once both buckets have been created, the destination bucket parameter should
  be set on the stack that is serving as the source region.

Parameters:
  BucketNameOverride:
    Type: String
  DestinationBucketArn:
    Type: String
  EnvironmentType:
    Type: String
    AllowedValues:
      - Staging
      - Production

Conditions:
  HasDestinationBucketArn: !Not [!Equals [!Ref DestinationBucketArn, ""]]
  HasBucketNameOverride: !Not [!Equals [!Ref BucketNameOverride, ""]]

Mappings:
  EnvironmentTypeMap:
    Staging:
      abbreviation: stag
    Production:
      abbreviation: prod

Resources:
  ReplicationRole:
    Type: AWS::IAM::Role
    Condition: HasDestinationBucketArn
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: s3.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Networks }
  ReplicationSourcePolicy:
    Type: AWS::IAM::Policy
    Condition: HasDestinationBucketArn
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetReplicationConfiguration
              - s3:ListBucket
            Effect: Allow
            Resource: !GetAtt NetworksBucket.Arn
          - Action:
              - s3:GetObjectVersionForReplication
              - s3:GetObjectVersionAcl
              - s3:GetObjectVersionTagging
            Effect: Allow
            Resource: !Sub ${NetworksBucket.Arn}/*
        Version: "2012-10-17"
      PolicyName: ReplicationSourcePolicy
      Roles:
        - !Ref ReplicationRole
  ReplicationDestinationPolicy:
    Type: AWS::IAM::Policy
    Condition: HasDestinationBucketArn
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:ReplicateObject
              - s3:ReplicateDelete
              - s3:ReplicateTags
            Effect: Allow
            Resource: !Sub ${DestinationBucketArn}/*
        Version: "2012-10-17"
      PolicyName: ReplicationDestinationPolicy
      Roles:
        - !Ref ReplicationRole

  NetworksBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !If
        - HasBucketNameOverride
        - !Ref BucketNameOverride
        - Fn::Sub:
            - prx-mrr-${AWS::Region}-networks-${env}
            - env: !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, abbreviation]
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ["*"]
            AllowedMethods: [PUT, POST, DELETE, GET, HEAD]
            AllowedOrigins: ["*"]
            ExposedHeaders:
              - ETag
              - Content-Type
              - Content-Length
              - Date
            MaxAge: 3000
      LifecycleConfiguration:
        Rules:
          - Id: Move to IA
            Status: Enabled
            Transitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: 30
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      ReplicationConfiguration: !If
        - HasDestinationBucketArn
        - Role: !GetAtt ReplicationRole.Arn
          Rules:
            - Destination:
                Bucket: !Ref DestinationBucketArn
              Status: Enabled
        - !Ref AWS::NoValue
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Networks }
      VersioningConfiguration:
        Status: Enabled # Required for replication
