AWSTemplateFormatVersion: "2010-09-09"
Description: publish.prx.org application running in Docker
Parameters:
  VPC:
    Type: String
  VPCSubnet1:
    Type: String
  VPCSubnet2:
    Type: String
  RootStackName:
    Type: String
  ECSCluster:
    Type: String
  ECSServiceAutoscaleIAMRoleArn:
    Type: String
  ECSServiceIAMRole:
    Type: String
  EnvironmentTypeAbbreviation:
    Type: String
  PublishECRRegion:
    Type: String
  PublishECRRepositoryName:
    Type: String
  PublishECRImageTag:
    Type: String
  PublishEnvAuthClientId:
    Type: String
  PublishEnvAuthHost:
    Type: String
  PublishEnvAwsKey:
    Type: String
  PublishEnvAwsUrl:
    Type: String
  PublishEnvBucketFolder:
    Type: String
  PublishEnvBucketName:
    Type: String
  PublishEnvCmsHost:
    Type: String
  PublishEnvPlayHost:
    Type: String
  PublishEnvSignUrl:
    Type: String
  PublishEnvUseCloudfront:
    Type: String
  OpsDebugMessagesSNSTopicArn:
    Type: String
Resources:
  PublishLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      RetentionInDays: 14
  PublishSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Allow web and SSH traffic to the ALB
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
      Tags:
        - Key: Name
          Value: !Sub ${RootStackName} Publish ALB
  PublishALBTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    DependsOn: PublishALB
    Properties:
      HealthCheckIntervalSeconds: 60
      UnhealthyThresholdCount: 10
      HealthCheckPath: /
      Name: !Sub publish-${EnvironmentTypeAbbreviation}-${VPC}
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VPC
  PublishALB:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Scheme: internet-facing
      Subnets:
        - !Ref VPCSubnet1
        - !Ref VPCSubnet2
      SecurityGroups:
        - !Ref PublishSecurityGroup
  PublishALBListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      LoadBalancerArn: !Ref PublishALB
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref PublishALBTargetGroup
  PublishALBListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      Certificates:
        - !Ref PublishCertificate
      LoadBalancerArn: !Ref PublishALB
      Port: 443
      Protocol: HTTPS
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref PublishALBTargetGroup
  PublishTaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      ContainerDefinitions:
        - Cpu: 512
          Environment:
            - Name: AUTH_CLIENT_ID
              Value: !Ref PublishEnvAuthClientId
            - Name: AUTH_HOST
              Value: !Ref PublishEnvAuthHost
            - Name: AWS_KEY
              Value: !Ref PublishEnvAwsKey
            - Name: AWS_URL
              Value: !Ref PublishEnvAwsUrl
            - Name: BUCKET_FOLDER
              Value: !Ref PublishEnvBucketFolder
            - Name: BUCKET_NAME
              Value: !Ref PublishEnvBucketName
            - Name: CMS_HOST
              Value: !Ref PublishEnvCmsHost
            - Name: PLAY_HOST
              Value: !Ref PublishEnvPlayHost
            - Name: SIGN_URL
              Value: !Ref PublishEnvSignUrl
            - Name: USE_CLOUDFRONT
              Value: !Ref PublishEnvUseCloudfront
          Essential: true
          # TODO
          # Image: !Sub ${AWS::AccountId}.dkr.ecr.${AudiogramECRRegion}.amazonaws.com/${AudiogramECRRepositoryName}:${AudiogramECRImageTag}
          Image: 561178107736.dkr.ecr.us-east-1.amazonaws.com/publish.prx.org:master.193
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref PublishLogGroup
              awslogs-region: !Ref AWS::Region
          Memory: 384
          Name: publish-express # TODO better name
          PortMappings:
            - HostPort: 0
              ContainerPort: 4200
  PublishService:
    Type: "AWS::ECS::Service"
    DependsOn: PublishALBListener
    Properties:
      Cluster: !Ref ECSCluster
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      LoadBalancers:
        - ContainerName: publish-express # TODO better name
          ContainerPort: 4200
          TargetGroupArn: !Ref PublishALBTargetGroup
      Role: !Ref ECSServiceIAMRole
      TaskDefinition: !Ref PublishTaskDefinition
  PublishWebRecordSetGroup:
    Type: "AWS::Route53::RecordSetGroup"
    DependsOn: PublishALB
    Properties:
      Comment: Record sets for dualstack web traffic to an publish instance
      HostedZoneName: prx.tech.
      RecordSets:
        - Type: A
          Name: !Sub ${EnvironmentTypeAbbreviation}.publish.${VPC}.prx.tech.
          AliasTarget:
            DNSName: !GetAtt PublishALB.DNSName
            HostedZoneId: !GetAtt PublishALB.CanonicalHostedZoneID
  PublishCertificate:
    Type: "AWS::CertificateManager::Certificate"
    Properties:
      DomainName: !Sub ${EnvironmentTypeAbbreviation}.publish.${VPC}.prx.tech
      DomainValidationOptions:
        - ValidationDomain: prx.tech
          DomainName: !Sub ${EnvironmentTypeAbbreviation}.publish.${VPC}.prx.tech
  # AudiogramScalableTarget:
  #   Type: "AWS::ApplicationAutoScaling::ScalableTarget"
  #   Properties:
  #     MaxCapacity: 5
  #     MinCapacity: 1
  #     ResourceId: !Join ["/", ["service", !Ref ECSCluster, !GetAtt AudiogramService.Name]]
  #     RoleARN: !Ref ECSServiceAutoscaleIAMRoleArn
  #     ScalableDimension: "ecs:service:DesiredCount"
  #     ServiceNamespace: ecs
  # AudiogramScaleOutPolicy:
  #   Type: "AWS::ApplicationAutoScaling::ScalingPolicy"
  #   Properties:
  #     PolicyName: AudiogramScaleOutPolicy
  #     PolicyType: StepScaling
  #     ScalingTargetId: !Ref AudiogramScalableTarget
  #     StepScalingPolicyConfiguration:
  #       AdjustmentType: ChangeInCapacity
  #       Cooldown: 60
  #       MetricAggregationType: Average
  #       StepAdjustments:
  #         - MetricIntervalLowerBound: 0
  #           MetricIntervalUpperBound: 25
  #           ScalingAdjustment: 1
  #         - MetricIntervalLowerBound: 25
  #           ScalingAdjustment: 2
  # AudiogramScaleInPolicy:
  #   Type: "AWS::ApplicationAutoScaling::ScalingPolicy"
  #   Properties:
  #     PolicyName: AudiogramScaleInPolicy
  #     PolicyType: StepScaling
  #     ScalingTargetId: !Ref AudiogramScalableTarget
  #     StepScalingPolicyConfiguration:
  #       AdjustmentType: ChangeInCapacity
  #       Cooldown: 60
  #       MetricAggregationType: Average
  #       StepAdjustments:
  #         - MetricIntervalUpperBound: 0
  #           ScalingAdjustment: -1
  # AudiogramScaleOutAlarm:
  #   Type: "AWS::CloudWatch::Alarm"
  #   Properties:
  #     ActionsEnabled: true
  #     AlarmActions:
  #       - !Ref AudiogramScaleOutPolicy
  #       - !Ref OpsDebugMessagesSNSTopicArn
  #     AlarmDescription: >
  #       The CPU utilization of the service has exceeded 50% for more than
  #       one minute. Breaching this alarm should trigger a service scale out.
  #     ComparisonOperator: GreaterThanOrEqualToThreshold
  #     Dimensions:
  #       - Name: ClusterName
  #         Value: !Ref ECSCluster
  #       - Name: ServiceName
  #         Value: !GetAtt AudiogramService.Name
  #     EvaluationPeriods: "1"
  #     MetricName: CPUUtilization
  #     Namespace: AWS/ECS
  #     Period: "60"
  #     Statistic: Average
  #     Threshold: "50"
  #     Unit: Percent
  # AudiogramScaleInAlarm:
  #   Type: "AWS::CloudWatch::Alarm"
  #   Properties:
  #     ActionsEnabled: true
  #     AlarmActions:
  #       - !Ref AudiogramScaleInPolicy
  #       - !Ref OpsDebugMessagesSNSTopicArn
  #     AlarmDescription: >
  #       The CPU utilization of the service has dropped below 10% for more than
  #       five minutes. Breaching this alarm should trigger a service scale in.
  #     ComparisonOperator: LessThanOrEqualToThreshold
  #     Dimensions:
  #       - Name: ClusterName
  #         Value: !Ref ECSCluster
  #       - Name: ServiceName
  #         Value: !GetAtt AudiogramService.Name
  #     EvaluationPeriods: "5"
  #     MetricName: CPUUtilization
  #     Namespace: AWS/ECS
  #     Period: "60"
  #     Statistic: Average
  #     Threshold: "10"
  #     Unit: Percent
Outputs:
  DNSName:
    Description: The DNS name for the applications load balancer
    Value: !GetAtt PublishALB.DNSName
  HostedZoneDNSName:
    Description: Convenience domain name for the ALB in a hosted zone
    Value: !Sub |
      ${EnvironmentTypeAbbreviation}.publish.${VPC}.prx.tech.
