AWSTemplateFormatVersion: "2010-09-09"
Description: publish.prx.org application running in Docker
Mappings:
  ContainerNameMap:
    PublishApp:
      name: publish-express
Parameters:
  VPC:
    Type: "AWS::EC2::VPC::Id"
  VPCSubnet1:
    Type: "AWS::EC2::Subnet::Id"
  VPCSubnet2:
    Type: "AWS::EC2::Subnet::Id"
  VPCCertificateArn:
    Type: String
  RootStackName:
    Type: String
  OpsDebugMessagesSNSTopicArn:
    Type: String
  ECSCluster:
    Type: String
  ECSServiceAutoscaleIAMRoleArn:
    Type: String
  ECSServiceIAMRole:
    Type: String
  EnvironmentTypeAbbreviation:
    Type: String
  ECRRegion:
    Type: String
  # Shared ENV
  EnvCmsHost:
    Type: String
  EnvIdHost:
    Type: String
  EnvPlayHost:
    Type: String
  # Publish ECR
  PublishECRImageTag:
    Type: String
  # Publish ENV
  PublishEnvAuthClientId:
    Type: String
  PublishEnvAwsKey:
    Type: String
  PublishEnvAwsUrl:
    Type: String
  PublishEnvBucketFolder:
    Type: String
  PublishEnvBucketName:
    Type: String
  PublishEnvGaKey:
    Type: String
  PublishEnvNewRelicAppName:
    Type: String
  PublishEnvNewRelicLicenseKey:
    Type: String
  PublishEnvSignUrl:
    Type: String
  PublishEnvUseCloudfront:
    Type: String
Resources:
  PublishLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      RetentionInDays: 14
  PublishSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Allow web and SSH traffic to the ALB
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
      Tags:
        - Key: Name
          Value: !Sub ${RootStackName} Publish ALB
  PublishALBTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    DependsOn: PublishALB
    Properties:
      HealthCheckIntervalSeconds: 60
      UnhealthyThresholdCount: 10
      HealthCheckPath: /
      Name: !Sub publish-${EnvironmentTypeAbbreviation}-${VPC}
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VPC
  PublishALB:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Scheme: internet-facing
      SecurityGroups:
        - !Ref PublishSecurityGroup
      Subnets:
        - !Ref VPCSubnet1
        - !Ref VPCSubnet2
      Tags:
        - Key: Project
          Value: publish.prx.org
  PublishALBHTTPListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      LoadBalancerArn: !Ref PublishALB
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref PublishALBTargetGroup
  PublishALBHTTPSListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      Certificates:
        - CertificateArn: !Ref VPCCertificateArn
      LoadBalancerArn: !Ref PublishALB
      Port: 443
      Protocol: HTTPS
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref PublishALBTargetGroup
  PublishTaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      ContainerDefinitions:
        - Cpu: 64
          Environment:
            - Name: AUTH_CLIENT_ID
              Value: !Ref PublishEnvAuthClientId
            - Name: AUTH_HOST
              Value: !Ref EnvIdHost
            - Name: AWS_KEY
              Value: !Ref PublishEnvAwsKey
            - Name: AWS_URL
              Value: !Ref PublishEnvAwsUrl
            - Name: BUCKET_FOLDER
              Value: !Ref PublishEnvBucketFolder
            - Name: BUCKET_NAME
              Value: !Ref PublishEnvBucketName
            - Name: CMS_HOST
              Value: !Ref EnvCmsHost
            - Name: GA_KEY
              Value: !Ref PublishEnvGaKey
            - Name: NEW_RELIC_APP_NAME
              Value: !Ref PublishEnvNewRelicAppName
            - Name: NEW_RELIC_LICENSE_KEY
              Value: !Ref PublishEnvNewRelicLicenseKey
            - Name: PLAY_HOST
              Value: !Ref EnvPlayHost
            - Name: SIGN_URL
              Value: !Ref PublishEnvSignUrl
            - Name: USE_CLOUDFRONT
              Value: !Ref PublishEnvUseCloudfront
          Essential: true
          # TODO
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${ECRRegion}.amazonaws.com/publish.prx.org:${PublishECRImageTag}
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref PublishLogGroup
              awslogs-region: !Ref AWS::Region
          Memory: 128
          Name: !FindInMap [ContainerNameMap, PublishApp, name]
          PortMappings:
            - HostPort: 0
              ContainerPort: 4200
  PublishService:
    Type: "AWS::ECS::Service"
    DependsOn:
      - PublishALBHTTPListener
      - PublishALBHTTPSListener
    Properties:
      Cluster: !Ref ECSCluster
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      LoadBalancers:
        - ContainerName: !FindInMap [ContainerNameMap, PublishApp, name]
          ContainerPort: 4200
          TargetGroupArn: !Ref PublishALBTargetGroup
      Role: !Ref ECSServiceIAMRole
      TaskDefinition: !Ref PublishTaskDefinition
  PublishWebRecordSetGroup:
    Type: "AWS::Route53::RecordSetGroup"
    DependsOn: PublishALB
    Properties:
      Comment: Record sets for dualstack web traffic to an publish instance
      HostedZoneName: prx.tech.
      RecordSets:
        - Type: A
          Name: !Sub ${EnvironmentTypeAbbreviation}-publish.${VPC}.prx.tech.
          AliasTarget:
            DNSName: !GetAtt PublishALB.DNSName
            HostedZoneId: !GetAtt PublishALB.CanonicalHostedZoneID
Outputs:
  DNSName:
    Description: The DNS name for the applications load balancer
    Value: !GetAtt PublishALB.DNSName
  HostedZoneDNSName:
    Description: Convenience domain name for the ALB in a hosted zone
    Value: !Sub |
      ${EnvironmentTypeAbbreviation}-publish.${VPC}.prx.tech.
