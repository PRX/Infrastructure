# devops/aws-managements/devops-cross-account-access-role.yml
AWSTemplateFormatVersion: "2010-09-09"
Description: >-
  Creates an IAM role that's intended to exist in each account within an AWS
  Organization. This role provides specific, consistent access to various
  resources and services within all accounts, so that they can be managed
  centrally. By default and convention, the role's name is:
  DevOps-CrossAccountAccessRole. This template is intended to be launched as
  part of a service-managed StackSet that automatically deploys to all accounts
  within an organization.

Parameters:
  OrganizationId:
    Type: String
    Description: e.g. o-a1s2d3f4f5g
    AllowedPattern: ^(o-[a-z0-9]{4,32})$
  CrossAccountAccessRoleName:
    Type: String
    Default: DevOps-CrossAccountAccessRole
    Description: >-
      The name of cross-account access role. The default value is
      "DevOps-CrossAccountAccessRole", and generally that should be used so
      that it's predictable by other users and services.

Resources:
  CodePipelinePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: codepipeline:ListPipelines
            Effect: Allow
            Resource: "*"
            Sid: AllowListPipelines
          - Action: codepipeline:StartPipelineExecution
            Effect: Allow
            Resource: "*"
            Sid: AllowStartExecution
          - Action: codepipeline:PutApprovalResult
            Effect: Allow
            Resource: "*"
            Sid: AllowApprovalAction
          - Action:
              - codepipeline:DisableStageTransition
              - codepipeline:EnableStageTransition
            Effect: Allow
            Resource: "*"
            Sid: AllowStageTransitionToggle
          - Action:
              - codepipeline:GetPipeline
              - codepipeline:GetPipelineState
            Effect: Allow
            Resource: "*"
            Sid: AllowReadOnlyAccess
        Version: "2012-10-17"

  CloudFrontPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: cloudfront:ListDistributions
            Effect: Allow
            Resource: "*"
            Sid: AllowListDistributions
          - Action: cloudfront:CreateInvalidation
            Effect: Allow
            Resource: "*"
            Sid: AllowInvalidations
        Version: "2012-10-17"

  S3ListVersionsPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:ListBucketVersions
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
  S3TemplateConfigCopyPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:ListBucket
            Effect: Allow
            Resource: "*"
          - Action:
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetObjectTagging
              - s3:PutObject
              - s3:PutObjectTagging
            Effect: Allow
            Resource: arn:aws:s3:::*/template-config-staging.zip
        Version: "2012-10-17"

  IamPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - iam:Get*
              - iam:List*
            Effect: Allow
            Resource: "*"
            Sid: AllowReadOnlyAccess
        Version: "2012-10-17"

  CrossAccountAccessRole:
    Type: AWS::IAM::Role
    Properties:
      # Allow any principal within the same AWS Organization to assume this
      # role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Condition:
              StringEquals:
                aws:PrincipalOrgID: !Ref OrganizationId
            Effect: Allow
            Principal:
              AWS: "*"
      # Include all the policies defined above
      ManagedPolicyArns:
        - !Ref CloudFrontPolicy
        - !Ref CodePipelinePolicy
        - !Ref IamPolicy
        - !Ref S3ListVersionsPolicy
        - !Ref S3TemplateConfigCopyPolicy
      RoleName: !Sub ${CrossAccountAccessRoleName}
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: Production }
        - { Key: prx:dev:application, Value: DevOps }

Outputs:
  RoleNamePattern:
    Value: !Ref CrossAccountAccessRole
