# devops/aws-management/github-oidc-role.yml
AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  FullRepoName:
    Type: String
    Default: PRX/Infrastructure

Resources:
  GitHubOidc:
    Type: AWS::IAM::OIDCProvider
    Properties:
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        # https://github.blog/changelog/2023-06-27-github-actions-update-on-oidc-integration-with-aws/
        - 6938fd4d98bab03faadb97b34396831e3780aea1
        - 1c58a3a8518e8759bf075b76b750d4f2df264fcd
      Url: https://token.actions.githubusercontent.com

  # Allows read-only access to all services that GitHub actions interact with,
  # either directly, or through something like CloudFormation
  OidcReadOnlyPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Allows read only access services needed for GitHub actions
      PolicyDocument:
        Statement:
          - Action: ssm:DescribeParameters
            Effect: Allow
            Resource: "*"
            Sid: AllowSsmParameterReadOnly
          - Action:
              - apigateway:Get*
              - cloudformation:Describe*
              - cloudformation:Get*
              - cloudformation:List*
              - cloudfront:Describe*
              - cloudfront:Get*
              - cloudfront:List*
              - codebuild:BatchGet*
              - codebuild:Get*
              - codebuild:List*
              - codepipeline:Get*
              - codepipeline:List*
              - ecr:Describe*
              - ecr:Get*
              - ecr:List*
              - events:Describe*
              - events:List*
              - iam:Get*
              - iam:List*
              - lambda:Get*
              - lambda:List*
              - logs:Describe*
              - logs:Get*
              - logs:List*
              - route53:Get*
              - route53:List*
              - s3:Describe*
              - s3:Get*
              - s3:List*
              - states:Describe*
            Effect: Allow
            Resource: "*"
            Sid: AllowGlobalReadOnly
        Version: "2012-10-17"

  # Allows global (all resources) access for specific actions that are
  # generally considered safe
  OidcSafeActionGlobalAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Allows access to specific actions needed by GitHub OIDC
      PolicyDocument:
        Statement:
          - Action:
              # Allows GitHub actions to start execution of any CodePipeline
              - codepipeline:StartPipelineExecution

              # Allows GitHub actions to send emails via SES
              - ses:SendEmail

              # Allows GitHub actions to push Docker images to ECR
              - ecr:PutImage
              - ecr:UploadLayerPart

              # Allows GitHub actions to create CloudFormation change sets
              - cloudformation:CreateChangeSet
              - cloudformation:DescribeStacks

              # Allows GitHub actions to start Step Functions executions
              # TODO This is for Porter acceptance tests, which probably should
              # be done with a different role
              - states:StartExecution
            Effect: Allow
            Resource: "*"
            Sid: AllowGlobalAccess
          - Action:
              # Allows AWS SAM CLI to upload to default managed S3 buckets
              - s3:PutObject
            Effect: Allow
            Resource: arn:aws:s3:::aws-sam-cli-managed-default-samclisourcebucket*/*
            Sid: AllowGlobalSamCliS3Access
        Version: "2012-10-17"

  # Denies global (all resources) access for some actions that would never be
  # considered safe
  OidcGlobalDenyPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Denies access to specific actions for GitHub OIDC
      PolicyDocument:
        Statement:
          - Action:
              - s3:DeleteObject
              - rds:DeleteDBSnapshot
            Effect: Deny
            Resource: "*"
            Sid: AllowGlobalAccess
        Version: "2012-10-17"

  # Allows GitHub actions to interact directly with certain CloudFormation
  # stacks, in order to deploy updates to those stacks
  OidcCloudFormationPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Allows access to specific actions needed by GitHub OIDC
      PolicyDocument:
        Statement:
          - Action: cloudformation:*
            Effect: Allow
            Resource: arn:aws:cloudformation:*:aws:transform/Serverless-2016-10-31
            Sid: AllowServerlessTransformFullAccess
          - Action:
              - cloudformation:DeleteChangeSet
              - cloudformation:ExecuteChangeSet
              - cloudformation:UpdateStack
            Effect: Allow
            Resource:
              # List the ARN of each CloudFormation stack being deployed via
              # GitHub actions
              #
              ## Spire root stacks
              - arn:aws:cloudformation:*:561178107736:stack/infrastructure-cd/*
              ## Pipeline stacks deployed to multiple regions
              - arn:aws:cloudformation:*:*:stack/porter-cd-pipeline/*
              - arn:aws:cloudformation:*:*:stack/oxbow-cd-pipeline/*
              ## Single-region pipeline stacks
              - arn:aws:cloudformation:us-east-2:048723829744:stack/management-cd/*
              - arn:aws:cloudformation:us-east-2:578003269847:stack/prx-devops-cd-pipeline/*
              ## PRX CI
              - arn:aws:cloudformation:*:561178107736:stack/infrastructure-ci/*
              # Standalone application stacks
              - arn:aws:cloudformation:us-east-1:561178107736:stack/accounting-toolkit/*
              ## Route 53 hosted zones: prx-legacy
              - arn:aws:cloudformation:us-east-1:561178107736:stack/hostedzone-earhustlesq-com/*
              - arn:aws:cloudformation:us-east-1:561178107736:stack/hostedzone-passengerlist-org/*
              - arn:aws:cloudformation:us-east-1:561178107736:stack/hostedzone-podcastgarage-org/*
              - arn:aws:cloudformation:us-east-1:561178107736:stack/hostedzone-prx-mx/*
              - arn:aws:cloudformation:us-east-1:561178107736:stack/hostedzone-prxtransfer-org/*
              - arn:aws:cloudformation:*:561178107736:stack/hostedzone-prxtransfer-org-health-checks/*
              - arn:aws:cloudformation:us-east-1:561178107736:stack/hostedzone-radiotopia-com/*
              - arn:aws:cloudformation:us-east-1:561178107736:stack/hostedzone-radiotopia-fm/*
              - arn:aws:cloudformation:us-east-1:561178107736:stack/hostedzone-trax-fm/*
              ## Route 53 hosted zones: prx-feed-cdn-production
              - arn:aws:cloudformation:us-east-1:838846856186:stack/hosted-zone-publicfeeds-net/*
            Sid: AllowStackUpdates
        Version: "2012-10-17"

  # TODO There should be multiple roles, for different cases, like repos with
  # workflows that just need to run tests & builds, and those that actually
  # need to deploy things
  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringLike:
                # Allows only actions in this repository to assume the role
                token.actions.githubusercontent.com:sub:
                  - !Sub repo:${FullRepoName}:*
                  - repo:PRX/Porter:*
            Effect: Allow
            Principal:
              Federated: !Ref GitHubOidc
      ManagedPolicyArns:
        - !Ref OidcReadOnlyPolicy
        - !Ref OidcSafeActionGlobalAccessPolicy
        - !Ref OidcCloudFormationPolicy
      RoleName: DevOps-GitHubOidcFederatedRole
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: Production }
        - { Key: prx:dev:application, Value: DevOps }

  # Allows CloudFormation deploys initiated via GitHub actions to manage the
  # subset of resources contained within those CloudFormation stacks.
  #
  # In order to prevent this policy from becoming too powerful, given that it
  # will ultimately be used by an external service, it purposefuly excludes
  # some permissions that may be required to provide complete coverage of the
  # CloudFormation deploys. For example, it does not include
  # `route53:DeleteHostedZone`, even though there are stacks within GitHub
  # actions that could theoretically delete a hosted zone. This is forces those
  # more dangerous/destructive updates to happen somewhere other than GitHub
  # actions.
  #
  # In general, this role still has a significant number of privileges for a
  # wildcard set of resources and should be treated with care.
  #
  # It is an inline policy, rather than a managed policy, becuase of the larger
  # character limit on inline policies.
  #
  # NOTE: If this gets too big, it may need to be split into multiple roles,
  # with different roles being used for different types of GitHub actions
  CloudFormationResourceManipulationPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - apigateway:PATCH
              - apigateway:PUT

              - codebuild:UpdateProject

              - codepipeline:CreatePipeline
              - codepipeline:DeletePipeline
              - codepipeline:DeleteWebhook
              - codepipeline:DeregisterWebhookWithThirdParty
              - codepipeline:PutWebhook
              - codepipeline:RegisterWebhookWithThirdParty
              - codepipeline:TagResource
              - codepipeline:UntagResource
              - codepipeline:UpdatePipeline

              - codestar-connections:PassConnection

              - ecr:DeleteLifecyclePolicy
              - ecr:DeleteRepositoryPolicy
              - ecr:PutLifecyclePolicy
              - ecr:PutReplicationConfiguration
              - ecr:SetRepositoryPolicy
              - ecr:TagResource
              - ecr:UntagResource

              - events:DeleteRule
              - events:EnableRule
              - events:PutRule
              - events:PutTargets
              - events:RemoveTargets
              - events:TagResource
              - events:UntagResource

              - iam:AttachRolePolicy
              - iam:CreateRole
              - iam:DetachRolePolicy
              - iam:PassRole
              - iam:PutRolePolicy
              - iam:Tag*
              - iam:Untag*

              - lambda:AddPermission
              - lambda:CreateEventSourceMapping
              - lambda:CreateFunctionUrlConfig
              - lambda:DeleteEventSourceMapping
              - lambda:DeleteFunctionEventInvokeConfig
              - lambda:DeleteFunctionUrlConfig
              - lambda:RemovePermission
              - lambda:TagResource
              - lambda:UntagResource
              - lambda:UpdateEventSourceMapping
              - lambda:UpdateFunction*

              - logs:CreatLogGroup
              - logs:CreateLogStream
              - logs:DeleteLogGroup
              - logs:DeleteLogStream
              - logs:DeleteRetentionPolicy
              - logs:PutRetentionPolicy
              - logs:TagLogGroup
              - logs:UntagLogGroup

              - route53:ChangeResourceRecordSets
              - route53:ChangeTagsForResource
              - route53:CreateHealthCheck
              - route53:CreateTrafficPolicy
              - route53:CreateTrafficPolicyInstance
              - route53:DeleteHealthCheck
              - route53:DeleteTrafficPolicy
              - route53:DeleteTrafficPolicyInstance
              - route53:UpdateHealthCheck
              - route53:UpdateHostedZoneComment
              - route53:UpdateTrafficPolicyComment
              - route53:UpdateTrafficPolicyInstance

              - s3:PutBucketTagging

              - sns:Publish
              - sns:Tag*
              - sns:Untag*
            Condition:
              StringEquals:
                # This ensures that the role only makes changes via
                # CloudFormation, which ensures that only resources managed by
                # the stacks listed above can be altered.
                aws:CalledViaFirst: cloudformation.amazonaws.com
            Effect: Allow
            Resource: "*"
            Sid: AllowGlobalResourceUpdates
        Version: "2012-10-17"
      PolicyName: CfnResourceManipulation
      Roles: [!Ref Role]

Outputs:
  RoleArn:
    Value: !GetAtt Role.Arn
