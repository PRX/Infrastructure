# devops/tooling/chat-ops/cloudformation-notifications/template.yml
# This template is continuously deployed by the DevOps CD pipeline
#
AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >-
  Creates a Lambda function that handles CloudFormation stack event
  notifications, which the CloudFormation service delivers to EventBridge. It's
  assumed that events from all accounts and regions in the AWS organization are
  being forwarded to the event bus that this Lambda function is subscribed to.

Parameters:
  OrganizationId: { Type: String }

Resources:
  CloudFormationNotificationsEventBus:
    Type: AWS::Events::EventBus
    Properties:
      Name: !Ref AWS::StackName
  CloudFormationNotificationsEventBusPolicy:
    Type: AWS::Events::EventBusPolicy
    Properties:
      EventBusName: !Ref CloudFormationNotificationsEventBus
      StatementId: AllowOrganizationPutEventsCfn
      Statement:
        Action: events:PutEvents
        Condition:
          StringEquals:
            aws:PrincipalOrgID: !Ref OrganizationId
        Effect: Allow
        Principal: "*"
        Resource: !GetAtt CloudFormationNotificationsEventBus.Arn

  CloudFormationNotificationsSlackFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Description: >-
        Sends messages to Slack in response to CloudFormation stack event
        notifications. Only certain notifications are forwarded to Slack, to
        reduce the volume of messages.
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Events:
        Alarms: # TODO Rename
          Properties:
            EventBusName: !Ref CloudFormationNotificationsEventBus
            Pattern:
              detail-type:
                - CloudFormation Resource Status Change
                - CloudFormation Stack Status Change
              source:
                - aws.cloudformation
          Type: EventBridgeRule
      Handler: index.handler
      MemorySize: 192
      Policies:
        - Statement:
            - Action: events:PutEvents
              Effect: Allow
              Resource: !Sub arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:event-bus/default
          Version: "2012-10-17"
      Runtime: nodejs20.x
      Tags:
        prx:meta:tagging-version: "2021-04-07"
        prx:cloudformation:stack-name: !Ref AWS::StackName
        prx:cloudformation:stack-id: !Ref AWS::StackId
        prx:ops:environment: Production
        prx:dev:application: DevOps
      Timeout: 20
  CloudFormationNotificationsSlackFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      LogGroupName: !Sub /aws/lambda/${CloudFormationNotificationsSlackFunction}
      RetentionInDays: 14
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: Production }
        - { Key: prx:dev:application, Value: DevOps }

  CloudFormationNotificationsSlackFunctionErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ERROR [CloudFormation Notifications] Slack Relay <prod> INVOCATION ERRORS (${AWS::StackName})
      AlarmDescription: >-
        The CloudFormation Notifications Slack message Lambda function is
        experiencing errors.
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching
      Dimensions:
        - Name: FunctionName
          Value: !Ref CloudFormationNotificationsSlackFunction
