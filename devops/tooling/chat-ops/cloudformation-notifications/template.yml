# devops/tooling/chat-ops/cloudformation-notifications/template.yml
# This template is continuously deployed by the DevOps CD pipeline
#
AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >-
  Creates a Lambda function that handles CloudFormation stack event
  notifications, which the CloudFormation service delivers to SNS topics.
  CloudFormation cannot deliver to topics across regions, so this function is
  subscribed to topics in all regions where we use CloudFormation. It can
  deliver across accounts, so only one topic is necessary per region for the
  entire organization.

Parameters:
  SlackMessageRelaySnsTopicArn: { Type: String }
  UsEast1TopicArn: { Type: String, Default: "" }
  UsEast2TopicArn: { Type: String, Default: "" }
  UsWest2TopicArn: { Type: String, Default: "" }

Conditions:
  HasUsEast1TopicArn: !Not [!Equals [!Ref UsEast1TopicArn, ""]]
  HasUsEast2TopicArn: !Not [!Equals [!Ref UsEast2TopicArn, ""]]
  HasUsWest2TopicArn: !Not [!Equals [!Ref UsWest2TopicArn, ""]]

Resources:
  CloudFormationNotificationsSlackFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Description: >-
        Sends messages to Slack in response to CloudFormation stack event
        notifications. Only certain notifications are forwarded to Slack, to
        reduce the volume of messages.
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
          SLACK_MESSAGE_RELAY_SNS_TOPIC_ARN: !Ref SlackMessageRelaySnsTopicArn
      Handler: index.handler
      MemorySize: 192
      Policies:
        - Statement:
            - Action: sns:Publish
              Effect: Allow
              Resource: !Ref SlackMessageRelaySnsTopicArn
          Version: "2012-10-17"
      Runtime: nodejs14.x
      Tags:
        prx:meta:tagging-version: "2021-04-07"
        prx:cloudformation:stack-name: !Ref AWS::StackName
        prx:cloudformation:stack-id: !Ref AWS::StackId
        prx:ops:environment: Production
        prx:dev:application: DevOps
      Timeout: 20
  CloudFormationNotificationsSlackFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${CloudFormationNotificationsSlackFunction}
      RetentionInDays: 14
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: Production }
        - { Key: prx:dev:application, Value: DevOps }

  CloudFormationNotificationsSlackFunctionErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ERROR [CloudFormation Notifications] Slack Relay <prod> INVOCATION ERRORS (${AWS::StackName})
      AlarmDescription: >-
        The CloudFormation Notifications Slack message Lambda function is
        experiencing errors.
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching
      Dimensions:
        - Name: FunctionName
          Value: !Ref CloudFormationNotificationsSlackFunction

  UsEast1Subscription:
    Condition: HasUsEast1TopicArn
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt CloudFormationNotificationsSlackFunction.Arn
      Protocol: lambda
      Region: us-east-1
      TopicArn: !Ref UsEast1TopicArn
  UsEast1Permission:
    Condition: HasUsEast1TopicArn
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt CloudFormationNotificationsSlackFunction.Arn
      Principal: sns.amazonaws.com
      Action: lambda:InvokeFunction
      SourceArn: !Ref UsEast1TopicArn

  UsEast2Subscription:
    Condition: HasUsEast2TopicArn
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt CloudFormationNotificationsSlackFunction.Arn
      Protocol: lambda
      Region: us-east-2
      TopicArn: !Ref UsEast2TopicArn
  UsEast2Permission:
    Condition: HasUsEast2TopicArn
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt CloudFormationNotificationsSlackFunction.Arn
      Principal: sns.amazonaws.com
      Action: lambda:InvokeFunction
      SourceArn: !Ref UsEast2TopicArn

  UsWest2Subscription:
    Condition: HasUsWest2TopicArn
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt CloudFormationNotificationsSlackFunction.Arn
      Protocol: lambda
      Region: us-west-2
      TopicArn: !Ref UsWest2TopicArn
  UsWest2Permission:
    Condition: HasUsWest2TopicArn
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt CloudFormationNotificationsSlackFunction.Arn
      Principal: sns.amazonaws.com
      Action: lambda:InvokeFunction
      SourceArn: !Ref UsWest2TopicArn
