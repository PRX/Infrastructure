# devops/tooling/chat-ops/cloudwatch-alarms/template.yml
# This template is continuously deployed by the DevOps CD pipeline
#
AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >-
  Creates an custom EventBridge event bus to handle CloudWatch Alarms from all
  accounts and all regions and send notification to Slack.

Parameters:
  OrganizationId:
    Type: String
    AllowedPattern: ^$|^(o-[a-z0-9]{4,32})$
  FatalSmsContactListSnsTopicArn:
    Type: String
  CrossAccountCloudWatchAlarmIamRoleName:
    Type: String

Resources:
  CloudWatchAlarmsEventBus:
    Type: AWS::Events::EventBus
    Properties:
      Name: !Ref AWS::StackName
  CloudWatchAlarmsEventBusPolicy:
    Type: AWS::Events::EventBusPolicy
    Properties:
      EventBusName: !Ref CloudWatchAlarmsEventBus
      StatementId: AllowOrganizationPutEvents
      Statement:
        Action: events:PutEvents
        Condition:
          StringEquals:
            aws:PrincipalOrgID: !Ref OrganizationId
        Effect: Allow
        Principal: "*"
        Resource: !GetAtt CloudWatchAlarmsEventBus.Arn

  CloudWatchAlarmsSlackFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/slack
      Description: >-
        Sends messages to Slack in response to CloudWatch Alarms state changes
        from across the organization. All accounts and all regions forward
        CloudWatch Alarms state change events to the custom event bus that
        has rules to trigger this function.
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
          CROSS_ACCOUNT_CLOUDWATCH_ALARM_IAM_ROLE_NAME: !Ref CrossAccountCloudWatchAlarmIamRoleName
      Events:
        Alarms:
          Properties:
            EventBusName: !Ref CloudWatchAlarmsEventBus
            Pattern:
              detail-type:
                - CloudWatch Alarm State Change
              source:
                - aws.cloudwatch
          Type: EventBridgeRule
      Handler: index.handler
      MemorySize: 192
      Policies:
        - Statement:
            - Action: events:PutEvents
              Effect: Allow
              Resource: !Sub arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:event-bus/default
          Version: "2012-10-17"
        - Statement:
            - Action: sts:AssumeRole
              Effect: Allow
              Resource: !Sub arn:aws:iam::*:role/${CrossAccountCloudWatchAlarmIamRoleName}
          Version: "2012-10-17"
      Runtime: nodejs20.x
      Tags:
        prx:meta:tagging-version: "2021-04-07"
        prx:cloudformation:stack-name: !Ref AWS::StackName
        prx:cloudformation:stack-id: !Ref AWS::StackId
        prx:ops:environment: Production
        prx:dev:application: DevOps
      Timeout: 20
  CloudWatchAlarmsSlackFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      LogGroupName: !Sub /aws/lambda/${CloudWatchAlarmsSlackFunction}
      RetentionInDays: 14
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: Production }
        - { Key: prx:dev:application, Value: DevOps }

  CloudWatchAlarmsSmsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/sms
      Description: >-
        Sends messages to SMS phone numbers in response to CloudWatch Alarms
        state changes from across the organization. All accounts and all
        regions forward CloudWatch Alarms state change events to the custom
        event bus that has rules to trigger this function.
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
          FATAL_SMS_CONTACT_LIST_SNS_TOPIC_ARN: !Ref FatalSmsContactListSnsTopicArn
      Events:
        Alarms:
          Properties:
            EventBusName: !Ref CloudWatchAlarmsEventBus
            Pattern:
              detail-type:
                - CloudWatch Alarm State Change
              source:
                - aws.cloudwatch
          Type: EventBridgeRule
      Handler: index.handler
      MemorySize: 128
      Policies:
        - Statement:
            - Action: sns:Publish
              Effect: Allow
              Resource: !Ref FatalSmsContactListSnsTopicArn
          Version: "2012-10-17"
      Runtime: nodejs18.x
      Tags:
        prx:meta:tagging-version: "2021-04-07"
        prx:cloudformation:stack-name: !Ref AWS::StackName
        prx:cloudformation:stack-id: !Ref AWS::StackId
        prx:ops:environment: Production
        prx:dev:application: DevOps
      Timeout: 20
  CloudWatchAlarmsSmsFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      LogGroupName: !Sub /aws/lambda/${CloudWatchAlarmsSmsFunction}
      RetentionInDays: 14
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: Production }
        - { Key: prx:dev:application, Value: DevOps }

Outputs:
  CloudWatchAlarmsEventBusArn:
    Value: !GetAtt CloudWatchAlarmsEventBus.Arn
