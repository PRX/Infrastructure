# devops/tooling/chat-ops/cloudtrail/template.yml
# This template is continuously deployed by the DevOps CD pipeline
#
AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >-
  Creates an custom EventBridge event bus to handle some CloudTrail activity
  from all accounts and all regions and send notification to Slack. Event rules
  deployed to those regions/accounts look for specific activity; not all
  CloudTrail activity is forwarded to this bus.

Parameters:
  OrganizationId:
    Type: String
    AllowedPattern: ^$|^(o-[a-z0-9]{4,32})$

Resources:
  CloudTrailEventBus:
    Type: AWS::Events::EventBus
    Properties:
      Name: CloudTrail-org-sink
  CloudTrailEventBusPolicy:
    # Allow PutEvents from anywhere within the organization
    # TODO Should have a Condition to limit this to events sent by events.amazonaws.com
    # since it's only intended to get events from other event buses, not from
    # any arbitrary sender
    Type: AWS::Events::EventBusPolicy
    Properties:
      EventBusName: !Ref CloudTrailEventBus
      StatementId: AllowOrganizationPutEventsTrail
      Statement:
        Action: events:PutEvents
        Condition:
          StringEquals:
            aws:PrincipalOrgID: !Ref OrganizationId
        Effect: Allow
        Principal: "*"
        Resource: !GetAtt CloudTrailEventBus.Arn

  RootActivityMonitorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/root-activity-monitor
      Description: >-
        Sends messages to Slack in response to root account activity found in
        CloudTrail
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Events:
        RootActivityEvent:
          Properties:
            EventBusName: !Ref CloudTrailEventBus
            Pattern:
              detail:
                userIdentity:
                  type:
                    - Root
              detail-type:
                - AWS API Call via CloudTrail
                - AWS Console Sign In via CloudTrail
          Type: EventBridgeRule
      Handler: index.handler
      MemorySize: 192
      Policies:
        - Statement:
            - Action: events:PutEvents
              Effect: Allow
              Resource: !Sub arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:event-bus/default
          Version: "2012-10-17"
      Runtime: nodejs20.x
      Tags:
        prx:meta:tagging-version: "2021-04-07"
        prx:cloudformation:stack-name: !Ref AWS::StackName
        prx:cloudformation:stack-id: !Ref AWS::StackId
        prx:ops:environment: Production
        prx:dev:application: Security
      Timeout: 20
  RootActivityMonitorLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      LogGroupName: !Sub /aws/lambda/${RootActivityMonitorFunction}
      RetentionInDays: 90
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: Production }
        - { Key: prx:dev:application, Value: Security }
  RootActivityMonitorErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub FATAL [CloudTrail] Root Activity Monitor <prod> FUNCTION ERRORS (${AWS::StackName})
      AlarmDescription: >-
        The Lambda function that relays CloudTrail root account activity to
        Slack is experiencing errors, which means there could be security
        events that need to be investigated.
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref RootActivityMonitorFunction
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: Production }
        - { Key: prx:dev:application, Value: Security }
      Threshold: 0
      TreatMissingData: notBreaching
