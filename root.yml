# Generally this template is used to launch stacks from the bootstrapping
# CodePipeline. Primarily is is simply a wrapper around individial app- and
# service-specific templates, which get nested into this template and are
# launched when this one is. The CodePiple also passes in a template
# configuration file, which includes parameter values for this and all nested
# templates. This root template MUST define all parameters that are included in
# the config file. It can then pass along select values to nested stacks that
# require them.
AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Launches stacks for a number of applications and services that are maintained
  in separate templates.
Mappings:
  EnvironmentTypeAbbreviationMap:
    Staging:
      abbreviation: stag
    Production:
      abbreviation: prod
Parameters:
  ASGKeyPairName:
    Description: >
      The EC2 key pair used for instances in the Auto Scaling
      group (region-specific)
    Type: String
  BootstrapStackName:
    Description: The name of the bootstrapping stack in this AWS region
    Type: String
  RootEnvironmentType:
    Description: A string indentifying the type of enviroment being launched
    Type: String
    AllowedValues:
      - Staging
      - Production
  AutoScalingSlackWebhookURL:
    Type: String
  CloudWatchSlackWebhookURL:
    Type: String
  CodePipelineSlackWebhookURL:
    Type: String
  GitHubOAuthToken:
    Description: >
      A GitHub access token that has permissions for any repositories being
      accessed by these stacks
    Type: String
Resources:
  NotificationsStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      Parameters:
        AutoScalingSlackWebhookURL: !Ref AutoScalingSlackWebhookURL
        CloudWatchSlackWebhookURL: !Ref CloudWatchSlackWebhookURL
        CodePipelineSlackWebhookURL: !Ref CodePipelineSlackWebhookURL
        TemplateBucket: !Join ["", ["Fn::ImportValue": !Sub "${BootstrapStackName}-${RootEnvironmentType}-TemplateBucket"]]
      TemplateURL: !Join ["", ["http://s3-", !Ref "AWS::Region", ".amazonaws.com/", "Fn::ImportValue": !Sub "${BootstrapStackName}-${RootEnvironmentType}-TemplateBucket", "/notifications.yml"]]
      TimeoutInMinutes: "2"
  VPCStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: !Join ["", ["http://s3-", !Ref "AWS::Region", ".amazonaws.com/", "Fn::ImportValue": !Sub "${BootstrapStackName}-${RootEnvironmentType}-TemplateBucket", "/vpc.yml"]]
      TimeoutInMinutes: "5"
  ECSClusterStack:
    Type: "AWS::CloudFormation::Stack"
    DependsOn: VPCStack
    Properties:
      Parameters:
        KeyPairName: !Ref ASGKeyPairName
        EnvironmentType: !Ref RootEnvironmentType
        VPC: !GetAtt VPCStack.Outputs.VPC
        VPCSubnet1: !GetAtt VPCStack.Outputs.Subnet1
        VPCSubnet2: !GetAtt VPCStack.Outputs.Subnet2
        VPCSubnet1AZ: !GetAtt VPCStack.Outputs.Subnet1AvailabilityZone
        VPCSubnet2AZ: !GetAtt VPCStack.Outputs.Subnet2AvailabilityZone
        OpsDebugMessagesSNSTopicArn: !GetAtt NotificationsStack.Outputs.OpsDebugMessagesSNSTopicArn
        OpsErrorMessagesSNSTopicArn: !GetAtt NotificationsStack.Outputs.OpsErrorMessagesSNSTopicArn
      TemplateURL: !Join ["", ["http://s3-", !Ref "AWS::Region", ".amazonaws.com/", "Fn::ImportValue": !Sub "${BootstrapStackName}-${RootEnvironmentType}-TemplateBucket", "/ecs.yml"]]
      TimeoutInMinutes: "5"
  AudiogramStack:
    Type: "AWS::CloudFormation::Stack"
    DependsOn: ECSClusterStack
    Properties:
      Parameters:
        VPC: !GetAtt VPCStack.Outputs.VPC
        VPCSubnet1: !GetAtt VPCStack.Outputs.Subnet1
        VPCSubnet2: !GetAtt VPCStack.Outputs.Subnet2
        RootStackName: !Ref AWS::StackName
        ECSCluster: !GetAtt ECSClusterStack.Outputs.ECSCluster
        ECSServiceAutoscaleIAMRoleArn: !GetAtt ECSClusterStack.Outputs.ECSServiceAutoscaleIAMRoleArn
        ECSServiceIAMRole: !GetAtt ECSClusterStack.Outputs.ECSServiceIAMRole
        EnvironmentTypeAbbreviation: !FindInMap [EnvironmentTypeAbbreviationMap, !Ref RootEnvironmentType, abbreviation]
        OpsDebugMessagesSNSTopicArn: !GetAtt NotificationsStack.Outputs.OpsDebugMessagesSNSTopicArn
      TemplateURL: !Join ["", ["http://s3-", !Ref "AWS::Region", ".amazonaws.com/", "Fn::ImportValue": !Sub "${BootstrapStackName}-${RootEnvironmentType}-TemplateBucket", "/audiogram/audiogram.yml"]]
      TimeoutInMinutes: "5"
