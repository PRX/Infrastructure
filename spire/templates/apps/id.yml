# stacks/apps/id.yml
# 100A
AWSTemplateFormatVersion: "2010-09-09"

Description: >-
  Creates an ECS service for ID, along with target group and listener rule for
  the shared ALB. Also creates a set of SES SMTP credentials for the service to
  use.

Parameters:
  kContainerName:
    Type: String
    Default: id-web
  kApplicationPort:
    Type: Number
    Default: 3000
  #######
  NestedChangeSetScrubbingResourcesState: { Type: String }
  AlbFullName: { Type: String }
  AlbHttpsListenerArn: { Type: String }
  EcsClusterArn: { Type: String }
  EnvironmentType: { Type: String }
  EnvironmentTypeAbbreviation: { Type: String }
  EnvironmentTypeLowercase: { Type: String }
  RegionMode: { Type: String }
  RootStackName: { Type: String }
  RootStackId: { Type: String }
  VpcId: { Type: AWS::EC2::VPC::Id }
  NewRelicApiKeyPrxLite: { Type: String }
  EcrImageTag: { Type: AWS::SSM::Parameter::Value<String> }
  AlbListenerRulePriorityPrefix: { Type: String }
  AmazonSesSmtpCredentialsGeneratorServiceToken: { Type: String }
  CloudWatchAlarmTaggerServiceToken: { Type: String }
  AuguryHostname: { Type: String }
  ExchangeHostname: { Type: String }
  FeederHostname: { Type: String }
  IdHostname: { Type: String }
  MetricsHostname: { Type: String }
  PublishHostname: { Type: String }
  MediajointS3BucketArn: { Type: AWS::SSM::Parameter::Value<String> }
  PorterJobExecutionSnsTopicArn: { Type: String }
  SharedAuroraMysqlEndpoint: { Type: String }
  SharedAuroraMysqlPort: { Type: String }
  TurnstileID: { Type: AWS::SSM::Parameter::Value<String> }

Conditions:
  IsProduction: !Equals [!Ref EnvironmentType, Production]
  HasAuroraEndpoint: !Not [!Equals [!Ref SharedAuroraMysqlEndpoint, ""]]
  IsPrimaryRegion: !Equals [!Ref RegionMode, Primary]
  EnableNestedChangeSetScrubbingResources: !Equals [!Ref NestedChangeSetScrubbingResourcesState, Enabled]

Resources:
  NestedChangeSetScrubber: { Type: AWS::SNS::Topic, Condition: EnableNestedChangeSetScrubbingResources }

  HostHeaderListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
      Conditions:
        - Field: host-header
          Values:
            - id.*
      ListenerArn: !Ref AlbHttpsListenerArn
      Priority: !Join ["", [!Ref AlbListenerRulePriorityPrefix, "01"]]

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 15
      HealthCheckPath: /healthcheck
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: "15"
      Tags:
        - { Key: Name, Value: !Sub "${RootStackName}_id" }
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: ID }
      TargetType: instance
      UnhealthyThresholdCount: 3
      VpcId: !Ref VpcId
  TargetGroupHttp5xxAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsProduction
    Properties:
      AlarmName: !Sub ERROR [ID] Web server <${EnvironmentTypeAbbreviation}> RETURNING 5XX ERRORS (${RootStackName})
      AlarmDescription: !Sub >-
        ${EnvironmentType} ID's Rails server is returning 5XX errors from the
        ECS service to the load balancer.
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: LoadBalancer
          Value: !Ref AlbFullName
        - Name: TargetGroup
          Value: !GetAtt TargetGroup.TargetGroupFullName
      EvaluationPeriods: 1
      MetricName: HTTPCode_Target_5XX_Count
      Namespace: AWS/ApplicationELB
      Period: 60
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching
  TargetGroupHttp5xxAlarmTags:
    Type: Custom::CloudWatchAlarmTags
    Condition: IsProduction
    Properties:
      ServiceToken: !Ref CloudWatchAlarmTaggerServiceToken
      AlarmArn: !GetAtt TargetGroupHttp5xxAlarm.Arn
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:ops:cloudwatch-log-group-name, Value: !Ref TaskLogGroup }
        - { Key: prx:dev:application, Value: ID }

  EcsService:
    Type: AWS::ECS::Service
    Condition: HasAuroraEndpoint # See README
    Properties:
      Cluster: !Ref EcsClusterArn
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: !If [IsPrimaryRegion, !If [IsProduction, 2, 1], 0]
      EnableECSManagedTags: true
      LoadBalancers:
        - ContainerName: !Ref kContainerName
          ContainerPort: !Ref kApplicationPort
          TargetGroupArn: !Ref TargetGroup
      PropagateTags: TASK_DEFINITION
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: ID }
      TaskDefinition: !Ref TaskDefinition

  TaskLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      RetentionInDays: 14
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: ID }
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        - PolicyDocument:
            Statement:
              - Action: ssm:GetParameters
                Effect: Allow
                Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/prx/${EnvironmentTypeAbbreviation}/Spire/ID/*
                Sid: AllowAppParameterRead
            Version: "2012-10-17"
          PolicyName: ContainerSecrets
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: ID }
  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      Policies:
        - PolicyDocument:
            Statement:
              - Action: sns:Publish
                Effect: Allow
                Resource: !Ref PorterJobExecutionSnsTopicArn
                Sid: AllowPorterJobExecution
            Version: "2012-10-17"
          PolicyName: Porter
        - PolicyDocument:
            Statement:
              - Action:
                  - s3:Get*
                  - s3:ListBucket
                  - s3:ListBucketVersions
                Effect: Allow
                Resource: !Ref MediajointS3BucketArn
                Sid: AllowBucketActions
              - Action:
                  - s3:Get*
                Effect: Allow
                Resource: !Sub ${MediajointS3BucketArn}/*
                Sid: AllowObjectActions
            Version: "2012-10-17"
          PolicyName: S3ReadAccess
        - PolicyDocument:
            Statement:
              - Action:
                  - s3:Get*
                  - s3:ListBucket
                  - s3:ListBucketMultipartUploads
                  - s3:ListBucketVersions
                Effect: Allow
                Resource: !GetAtt IdUploadsBucket.Arn
                Sid: AllowBucketActions
              - Action:
                  - s3:AbortMultipartUpload
                  - s3:Get*
                  - s3:ListMultipartUploadParts
                  - s3:PutObject
                  - s3:PutObjectAcl
                  - s3:PutObjectVersionAcl
                Effect: Allow
                Resource: !Sub ${IdUploadsBucket.Arn}/*
                Sid: AllowObjectActions
            Version: "2012-10-17"
          PolicyName: S3UploadAccess
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: ID }
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Cpu: !If [IsProduction, 200, 128]
          Environment:
            - Name: APP_NAME
              Value: id
            - Name: RAILS_ENV
              Value: !Ref EnvironmentTypeLowercase
            - Name: APP_ENV
              Value: !Ref EnvironmentTypeAbbreviation
            - Name: AWS_BUCKET
              Value: !Select [5, !Split [":", !Ref MediajointS3BucketArn]]
            - Name: AWS_DEFAULT_REGION
              Value: !Ref AWS::Region
            - Name: AWS_REGION
              Value: !Ref AWS::Region
            - Name: DB_PORT_3306_TCP_ADDR
              Value: !Ref SharedAuroraMysqlEndpoint
            - Name: DB_PORT_3306_TCP_PORT
              Value: !Ref SharedAuroraMysqlPort
            - Name: SMTP_ADDRESS
              Value: !Sub email-smtp.${AWS::Region}.amazonaws.com
            - Name: SMTP_AUTHENTICATION
              Value: login
            - Name: SMTP_PORT
              Value: "587"
            - Name: SMTP_DOMAIN
              Value: prx.org
            - Name: SMTP_USER_NAME
              Value: !GetAtt SesSendingSmtpCredentials.UserName
            - Name: SMTP_PASSWORD
              Value: !GetAtt SesSendingSmtpCredentials.Password
            - Name: NEW_RELIC_NAME
              Value: !If [IsProduction, id.prx.org, id.prx.org (Staging)]
            - Name: NEW_RELIC_KEY
              Value: !Ref NewRelicApiKeyPrxLite
            - Name: DATABASE_POOL_SIZE
              Value: "5"
            - Name: SIGN_UP_URL
              Value: !Sub https://${ExchangeHostname}/users/new
            - Name: DEVISE_MAILER_EMAIL
              Value: !If [IsProduction, do-not-reply@prx.org, do-not-reply-staging@prx.org]
            - Name: ACTION_MAILER_HOST
              Value: !Ref IdHostname
            - Name: ISSUER_IDENTIFIER
              Value: !Ref IdHostname
            - Name: SESSION_DOMAIN
              Value: !If [IsProduction, .prx.org, .prx.tech]
            - Name: PORTER_SNS_TOPIC_ARN
              Value: !Ref PorterJobExecutionSnsTopicArn
            - Name: UPLOADS_BUCKET
              Value: !Ref IdUploadsBucket
            - Name: TURNSTILE_SITE_KEY
              Value: !Ref TurnstileID
            - Name: MANDATORY_SSO_DOMAINS
              Value: "prx.org,wgbh.org"
            - Name: AUGURY_HOST
              Value: !Ref AuguryHostname
            - Name: EXCHANGE_HOST
              Value: !Ref ExchangeHostname
            - Name: FEEDER_HOST
              Value: !Ref FeederHostname
            - Name: METRICS_HOST
              Value: !Ref MetricsHostname
            - Name: PUBLISH_HOST
              Value: !Ref PublishHostname
          Essential: true
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${EcrImageTag}
          LinuxParameters:
            InitProcessEnabled: true
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref TaskLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          Memory: !If [IsProduction, 2000, 1000]
          MemoryReservation: !If [IsProduction, 1000, 500]
          Name: !Ref kContainerName
          PortMappings:
            - ContainerPort: !Ref kApplicationPort
              HostPort: 0
          Secrets:
            - Name: ALGORITHM
              ValueFrom: !Sub /prx/${EnvironmentTypeAbbreviation}/Spire/ID/algorithm
            - Name: CERT_STRING
              ValueFrom: !Sub /prx/${EnvironmentTypeAbbreviation}/Spire/ID/certificate
            - Name: CLIENT_ID
              ValueFrom: !Sub /prx/${EnvironmentTypeAbbreviation}/Spire/ID/client-id
            - Name: DB_ENV_MYSQL_DATABASE
              ValueFrom: !Sub /prx/${EnvironmentTypeAbbreviation}/Spire/ID/database-name
            - Name: DB_ENV_MYSQL_PASSWORD
              ValueFrom: !Sub /prx/${EnvironmentTypeAbbreviation}/Spire/ID/database-password
            - Name: DB_ENV_MYSQL_USER
              ValueFrom: !Sub /prx/${EnvironmentTypeAbbreviation}/Spire/ID/database-username
            - Name: PRIVATE_KEY_STRING
              ValueFrom: !Sub /prx/${EnvironmentTypeAbbreviation}/Spire/ID/private-key
            - Name: SECRET_KEY_BASE
              ValueFrom: !Sub /prx/${EnvironmentTypeAbbreviation}/Spire/ID/secret-key-base
            - Name: SECRET_TOKEN
              ValueFrom: !Sub /prx/${EnvironmentTypeAbbreviation}/Spire/ID/secret-token
            - Name: SESSION_KEY
              ValueFrom: !Sub /prx/${EnvironmentTypeAbbreviation}/Spire/ID/session-key
            - Name: GOOGLE_OAUTH2_APP_ID
              ValueFrom: !Sub /prx/${EnvironmentTypeAbbreviation}/Spire/ID/google-oauth-app-id
            - Name: GOOGLE_OAUTH2_APP_SECRET
              ValueFrom: !Sub /prx/${EnvironmentTypeAbbreviation}/Spire/ID/google-oauth-app-secret
            - Name: TURNSTILE_SECRET_KEY
              ValueFrom: !Sub /prx/${EnvironmentTypeAbbreviation}/Spire/ID/turnstile-secret
            - Name: LOCKBOX_MASTER_KEY
              ValueFrom: !Sub /prx/${EnvironmentTypeAbbreviation}/Spire/ID/lockbox-master-key
      ExecutionRoleArn: !GetAtt ExecutionRole.Arn
      NetworkMode: bridge
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: ID }
      TaskRoleArn: !GetAtt TaskRole.Arn

  SesSendingUser:
    Type: AWS::IAM::User
    Properties:
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: ID }
  SesSendingAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref SesSendingUser
  SesSendingPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: ses:SendRawEmail
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: SesSendingPolicy
      Users:
        - !Ref SesSendingUser
  SesSendingSmtpCredentials:
    Type: Custom::AmazonSesSmtpPasswordGenerator
    Properties:
      ServiceToken: !Ref AmazonSesSmtpCredentialsGeneratorServiceToken
      AccessKeyId: !Ref SesSendingAccessKey
      SecretAccessKey: !GetAtt SesSendingAccessKey.SecretAccessKey
      Region: !Ref AWS::Region

  IdUploadsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - POST
              - PUT
            AllowedOrigins:
              - "*"
            ExposedHeaders:
              - ETag
              - Content-Type
              - Content-Length
              - Date
            MaxAge: 3000
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 7
            Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: ID }

Outputs:
  TargetGroupFullName:
    Value: !GetAtt TargetGroup.TargetGroupFullName
