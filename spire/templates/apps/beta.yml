# stacks/apps/beta.yml
AWSTemplateFormatVersion: "2010-09-09"

Description: >-
  Creates a regional S3 bucket for beta.prx.org to be used as an origin for a
  multi-origin CloudFront distribution that is managed elsewhere.

Parameters:
  NestedChangeSetScrubbingResourcesState: { Type: String }
  S3StaticSiteDeployServiceToken: { Type: String }
  RootStackName: { Type: String }
  RootStackId: { Type: String }
  CodeS3Bucket: { Type: String }
  StaticSiteArchiveS3ObjectKey: { Type: AWS::SSM::Parameter::Value<String> }
  EnvironmentType: { Type: String }
  StaticSiteCloudFrontOai: { Type: AWS::SSM::Parameter::Value<String> }
  FeederHostname: { Type String }
  ExchangeHostname: { Type String }
  PlayHostname: { Type String }
  RedirectLambdaCodeS3ObjectKey: { Type: AWS::SSM::Parameter::Value<String> }

Conditions:
  EnableNestedChangeSetScrubbingResources: !Equals [!Ref NestedChangeSetScrubbingResourcesState, Enabled]

Resources:
  NestedChangeSetScrubber: { Type: AWS::SNS::Topic, Condition: EnableNestedChangeSetScrubbingResources }

  S3StaticDeployService:
    Type: Custom::S3StaticDeploy
    Properties:
      ServiceToken: !Ref S3StaticSiteDeployServiceToken
      Region: !Ref AWS::Region
      StaticSiteArchiveS3Bucket: !Ref CodeS3Bucket
      StaticSiteArchiveS3Object: !Ref StaticSiteArchiveS3ObjectKey
      StaticSiteS3DeployBucket: !Ref BetaBucket

  BetaBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Beta }
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref BetaBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Principal:
              AWS: !Ref StaticSiteCloudFrontOai
            Resource: !Sub arn:${AWS::Partition}:s3:::${BetaBucket}/*
            Sid: Grant read access to a CloudFront Origin Identity

  RedirectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri:
        Bucket: !Ref CodeS3Bucket
        Key: !Ref RedirectLambdaCodeS3ObjectKey
      Description: !Sub ${EnvironmentType} Beta redirect
      Environment:
        Variables:
          EXCHANGE_HOSTNAME: !Ref ExchangeHostname
          FEEDER_HOSTNAME: !Ref FeederHostname
          PLAY_HOSTNAME: !Ref PlayHostname
      FunctionUrlConfig:
        AuthType: NONE
      Handler: index.handler
      MemorySize: 128
      Runtime: nodejs20.x
      Tags:
        prx:meta:tagging-version: "2021-04-07"
        prx:cloudformation:stack-name: !Ref AWS::StackName
        prx:cloudformation:stack-id: !Ref AWS::StackId
        prx:cloudformation:root-stack-name: !Ref RootStackName
        prx:cloudformation:root-stack-id: !Ref RootStackId
        prx:ops:environment: !Ref EnvironmentType
        prx:dev:application: Beta
      Timeout: 8
  FtpServerAuthorizerFunctionElevatedErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsProduction
    Properties:
      AlarmName: !Sub WARN [Beta] Redirect function <${EnvironmentTypeAbbreviation}> INVOCATIONS ERRORS (${RootStackName})
      AlarmDescription: !Sub >-
        ${EnvironmentType} Beta redirect is failing, so some traffic to the old
        Beta domain may not be getting redirected to the correct place.
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref RedirectFunction
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Beta }
      Threshold: 0
      TreatMissingData: notBreaching
  RedirectFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      LogGroupName: !Sub /aws/lambda/${RedirectFunction}
      RetentionInDays: 14
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Beta }

Outputs:
  DeployBucketRegionalDomainName:
    Value: !GetAtt BetaBucket.RegionalDomainName
