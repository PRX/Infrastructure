# stacks/apps/radiotopia-tower.yml
# 100A
AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Description: >-
  Creates an API Gateway and Lambda function for the Radiotopia Radio API

Conditions:
  IsProduction: !Equals [!Ref EnvironmentType, Production]
  EnableNestedChangeSetScrubbingResources: !Equals [!Ref NestedChangeSetScrubbingResourcesState, Enabled]

Parameters:
  NestedChangeSetScrubbingResourcesState: { Type: String }
  EnvironmentType: { Type: String }
  EnvironmentTypeAbbreviation: { Type: String }
  RootStackName: { Type: String }
  RootStackId: { Type: String }
  CloudWatchAlarmTaggerServiceToken: { Type: String }
  CodeS3Bucket: { Type: String }
  CodeS3ObjectKey: { Type: AWS::SSM::Parameter::Value<String> }
  ParseXmlLayerS3ObjectKey: { Type: AWS::SSM::Parameter::Value<String> }

Resources:
  NestedChangeSetScrubber: { Type: AWS::SNS::Topic, Condition: EnableNestedChangeSetScrubbingResources }

  # API
  # https://tower.radiotopia.fm/api/v2/episodes.json
  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration:
        AllowHeaders:
          - Content-Type
          - X-Amz-Date
          - Authorization
          - X-Api-Key
          - X-Amz-Security-Token
        AllowMethods:
          - GET
          - OPTIONS
        AllowOrigins:
          - "*"
      Description: !Sub >-
        ${EnvironmentType} Radiotopia Tower API
      Tags:
        prx:meta:tagging-version: "2021-04-07"
        prx:cloudformation:stack-name: !Ref AWS::StackName
        prx:cloudformation:stack-id: !Ref AWS::StackId
        prx:cloudformation:root-stack-name: !Ref RootStackName
        prx:cloudformation:root-stack-id: !Ref RootStackId
        prx:ops:environment: !Ref EnvironmentType
        prx:dev:family: Radiotopia
        prx:dev:application: Tower

  RgroveParseXmlLayer:
    Type: AWS::Lambda::LayerVersion
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      CompatibleRuntimes:
        - nodejs18.x
      Content:
        S3Bucket: !Ref CodeS3Bucket
        S3Key: !Ref ParseXmlLayerS3ObjectKey
      LicenseInfo: ISC

  TowerEndpointFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri:
        Bucket: !Ref CodeS3Bucket
        Key: !Ref CodeS3ObjectKey
      Description: Radiotopia Radio API v2
      Events:
        ApiRequest:
          Properties:
            ApiId: !Ref HttpApi
            Method: get
            Path: /api/v2/episodes.json
          Type: HttpApi
      Handler: index.handler
      Layers:
        - !Ref RgroveParseXmlLayer
      MemorySize: 512
      Runtime: nodejs18.x
      Tags:
        prx:meta:tagging-version: "2021-04-07"
        prx:cloudformation:stack-name: !Ref AWS::StackName
        prx:cloudformation:stack-id: !Ref AWS::StackId
        prx:cloudformation:root-stack-name: !Ref RootStackName
        prx:cloudformation:root-stack-id: !Ref RootStackId
        prx:ops:environment: !Ref EnvironmentType
        prx:dev:family: Radiotopia
        prx:dev:application: Tower
      Timeout: 16

  TowerEndpointFunctionErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsProduction
    Properties:
      AlarmName: !Sub WARN [Radiotopia-Tower] API Handler <${EnvironmentTypeAbbreviation}> ELEVATED FUNCTION ERRORS (${RootStackName})
      AlarmDescription: !Sub >-
        ${EnvironmentType} Radiotopia Tower endpoint Lambda function is
        experiencing function errors, thrown by the code or runtime. The
        invocations likely origintated from API Gateway and will not be
        retried.
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref TowerEndpointFunction
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 2
      TreatMissingData: notBreaching
  TowerEndpointFunctionErrorAlarmTags:
    Type: Custom::CloudWatchAlarmTags
    Condition: IsProduction
    Properties:
      ServiceToken: !Ref CloudWatchAlarmTaggerServiceToken
      AlarmArn: !GetAtt TowerEndpointFunctionErrorAlarm.Arn
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:family, Value: Radiotopia }
        - { Key: prx:dev:application, Value: Tower }
  TowerEndpointFunctionThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsProduction
    Properties:
      AlarmName: !Sub INFO [Radiotopia-Tower] API Handler <${EnvironmentTypeAbbreviation}> INVOCATIONS BEING THROTTLED (${RootStackName})
      AlarmDescription: !Sub >-
        ${EnvironmentType} Radiotopia Tower endpoint Lambda function has
        reached maximum concurrency and requests are failing. This is a 429
        status code for the Lambda invocation, but results in a 5XX error for
        the API Gateway.
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref TowerEndpointFunction
      EvaluationPeriods: 1
      MetricName: Throttles
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching
  TowerEndpointFunctionThrottleAlarmTags:
    Type: Custom::CloudWatchAlarmTags
    Condition: IsProduction
    Properties:
      ServiceToken: !Ref CloudWatchAlarmTaggerServiceToken
      AlarmArn: !GetAtt TowerEndpointFunctionThrottleAlarm.Arn
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:family, Value: Radiotopia }
        - { Key: prx:dev:application, Value: Tower }

  TowerEndpointFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      LogGroupName: !Sub /aws/lambda/${TowerEndpointFunction}
      RetentionInDays: 14
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:family, Value: Radiotopia }
        - { Key: prx:dev:application, Value: Tower }
