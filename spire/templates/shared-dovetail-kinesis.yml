# stacks/shared-dovetail-kinesis.yml
AWSTemplateFormatVersion: "2010-09-09"

Description: >-
  Creates kinesis streams used across multiple dovetail apps to enable processing
  download and impression metrics.

Parameters:
  EnvironmentType: { Type: String }
  RootStackName: { Type: String }
  RootStackId: { Type: String }
  AwsOrganizationId: { Type: String }
  NestedChangeSetScrubbingResourcesState: { Type: String }

Conditions:
  IsProduction: !Equals [!Ref EnvironmentType, Production]
  EnableNestedChangeSetScrubbingResources: !Equals [!Ref NestedChangeSetScrubbingResourcesState, Enabled]

Resources:
  NestedChangeSetScrubber: { Type: AWS::SNS::Topic, Condition: EnableNestedChangeSetScrubbingResources }

  # realtime cloudfront logs, including bytes-downloaded by listeners
  #
  # dovetail-cdn realtime logs --> dovetail-counts
  DovetailCdnLogsKinesisStream:
    Type: AWS::Kinesis::Stream
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      RetentionPeriodHours: !If [IsProduction, 48, 24]
      StreamModeDetails:
        StreamMode: ON_DEMAND
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:family, Value: Dovetail }
        - { Key: prx:dev:application, Value: Counts }
  DovetailCdnLogsKinesisStreamOrgWriterRole:
    # This role exists so that it can be assumed by roles in other accounts, so
    # that they can write to the Kinesis stream above
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        # TODO This should probably be limited in some way, at least so stag
        # and prod can't cross contaminate
        Statement:
          - Action: sts:AssumeRole
            Condition:
              StringEquals:
                aws:PrincipalOrgID: !Ref AwsOrganizationId
            Effect: Allow
            Principal:
              AWS: "*"
        Version: "2012-10-17"
      Policies:
        - PolicyDocument:
            Statement:
              - Action: kinesis:PutRecords
                Effect: Allow
                Resource: !GetAtt DovetailCdnLogsKinesisStream.Arn
                Sid: AllowRecordsWrite
            Version: "2012-10-17"
          PolicyName: OrgStreamWriterPolicy
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:family, Value: Dovetail }
        - { Key: prx:dev:application, Value: Counts }

  # IAB2 counted segment-numbers
  # but ALSO dovetail-router redirect data TODO: move this
  #
  # dovetail-counts --> analytics-dynamodb
  # dovetail-router --> analytics-dynamodb
  DovetailCountedKinesisStream:
    Type: AWS::Kinesis::Stream
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      RetentionPeriodHours: !If [IsProduction, 48, 24]
      StreamModeDetails:
        StreamMode: ON_DEMAND
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:family, Value: Dovetail }
        - { Key: prx:dev:application, Value: Analytics }

  # IAB2 verified episode downloads and ad-impressions
  #
  # analytics-dynamodb --> analytics-bigquery
  # analytics-dynamodb --> analytics-pingbacks
  # analytics-dynamodb --> analytics-redis
  DovetailVerifiedMetricsKinesisStream:
    Type: AWS::Kinesis::Stream
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      RetentionPeriodHours: !If [IsProduction, 48, 24]
      StreamModeDetails:
        StreamMode: ON_DEMAND
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:family, Value: Dovetail }
        - { Key: prx:dev:application, Value: Analytics }

Outputs:
  DovetailCdnLogsKinesisStreamName:
    Value: !Ref DovetailCdnLogsKinesisStream
  DovetailCdnLogsKinesisStreamArn:
    Value: !GetAtt DovetailCdnLogsKinesisStream.Arn

  DovetailCdnLogsKinesisStreamOrgWriterRoleArn:
    Value: !GetAtt DovetailCdnLogsKinesisStreamOrgWriterRole.Arn

  DovetailCountedKinesisStreamName:
    Value: !Ref DovetailCountedKinesisStream
  DovetailCountedKinesisStreamArn:
    Value: !GetAtt DovetailCountedKinesisStream.Arn

  DovetailVerifiedMetricsKinesisStreamName:
    Value: !Ref DovetailVerifiedMetricsKinesisStream
  DovetailVerifiedMetricsKinesisStreamArn:
    Value: !GetAtt DovetailVerifiedMetricsKinesisStream.Arn
