# stacks/dashboards.yml
AWSTemplateFormatVersion: "2010-09-09"

Description: >-
  Creates CloudWatch dashboards for resources in the stack

Parameters:
  EnvironmentType: { Type: String }

  RootStackName: { Type: String }
  RootStackId: { Type: String }

  NestedChangeSetScrubbingResourcesState: { Type: String }

  InfrastructureGitCommit: { Type: String }

  SharedEcsClusterName: { Type: String }

  SharedVpcId: { Type: AWS::EC2::VPC::Id }
  SharedVpcCidrBlock: { Type: String }

  SharedEcsAsgName: { Type: String }

  SharedAlbName: { Type: String }
  SharedAlbFullName: { Type: String }

  SharedVpcFlowLogsLogGroupName: { Type: String }

  SharedMemcachedCacheName: { Type: String }
  SharedAppRedisCacheName: { Type: String }
  DovetailRedisReplicationGroupName: { Type: String }

  StackResourceGroupName: { Type: String }
  StackLogGroupsGroupName: { Type: String }

  AuguryTargetGroupFullName: { Type: String }
  WfmtTargetGroupFullName: { Type: String }

  BetaDeployBucketRegionalDomainName: { Type: String }

  CastlePostgresInstanceId: { Type: String }
  CastleTargetGroupFullName: { Type: String }

  CmsElasticsearchDomainName: { Type: String }
  CmsTargetGroupFullName: { Type: String }

  DovetailAppleApiBridgeFunctionId: { Type: String }

  DovetailAlbName: { Type: String }
  DovetailAlbFullName: { Type: String }
  DovetailTargetGroupFullName: { Type: String }

  ExchangeWebTargetGroupFullName: { Type: String }
  ExchangeFtpServerId: { Type: String }
  ExchangeFtpServerPublicIp: { Type: String }
  ExchangeFtpServerPublicIpAllocationId: { Type: String }
  ExchangeFtpServerNlbName: { Type: String }

  FeederAuthProxyApiId: { Type: String }
  FeederWebTargetGroupFullName: { Type: String }

  IdTargetGroupFullName: { Type: String }

  IframelyTargetGroupFullName: { Type: String }

  MetricsTargetGroupFullName: { Type: String }

  NetworksPublicWebTargetGroupFullName: { Type: String }

  PlayWebTargetGroupFullName: { Type: String }

  ProxyApiDefaultEndpoint: { Type: String }
  ProxyApiId: { Type: String }

  PublishTargetGroupFullName: { Type: String }

  RemixTargetGroupFullName: { Type: String }

  S3SigningApiId: { Type: String }

  TheCastleTargetGroupFullName: { Type: String }

  TheCountApiId: { Type: String }

  TheWorldSearchApiId: { Type: String }
  TheWorldSearchApiEndpoint: { Type: String }

Conditions:
  EnableNestedChangeSetScrubbingResources: !Equals [!Ref NestedChangeSetScrubbingResourcesState, Enabled]

Resources:
  NestedChangeSetScrubber: { Type: AWS::SNS::Topic, Condition: EnableNestedChangeSetScrubbingResources }

  StackOverviewDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardBody: !Sub |-
        {
            "widgets": [
                {
                    "height": 10,
                    "width": 6,
                    "y": 0,
                    "x": 0,
                    "type": "text",
                    "properties": {
                        "markdown": "\n# AWS Console\n\n- [CloudFormation root stack](https://console.aws.amazon.com/cloudformation/home?region=${AWS::Region}#/stacks/stackinfo?stackId=${RootStackId})\n- [Stack resource group](https://console.aws.amazon.com/resource-groups/group/${StackResourceGroupName}?region=${AWS::Region}) | [Logs](https://console.aws.amazon.com/resource-groups/group/${StackLogGroupsGroupName}?region=${AWS::Region})\n- [ECS Cluster](https://${AWS::Region}.console.aws.amazon.com/ecs/v2/clusters/${SharedEcsClusterName}/services?region=${AWS::Region})\n- [Shared VPC](https://console.aws.amazon.com/vpc/home?region=${AWS::Region}#VpcDetails:VpcId=${SharedVpcId}) | [Subnets](https://console.aws.amazon.com/vpc/home?region=${AWS::Region}#subnets:search=${SharedVpcId};sort=tag:Name) | [NACLs](https://console.aws.amazon.com/vpc/home?region=${AWS::Region}#acls:search=${SharedVpcId};sort=tag:Name) | [Peering](https://console.aws.amazon.com/vpc/home?region=${AWS::Region}#PeeringConnections:search=${SharedVpcId})\n- [ENIs](https://console.aws.amazon.com/ec2/v2/home?region=${AWS::Region}#NIC:vpcId=${SharedVpcId})\n- [Security groups](https://console.aws.amazon.com/vpc/home?region=${AWS::Region}#securityGroups:vpc-id=${SharedVpcId};sort=tag:Name)\n- [Shared VPC Flow Logs Insights](https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#logsV2:logs-insights$3FqueryDetail$3D$257E$2528end$257E0$257Estart$257E-1800$257EtimeType$257E$2527RELATIVE$257Eunit$257E$2527seconds$257EeditorString$257E$2527fields*20*40timestamp*2c*20action*2c*20interfaceId*2c*20srcAddr*2c*20srcPort*2c*20dstAddr*2c*20dstPort*0a*7c*20sort*20*40timestamp*20desc*0a*7c*20limit*20500$257EisLiveTail$257Efalse$257EqueryId$257E$252738782a19-012d-4a8b-bda2-202bec5ce7e1$257Esource$257E$2528$257E$2527${SharedVpcFlowLogsLogGroupName}$2529$2529)\n- [EC2 Instances](https://console.aws.amazon.com/ec2/v2/home?region=${AWS::Region}#Instances:instanceState=running;search=${SharedVpcId};sort=launchTime) | [Shared ASG](https://console.aws.amazon.com/ec2autoscaling/home?region=${AWS::Region}#/details/${SharedEcsAsgName}?view=details) | [Shared ALB](https://console.aws.amazon.com/ec2/v2/home?region=${AWS::Region}#LoadBalancers:search=${SharedAlbName};sort=loadBalancerName)\n- [Dovetail ALB](https://console.aws.amazon.com/ec2/v2/home?region=${AWS::Region}#LoadBalancers:search=${DovetailAlbName};sort=loadBalancerName) | [Exchange FTP NLB](https://console.aws.amazon.com/ec2/v2/home?region=${AWS::Region}#LoadBalancers:search=${ExchangeFtpServerNlbName};sort=loadBalancerName) \n- [Shared Memcached](https://${AWS::Region}.console.aws.amazon.com/elasticache/home?region=${AWS::Region}#/memcached/${SharedMemcachedCacheName}) | [App Cache Redis](https://${AWS::Region}.console.aws.amazon.com/elasticache/home?region=${AWS::Region}#/redis/${SharedAppRedisCacheName})\n- [Dovetail Redis](https://${AWS::Region}.console.aws.amazon.com/elasticache/home?region=${AWS::Region}#/redis/${DovetailRedisReplicationGroupName})\n- [CMS Elasticsearch Service](https://${AWS::Region}.console.aws.amazon.com/aos/home?region=${AWS::Region}#opensearch/domains/${CmsElasticsearchDomainName})\n- [Castle PostgreSQL](https://console.aws.amazon.com/rds/home?region=${AWS::Region}#database:id=${CastlePostgresInstanceId};is-cluster=false)\n"
                    }
                },
                {
                    "type": "text",
                    "x": 6,
                    "y": 0,
                    "width": 18,
                    "height": 9,
                    "properties": {
                        "markdown": "\n# Details\n\n- Environment: **${EnvironmentType}**\n- Root stack: **[${RootStackName}](https://console.aws.amazon.com/cloudformation/home?region=${AWS::Region}#/stacks/stackinfo?stackId=${RootStackId})**\n- Infrastructure repository Git commit: **[${InfrastructureGitCommit}](https://github.com/PRX/Infrastructure/commit/${InfrastructureGitCommit})**\n- Shared VPC ID: **[${SharedVpcId}](https://console.aws.amazon.com/vpc/home?region=${AWS::Region}#VpcDetails:VpcId=${SharedVpcId})**\n- Shared VPC CIDR block: **${SharedVpcCidrBlock}**\n- Shared ALB: **[${SharedAlbName}](https://console.aws.amazon.com/ec2/v2/home?region=${AWS::Region}#LoadBalancers:search=${SharedAlbName};sort=loadBalancerName)**\n- Dovetail ALB: **[${DovetailAlbName}](https://console.aws.amazon.com/ec2/v2/home?region=${AWS::Region}#LoadBalancers:search=${DovetailAlbName};sort=loadBalancerName)**\n- Exchange FTP NLB: **[${ExchangeFtpServerNlbName}](https://console.aws.amazon.com/ec2/v2/home?region=${AWS::Region}#LoadBalancers:search=${ExchangeFtpServerNlbName};sort=loadBalancerName)**\n- Exchange FTP public IP: **[${ExchangeFtpServerPublicIp}](https://console.aws.amazon.com/ec2/v2/home?region=${AWS::Region}#ElasticIpDetails:AllocationId=${ExchangeFtpServerPublicIpAllocationId})**\n---\n- Beta bucket: **${BetaDeployBucketRegionalDomainName}**\n---\n- Proxy API: **[${ProxyApiDefaultEndpoint}](${ProxyApiDefaultEndpoint})**\n- The World Search API: **[${TheWorldSearchApiEndpoint}](${TheWorldSearchApiEndpoint})**"
                    }
                },
                {
                    "type": "metric",
                    "x": 6,
                    "y": 9,
                    "width": 6,
                    "height": 3,
                    "properties": {
                        "metrics": [
                            [ "AWS/AutoScaling", "GroupDesiredCapacity", "AutoScalingGroupName", "${SharedEcsAsgName}", { "label": "Desired Capacity" } ],
                            [ "AWS/AutoScaling", "GroupInServiceInstances", "AutoScalingGroupName", "${SharedEcsAsgName}", { "label": "In Service Instances" } ]
                        ],
                        "view": "timeSeries",
                        "stacked": false,
                        "region": "${AWS::Region}",
                        "stat": "Average",
                        "period": 300,
                        "title": "Shared ASG"
                    }
                },
                {
                    "type": "metric",
                    "x": 6,
                    "y": 12,
                    "width": 6,
                    "height": 3,
                    "properties": {
                        "metrics": [
                            [ "AWS/Transfer", "FilesOut", "ServerId", "${ExchangeFtpServerId}", { "label": "Files" } ],
                            [ "AWS/Transfer", "BytesOut", "ServerId", "${ExchangeFtpServerId}", { "yAxis": "right", "label": "Bytes" } ]
                        ],
                        "view": "timeSeries",
                        "stacked": false,
                        "region": "${AWS::Region}",
                        "stat": "Sum",
                        "period": 900,
                        "title": "Exchange FTP"
                    }
                },
                {
                  "type": "metric",
                  "x": 12,
                  "y": 9,
                  "width": 12,
                  "height": 9,
                  "properties": {
                      "metrics": [
                          [ "AWS/ApplicationELB", "RequestCount", "TargetGroup", "${AuguryTargetGroupFullName}", "LoadBalancer", "${SharedAlbFullName}", { "label": "Augury" } ],
                          [ "AWS/ApplicationELB", "RequestCount", "TargetGroup", "${CastleTargetGroupFullName}", "LoadBalancer", "${SharedAlbFullName}", { "label": "Castle" } ],
                          [ "AWS/ApplicationELB", "RequestCount", "TargetGroup", "${CmsTargetGroupFullName}", "LoadBalancer", "${SharedAlbFullName}", { "label": "CMS" } ],
                          [ "AWS/ApplicationELB", "RequestCount", "TargetGroup", "${DovetailTargetGroupFullName}", "LoadBalancer", "${DovetailAlbFullName}", { "label": "Dovetail-Router" } ],
                          [ "AWS/Lambda", "UrlRequestCount", "FunctionName", "${DovetailAppleApiBridgeFunctionId}", { "label": "Dovetail-Apple API Bridge" } ],
                          [ "AWS/ApplicationELB", "RequestCount", "TargetGroup", "${ExchangeWebTargetGroupFullName}", "LoadBalancer", "${SharedAlbFullName}", { "label": "Exchange" } ],
                          [ "AWS/ApplicationELB", "RequestCount", "TargetGroup", "${FeederWebTargetGroupFullName}", "LoadBalancer", "${SharedAlbFullName}", { "label": "Feeder" } ],
                          [ "AWS/ApiGateway", "Count", "ApiId", "${FeederAuthProxyApiId}", { "label": "Feeder Auth Proxy" } ],
                          [ "AWS/ApplicationELB", "RequestCount", "TargetGroup", "${IdTargetGroupFullName}", "LoadBalancer", "${SharedAlbFullName}", { "label": "ID" } ],
                          [ "AWS/ApplicationELB", "RequestCount", "TargetGroup", "${IframelyTargetGroupFullName}", "LoadBalancer", "${SharedAlbFullName}", { "label": "Iframely" } ],
                          [ "AWS/ApplicationELB", "RequestCount", "TargetGroup", "${MetricsTargetGroupFullName}", "LoadBalancer", "${SharedAlbFullName}", { "label": "Metrics" } ],
                          [ "AWS/ApplicationELB", "RequestCount", "TargetGroup", "${NetworksPublicWebTargetGroupFullName}", "LoadBalancer", "${SharedAlbFullName}", { "label": "Networks" } ],
                          [ "AWS/ApplicationELB", "RequestCount", "TargetGroup", "${PlayWebTargetGroupFullName}", "LoadBalancer", "${SharedAlbFullName}", { "label": "Play::Web" } ],
                          [ "AWS/ApiGateway", "Count", "ApiId", "${ProxyApiId}", { "label": "Proxy" } ],
                          [ "AWS/ApplicationELB", "RequestCount", "TargetGroup", "${PublishTargetGroupFullName}", "LoadBalancer", "${SharedAlbFullName}", { "label": "Publish" } ],
                          [ "AWS/ApplicationELB", "RequestCount", "TargetGroup", "${RemixTargetGroupFullName}", "LoadBalancer", "${SharedAlbFullName}", { "label": "Remix" } ],
                          [ "AWS/ApiGateway", "Count", "ApiId", "${S3SigningApiId}", { "label": "S3 Signing" } ],
                          [ "AWS/ApplicationELB", "RequestCount", "TargetGroup", "${TheCastleTargetGroupFullName}", "LoadBalancer", "${SharedAlbFullName}", { "label": "The Castle" } ],
                          [ "AWS/ApiGateway", "Count", "ApiId", "${TheCountApiId}", { "label": "The Count" } ],
                          [ "AWS/ApiGateway", "Count", "ApiId", "${TheWorldSearchApiId}", { "label": "The World Search" } ],
                          [ "AWS/ApplicationELB", "RequestCount", "TargetGroup", "${WfmtTargetGroupFullName}", "LoadBalancer", "${SharedAlbFullName}", { "label": "WFMT" } ]
                      ],
                      "view": "timeSeries",
                      "stacked": false,
                      "region": "${AWS::Region}",
                      "period": 300,
                      "title": "Requests",
                      "stat": "Sum"
                  }
              }
            ]
        }
      DashboardName: !Sub ${RootStackName}-${AWS::Region}-Overview
