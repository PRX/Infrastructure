# cdn/dovetail-cdn/dovetail-stitch-lambda-filters.yml
#
# NOTE: since this stack has to create the cloudwatch log group, it must be
# deployed _before_ the L@E origin-request function is added to the
# dovetail-cdn.yml stack. Otherwise it will fail to create/own the log groups.
AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Cloudwatch log metric-filters for the dovetail-stitch-lambda edge logs, to
  capture per-region events. This should be manually deployed as a StackSet in
  every region of the CloudFront distribution.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Stack Dependencies
        Parameters:
          - InfrastructureNotificationsStackName
      - Label:
          default: Lambda Parameters
        Parameters:
          - LambdaName
          - LambdaRegion
          - EnvironmentType
          - EnvironmentTypeAbbreviation
    ParameterLabels:
      InfrastructureNotificationsStackName:
        default: Notifications stack name
      LambdaName:
        default: Lambda Function Name
      LambdaRegion:
        default: Lambda Function Region
      EnvironmentTypeAbbreviation:
        default: Lowercase Short Environment Name
      EnvironmentType:
        default: Environment Name
Conditions:
  CreateLambdaAlarms: !Equals [!Ref LambdaRegion, !Ref "AWS::Region"]
  IsProduction: !Equals [!Ref EnvironmentType, Production]
  IsProductionAlarms: !And
    - !Equals [!Ref LambdaRegion, !Ref "AWS::Region"]
    - !Equals [!Ref EnvironmentType, Production]
Parameters:
  InfrastructureNotificationsStackName:
    Default: infrastructure-notifications
    Description: >
      The name of a previously launched notifications stack in the same region
      as the original non-edge lambda function.
    Type: String
  LambdaName:
    Type: String
    Description: eg. some-function-name
  LambdaRegion:
    Type: String
    Description: eg. us-east-1
  EnvironmentTypeAbbreviation:
    Type: String
    Description: eg. stag, prod
  EnvironmentType:
    Type: String
    Description: eg. Staging, Production
Resources:
  LambdaLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: !Sub "/aws/lambda/${LambdaRegion}.${LambdaName}"
      RetentionInDays: 14
  LambdaCacheHitMetric:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: '{ $.msg = "cache HIT" }'
      LogGroupName: !Ref LambdaLogGroup
      MetricTransformations:
        - MetricName: !Sub "dt_lambda_${EnvironmentTypeAbbreviation}_hit"
          MetricNamespace: LogMetrics
          MetricValue: $.timer
  LambdaCacheMissMetric:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: '{ $.msg = "cache MISS" }'
      LogGroupName: !Ref LambdaLogGroup
      MetricTransformations:
        - MetricName: !Sub "dt_lambda_${EnvironmentTypeAbbreviation}_miss"
          MetricNamespace: LogMetrics
          MetricValue: $.timer
  LambdaCachePartialMetric:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: '{ $.msg = "cache PARTIAL" }'
      LogGroupName: !Ref LambdaLogGroup
      MetricTransformations:
        - MetricName: !Sub "dt_lambda_${EnvironmentTypeAbbreviation}_partial"
          MetricNamespace: LogMetrics
          MetricValue: $.timer
  LambdaRedirectMetric:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: "{ $.location = * }"
      LogGroupName: !Ref LambdaLogGroup
      MetricTransformations:
        - MetricName: !Sub "dt_lambda_${EnvironmentTypeAbbreviation}_redirect"
          MetricNamespace: LogMetrics
          MetricValue: "1"
  LambdaInvokeMetric:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: '{ $.msg = "invoke" }'
      LogGroupName: !Ref LambdaLogGroup
      MetricTransformations:
        - MetricName: !Sub "dt_lambda_${EnvironmentTypeAbbreviation}_invoke"
          MetricNamespace: LogMetrics
          MetricValue: $.timer
  LambdaTimeoutMetric:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: '"Task timed out after"'
      LogGroupName: !Ref LambdaLogGroup
      MetricTransformations:
        - MetricName: !Sub "dt_lambda_${EnvironmentTypeAbbreviation}_timeout"
          MetricNamespace: LogMetrics
          MetricValue: "1"
  LambdaWarnMetric:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: '{ $._logLevel = "warn" }'
      LogGroupName: !Ref LambdaLogGroup
      MetricTransformations:
        - MetricName: !Sub "dt_lambda_${EnvironmentTypeAbbreviation}_warn"
          MetricNamespace: LogMetrics
          MetricValue: "1"
  LambdaErrorMetric:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: '{ $._logLevel = "error" }'
      LogGroupName: !Ref LambdaLogGroup
      MetricTransformations:
        - MetricName: !Sub "dt_lambda_${EnvironmentTypeAbbreviation}_error"
          MetricNamespace: LogMetrics
          MetricValue: "1"
  LambdaErrorAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CreateLambdaAlarms
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[DovetailStitchLambda][Errors] ${EnvironmentType} > 1"
      AlarmActions:
        - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsWarnMessagesSnsTopicArn"
      InsufficientDataActions:
        - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsWarnMessagesSnsTopicArn"
      OKActions:
        - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsWarnMessagesSnsTopicArn"
      AlarmDescription: Errors on the dovetail stitch lambda exceeded 1
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 2
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 1
      TreatMissingData: notBreaching
      Dimensions:
        - Name: FunctionName
          Value: !Sub "${LambdaRegion}.${LambdaName}"
  LambdaManyErrorsAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: IsProductionAlarms
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[DovetailStitchLambda][ManyErrors] ${EnvironmentType}"
      AlarmActions:
        - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsErrorMessagesSnsTopicArn"
      InsufficientDataActions:
        - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsErrorMessagesSnsTopicArn"
      OKActions:
        - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsErrorMessagesSnsTopicArn"
      AlarmDescription: Way too many errors on the dovetail stitch lambda
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 2
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 5
      TreatMissingData: notBreaching
      Dimensions:
        - Name: FunctionName
          Value: !Sub "${LambdaRegion}.${LambdaName}"
  LambdaThrottleAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CreateLambdaAlarms
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[DovetailStitchLambda][Throttles] ${EnvironmentType} > 0"
      AlarmActions:
        - Fn::If:
            - IsProduction
            - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsErrorMessagesSnsTopicArn"
            - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsWarnMessagesSnsTopicArn"
      InsufficientDataActions:
        - Fn::If:
            - IsProduction
            - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsErrorMessagesSnsTopicArn"
            - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsWarnMessagesSnsTopicArn"
      OKActions:
        - Fn::If:
            - IsProduction
            - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsErrorMessagesSnsTopicArn"
            - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsWarnMessagesSnsTopicArn"
      AlarmDescription: Throttles on the dovetail stitch lambda exceeded 0
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      MetricName: Throttles
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching
      Dimensions:
        - Name: FunctionName
          Value: !Sub "${LambdaRegion}.${LambdaName}"
  LambdaLogErrorAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CreateLambdaAlarms
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[DovetailStitchLambda][LogErrors] ${EnvironmentType} > 0"
      AlarmActions:
        - Fn::If:
            - IsProduction
            - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsErrorMessagesSnsTopicArn"
            - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsWarnMessagesSnsTopicArn"
      InsufficientDataActions:
        - Fn::If:
            - IsProduction
            - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsErrorMessagesSnsTopicArn"
            - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsWarnMessagesSnsTopicArn"
      OKActions:
        - Fn::If:
            - IsProduction
            - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsErrorMessagesSnsTopicArn"
            - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsWarnMessagesSnsTopicArn"
      AlarmDescription: Logged errors on dovetail stitch lambda exceeded 0
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 2
      MetricName: !Sub "dt_lambda_${EnvironmentTypeAbbreviation}_error"
      Namespace: LogMetrics
      Period: 60
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching
  LambdaTimeoutAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CreateLambdaAlarms
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[DovetailStitchLambda][Timeouts] ${EnvironmentType} > 1"
      AlarmActions:
        - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsWarnMessagesSnsTopicArn"
      InsufficientDataActions:
        - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsWarnMessagesSnsTopicArn"
      OKActions:
        - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsWarnMessagesSnsTopicArn"
      AlarmDescription: Timeouts on dovetail stitch lambda exceeded 1
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 2
      MetricName: !Sub "dt_lambda_${EnvironmentTypeAbbreviation}_timeout"
      Namespace: LogMetrics
      Period: 60
      Statistic: Sum
      Threshold: 1
      TreatMissingData: notBreaching
  LambdaManyTimeoutsAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: IsProductionAlarms
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[DovetailStitchLambda][ManyTimeouts] ${EnvironmentType}"
      AlarmActions:
        - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsErrorMessagesSnsTopicArn"
      InsufficientDataActions:
        - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsErrorMessagesSnsTopicArn"
      OKActions:
        - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsErrorMessagesSnsTopicArn"
      AlarmDescription: Way too many timeouts on the dovetail stitch lambda
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 2
      MetricName: !Sub "dt_lambda_${EnvironmentTypeAbbreviation}_timeout"
      Namespace: LogMetrics
      Period: 60
      Statistic: Sum
      Threshold: 5
      TreatMissingData: notBreaching
Outputs:
  LambdaLogGroupName:
    Value: !Ref LambdaLogGroup
