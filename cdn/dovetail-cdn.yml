# cdn/dovetail-cdn.yml
AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Creates a CloudFront distribution to origin-pull from a Dovetail S3 bucket,
  with an origin-request Lambda to do the actual file stitching.
Conditions:
  IsProduction: !Equals [!Ref DistributionDomain, "dovetail-cdn.prxu.org"]
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Stack Dependencies
        Parameters:
          - InfrastructureNotificationsStackName
      - Label:
          default: Distribution Parameters
        Parameters:
          - OriginBucket
          - OriginPath
          - DistributionDomain
          - LambdaFunctionArn
          - LambdaBytesFunctionArn
    ParameterLabels:
      OriginBucket:
        default: Origin S3 Bucket
      OriginPath:
        default: Origin S3 Path
      DistributionDomain:
        default: Domain Name
      LambdaFunctionArn:
        default: Stitch Function Arn
      LambdaBytesFunctionArn:
        default: Bytes Logging Function Arn
      InfrastructureNotificationsStackName:
        default: Notifications stack name
Parameters:
  OriginBucket:
    Type: String
    Description: eg. prx-dovetail.s3.amazonaws.com
  OriginPath:
    Type: String
    Description: eg. /stitch-production, /stitch-staging
  DistributionDomain:
    Type: String
    Description: eg. dovetail-cdn.prxu.org
  LambdaFunctionArn:
    Type: String
    Description: eg. arn:aws:lambda:<region>:<account>:function:<name>:<version>
  LambdaBytesFunctionArn:
    Type: String
    Description: eg. arn:aws:lambda:<region>:<account>:function:<name>:<version>
  InfrastructureNotificationsStackName:
    Default: infrastructure-notifications
    Description: The name of a previously launched notifications stack
    Type: String
  EnvironmentType:
    Type: String
    AllowedValues:
      - Staging
      - Production
Resources:
  Certificate:
    Type: "AWS::CertificateManager::Certificate"
    Properties:
      DomainName: !Ref DistributionDomain
      Tags:
        - { Key: Name, Value: !Sub "${AWS::StackName}" }
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:family, Value: Dovetail }
        - { Key: prx:dev:application, Value: CDN }
      ValidationMethod: DNS
  CloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref DistributionDomain
        CustomErrorResponses:
          # dovetail uploaded, but file wasn't there!
          - ErrorCachingMinTTL: 0
            ErrorCode: 403
            ResponseCode: 500
            ResponsePagePath: /500.html
          # unrecognized uri or arrangement not in redis
          - ErrorCachingMinTTL: 300
            ErrorCode: 404
          # lambda caught an error
          - ErrorCachingMinTTL: 0
            ErrorCode: 500
          # callback(null, {invalid-response})
          - ErrorCachingMinTTL: 10
            ErrorCode: 502
          # timeout / memory-exceeded / callback(err)
          - ErrorCachingMinTTL: 0
            ErrorCode: 503
          # unknown
          - ErrorCachingMinTTL: 10
            ErrorCode: 504
        DefaultCacheBehavior:
          AllowedMethods: [HEAD, GET]
          CachedMethods: [HEAD, GET]
          Compress: false
          ForwardedValues:
            QueryString: false
          LambdaFunctionAssociations:
            - EventType: origin-request
              LambdaFunctionARN: !Ref LambdaFunctionArn
            - EventType: viewer-response
              LambdaFunctionARN: !Ref LambdaBytesFunctionArn
          TargetOriginId: dovetail-stitch-s3
          ViewerProtocolPolicy: allow-all
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Logging:
          Bucket: prx-dovetail.s3.amazonaws.com
          IncludeCookies: false
          Prefix: !If [IsProduction, "cf-logs-production/", "cf-logs-staging/"]
        Origins:
          - DomainName: !Ref OriginBucket
            Id: dovetail-stitch-s3
            OriginPath: !Ref OriginPath
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}"
        PriceClass: PriceClass_200
        ViewerCertificate:
          AcmCertificateArn: !Ref Certificate
          SslSupportMethod: sni-only
      Tags:
        - { Key: Name, Value: !Sub "${AWS::StackName}" }
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:family, Value: Dovetail }
        - { Key: prx:dev:application, Value: CDN }
  CloudFrontOriginAccessIdentity:
    Type: "AWS::CloudFront::CloudFrontOriginAccessIdentity"
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !If [IsProduction, "Dovetail CDN Production", "Dovetail CDN Staging"]
  # CloudFrontDistribution400Alarm:
  #   Type: "AWS::CloudWatch::Alarm"
  #   Properties:
  #     ActionsEnabled: true
  #     AlarmName: !Join ["", ["[", !Ref DistributionDomain, "][ErrorRate] 4XX"]]
  #     AlarmActions:
  #       - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsWarnMessagesSnsTopicArn"
  #     InsufficientDataActions:
  #       - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsWarnMessagesSnsTopicArn"
  #     OKActions:
  #       - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsWarnMessagesSnsTopicArn"
  #     AlarmDescription: >
  #       The 4xx rate on the Dovetail stitch CDN is too dang high
  #     ComparisonOperator: GreaterThanThreshold
  #     Dimensions:
  #       - Name: Region
  #         Value: Global
  #       - Name: DistributionId
  #         Value: !Ref CloudFrontDistribution
  #     EvaluationPeriods: 2
  #     MetricName: 4xxErrorRate
  #     Namespace: AWS/CloudFront
  #     Period: 300
  #     Statistic: Average
  #     Threshold: 30
  #     TreatMissingData: notBreaching
  #     Unit: Percent
  # CloudFrontDistribution500Alarm:
  #   Type: "AWS::CloudWatch::Alarm"
  #   Properties:
  #     ActionsEnabled: true
  #     AlarmName: !Join ["", ["[", !Ref DistributionDomain, "][ErrorRate] 5XX"]]
  #     AlarmActions:
  #       - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsWarnMessagesSnsTopicArn"
  #     InsufficientDataActions:
  #       - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsWarnMessagesSnsTopicArn"
  #     OKActions:
  #       - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsWarnMessagesSnsTopicArn"
  #     AlarmDescription: >
  #       The error rate on the Dovetail stitch CDN is too dang high
  #     ComparisonOperator: GreaterThanThreshold
  #     Dimensions:
  #       - Name: Region
  #         Value: Global
  #       - Name: DistributionId
  #         Value: !Ref CloudFrontDistribution
  #     EvaluationPeriods: 5
  #     MetricName: 5xxErrorRate
  #     Namespace: AWS/CloudFront
  #     Period: 60
  #     Statistic: Average
  #     Threshold: 0.5
  #     TreatMissingData: notBreaching
  #     Unit: Percent
  # CloudFrontDistributionFatal500Alarm:
  #   Type: "AWS::CloudWatch::Alarm"
  #   Properties:
  #     ActionsEnabled: true
  #     AlarmName: !Join ["", ["[", !Ref DistributionDomain, "][ErrorRate] Fatal 5XX"]]
  #     AlarmActions:
  #       - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsFatalMessagesSnsTopicArn"
  #     InsufficientDataActions:
  #       - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsFatalMessagesSnsTopicArn"
  #     OKActions:
  #       - Fn::ImportValue: !Sub "${InfrastructureNotificationsStackName}-OpsFatalMessagesSnsTopicArn"
  #     AlarmDescription: >
  #       The error rate on the Dovetail stitch CDN is too dang high
  #     ComparisonOperator: GreaterThanThreshold
  #     Dimensions:
  #       - Name: Region
  #         Value: Global
  #       - Name: DistributionId
  #         Value: !Ref CloudFrontDistribution
  #     EvaluationPeriods: 3
  #     MetricName: 5xxErrorRate
  #     Namespace: AWS/CloudFront
  #     Period: 60
  #     Statistic: Average
  #     Threshold: 2.0
  #     TreatMissingData: notBreaching
  #     Unit: Percent
Outputs:
  CloudFrontDomainName:
    Value: !GetAtt CloudFrontDistribution.DomainName
