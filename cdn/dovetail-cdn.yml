AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Creates a CloudFront distribution to origin-pull from a Dovetail S3 bucket,
  with an origin-request Lambda to do the actual file stitching.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Stack Dependencies
        Parameters:
          - InfrastructureNotificationsStackName
      - Label:
          default: Distribution Parameters
        Parameters:
          - OriginBucket
          - OriginPath
          - DistributionDomain
          - CertificateArn
          - LambdaFunctionArn
    ParameterLabels:
      OriginBucket:
        default: Origin S3 Bucket
      OriginPath:
        default: Origin S3 Path
      DistributionDomain:
        default: Domain Name
      CertificateArn:
        default: ACM Certificate Arn
      LambdaFunctionArn:
        default: Stitch Function Arn
      InfrastructureNotificationsStackName:
        default: Notifications stack name
Parameters:
  OriginBucket:
    Type: String
    Description: eg. prx-dovetail.s3.amazonaws.com
  OriginPath:
    Type: String
    Description: eg. /stitch-production, /stitch-staging
  DistributionDomain:
    Type: String
    Description: eg. dovetail-cdn.prxu.org
  CertificateArn:
    Type: String
    Description: eg. arn:aws:acm:<region>:<account>:certificate/<guid>
  LambdaFunctionArn:
    Type: String
    Description: eg. arn:aws:lambda:<region>:<account>:function:<name>:<version>
  InfrastructureNotificationsStackName:
    Default: infrastructure-notifications
    Description: The name of a previously launched notifications stack
    Type: String
Resources:
  CloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref DistributionDomain
        CustomErrorResponses:
          # dovetail uploaded, but file wasn't there!
          - ErrorCachingMinTTL: 0
            ErrorCode: 403
            ResponseCode: 500
            ResponsePagePath: /500.html
          # unrecognized uri or arrangement not in redis
          - ErrorCachingMinTTL: 300
            ErrorCode: 404
          # lambda caught an error
          - ErrorCachingMinTTL: 0
            ErrorCode: 500
          # callback(null, {invalid-response})
          - ErrorCachingMinTTL: 10
            ErrorCode: 502
          # timeout / memory-exceeded / callback(err)
          - ErrorCachingMinTTL: 0
            ErrorCode: 503
          # unknown
          - ErrorCachingMinTTL: 10
            ErrorCode: 504
        DefaultCacheBehavior:
          AllowedMethods: [HEAD, GET]
          CachedMethods: [HEAD, GET]
          Compress: false
          ForwardedValues:
            QueryString: false
          LambdaFunctionAssociations:
            - EventType: origin-request
              LambdaFunctionARN: !Ref LambdaFunctionArn
          TargetOriginId: dovetail-stitch-s3
          ViewerProtocolPolicy : allow-all
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Origins:
          - DomainName: !Ref OriginBucket
            Id: dovetail-stitch-s3
            OriginPath: !Ref OriginPath
            S3OriginConfig: {}
        PriceClass: PriceClass_200
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          SslSupportMethod: sni-only
      Tags:
        - Key: Project
          Value: Dovetail
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
  CloudFrontDistribution400Alarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmName: !Join ["", ["[", !Ref DistributionDomain, "][ErrorRate] 4XX"]]
      AlarmActions:
        - Fn::ImportValue:
            !Sub "${InfrastructureNotificationsStackName}-OpsWarnMessagesSnsTopicArn"
      InsufficientDataActions:
        - Fn::ImportValue:
            !Sub "${InfrastructureNotificationsStackName}-OpsWarnMessagesSnsTopicArn"
      OKActions:
        - Fn::ImportValue:
            !Sub "${InfrastructureNotificationsStackName}-OpsWarnMessagesSnsTopicArn"
      AlarmDescription: >
        The 4xx rate on the Dovetail stitch CDN is too dang high
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: Region
          Value: Global
        - Name: DistributionId
          Value: !Ref CloudFrontDistribution
      EvaluationPeriods: "1"
      MetricName: 4xxErrorRate
      Namespace: AWS/CloudFront
      Period: "60"
      Statistic: Average
      Threshold: "0.001"
      TreatMissingData: notBreaching
      Unit: Percent
  CloudFrontDistribution500Alarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmName: !Join ["", ["[", !Ref DistributionDomain, "][ErrorRate] 5XX"]]
      AlarmActions:
        - Fn::ImportValue:
            !Sub "${InfrastructureNotificationsStackName}-OpsWarnMessagesSnsTopicArn"
      InsufficientDataActions:
        - Fn::ImportValue:
            !Sub "${InfrastructureNotificationsStackName}-OpsWarnMessagesSnsTopicArn"
      OKActions:
        - Fn::ImportValue:
            !Sub "${InfrastructureNotificationsStackName}-OpsWarnMessagesSnsTopicArn"
      AlarmDescription: >
        The error rate on the Dovetail stitch CDN is too dang high
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: Region
          Value: Global
        - Name: DistributionId
          Value: !Ref CloudFrontDistribution
      EvaluationPeriods: "1"
      MetricName: 5xxErrorRate
      Namespace: AWS/CloudFront
      Period: "60"
      Statistic: Average
      Threshold: "0.001"
      TreatMissingData: notBreaching
      Unit: Percent
Outputs:
  CloadfrontDomainName:
    Value: !GetAtt CloudFrontDistribution.DomainName
