# cdn/log-shipper.yml
AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Description: >-
  Reads CloudFront logs from a Dovetail3 CDN and processes them. Anonymizes IP
  addresses and does other transformations. The resulting files are written to
  a separate S3 bucket for 3rd party usage.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: S3 Configuration
        Parameters:
          - LogBucket
          - LogPrefix
          - DestinationBucket
          - DestinationPrefix
          - EnvironmentType
    ParameterLabels:
      LogBucket:
        default: Bucket where CloudFront is logging
      LogPrefix:
        default: Path where logs are located
      DestinationBucket:
        default: Bucket to write processed log files
      DestinationPrefix:
        default: Path within destination
      EnvironmentType:
        default: Environment type

Parameters:
  LogBucket:
    Type: String
    Description: eg. some-bucket-name
  LogPrefix:
    Type: String
    Description: eg. some/path/here
  DestinationBucket:
    Type: String
    Description: eg. some-bucket-name
  DestinationPrefix:
    Type: String
    Description: eg. some/path/here
  EnvironmentType:
    Type: String
    AllowedValues:
      - Testing
      - Staging
      - Production

Mappings:
  EnvironmentTypeMap:
    Testing:
      abbreviation: test
    Staging:
      abbreviation: stag
    Production:
      abbreviation: prod

Resources:
  ShipperFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: >-
        Process log files written by a Dovetail3 CDN and write them to a
        destination S3 bucket.
      Environment:
        Variables:
          DESTINATION_BUCKET: !Ref DestinationBucket
          DESTINATION_PREFIX: !Ref DestinationPrefix
      Handler: index.handler
      InlineCode: |
        const AWS = require('aws-sdk');
        exports.handler = async (event) => {
          console.log(JSON.stringify(event));
        };
      MemorySize: 512
      Policies:
        - !Ref LogBucketReadPolicy
      Runtime: nodejs14.x
      Tags:
        prx:meta:tagging-version: "2021-04-07"
        prx:cloudformation:stack-name: !Ref AWS::StackName
        prx:cloudformation:stack-id: !Ref AWS::StackId
        prx:ops:environment: !Ref EnvironmentType
        prx:dev:application: Log Shipper
      Timeout: 30
  LogBucketReadPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:GetBucketNotification
            Effect: Allow
            Resource: !Sub arn:aws:s3:::${LogBucket}
          - Action: s3:PutBucketNotification
            Effect: Allow
            Resource: !Sub arn:aws:s3:::${LogBucket}
        Version: "2012-10-17"
  # TODO s3 trigger
