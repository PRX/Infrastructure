# When creating a CloudFront distribution for an S3 bucket, it is recommended
# that the bucket remains private and CloudFront is given access to it via an
# Origin Access Identity. This template can create that identity, but it cannot
# update the origin bucket's policy to grant the identity access permissions.
# Once the stack has been created, add a policy like the following to the
# bucket, substituting the bucket name and the S3 canonical user ID (whose
# value is an output of the stack)
# {
#     "Version": "2012-10-17",
#     "Id": "CloudFrontOrigin",
#     "Statement": [
#         {
#             "Sid": "Grant read access to a CloudFront Origin Identity",
#             "Effect": "Allow",
#             "Principal": {
#                 "CanonicalUser":"XXXXXXXXXXXXXX"
#             },
#             "Action": "s3:GetObject",
#             "Resource": "arn:aws:s3:::XXXXXXX-bucketname/*"
#         }
#     ]
# }
AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Creates a CloudFront distribution with a single origin (either web or S3)
Conditions:
  HasCloudFrontDefaultRootObject: !Not [!Equals [!Ref CloudFrontDefaultRootObject, ""]]
  HasCloudFrontMinTtl: !Not [!Equals [!Ref CloudFrontMinTtl, ""]]
  HasCloudFrontMaxTtl: !Not [!Equals [!Ref CloudFrontMaxTtl, ""]]
  HasCloudFrontOriginAccess: !Equals [!Ref CloudFrontOriginAccess, "Yes"]
  HasCloudFrontLoggingBucket: !Not [!Equals [!Ref CloudFrontLoggingBucket, ""]]
  HasCloudFrontLoggingBucketPrefix: !Not [!Equals [!Ref CloudFrontLoggingBucketPrefix, ""]]
  HasAcmCertificateArn: !Not [!Equals [!Ref AcmCertificateArn, ""]]
  HasNoAcmCertificateArn: !Equals [!Ref AcmCertificateArn, ""]
  HasOriginPath: !Not [!Equals [!Ref OriginPath, ""]]
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Distribution
        Parameters:
          - ProjectTag
          - Cnames
      - Label:
          default: Origin
        Parameters:
          - OriginDomain
          - OriginPath
      - Label:
          default: CloudFront
        Parameters:
          - CloudFrontComment
          - CloudFrontPriceClass
          - CloudFrontDefaultRootObject
          - CloudFrontCachedMethods
          - CloudFrontAllowedMethods
          - CloudFrontMinTtl
          - CloudFrontMaxTtl
          - CloudFrontLoggingBucket
          - CloudFrontLoggingBucketPrefix
          - CloudFrontOriginAccess
      - Label:
          default: HTTPS Certificate
        Parameters:
          - AcmCertificateArn
          - ValidationDomain
    ParameterLabels:
      ProjectTag:
        default: Project tag
      Cnames:
        default: CNAMEs
      OriginDomain:
        default: Origin domain
      OriginPath:
        default: Origin path
      CloudFrontLoggingBucket:
        default: Log S3 bucket
      CloudFrontLoggingBucketPrefix:
        default: Log file prefix
      CloudFrontComment:
        default: Comment
      CloudFrontMinTtl:
        default: Min TTL
      CloudFrontMaxTtl:
        default: Max TTL
      CloudFrontPriceClass:
        default: Price class
      CloudFrontDefaultRootObject:
        default: Default root object
      CloudFrontAllowedMethods:
        default: Allowed methods
      CloudFrontCachedMethods:
        default: Cached methods
      CloudFrontOriginAccess:
        default: Origin access identity
      AcmCertificateArn:
        default: Certificate ARN
      ValidationDomain:
        default: Validation domain
Parameters:
  ProjectTag:
    Type: String
    Description: >
      The value used for the Project tag on resources that support tagging.
  Cnames:
    Type: CommaDelimitedList
    Description: >
      The CNAMEs (alternate domain names) for the distribution, as a
      comma-delimited list (e.g. "cdn1.example.com,cdn2.example.com")
  OriginDomain:
    Type: String
    Description: >
      The DNS name of the Amazon Simple Storage Service (S3) bucket or the HTTP
      server from which you want CloudFront to get objects for this origin.
  OriginPath:
    Type: String
    Description: >
      (optional) The path that CloudFront uses to request content from an S3
      bucket or custom origin. The combination of the DomainName and OriginPath
      properties must resolve to a valid path. The value must start with a slash
      mark (/) and cannot end with a slash mark.
  CloudFrontLoggingBucket:
    Type: String
    Description: >
      The Amazon S3 bucket address where access logs are stored for CloudFront.
      (e.g., mybucket.s3.amazonaws.com)
  CloudFrontLoggingBucketPrefix:
    Type: String
    Description: >
      (optional) A prefix for the access log file names for the CloudFront
      distribution.
  CloudFrontComment:
    Type: String
    Description: >
      Any comments that you want to include about the CloudFront distribution
    MaxLength: 128
  CloudFrontMinTtl:
    Type: String
    Description: >
      The minimum amount of time that you want objects to stay in CloudFront
      caches before CloudFront forwards another request to your origin to
      determine whether the object has been updated.
  CloudFrontMaxTtl:
    Type: String
    Description: >
      The maximum amount of time, in seconds, that you want objects to stay in
      CloudFront caches before CloudFront forwards another request to your
      origin to determine whether the object has been updated. The value that
      you specify applies only when your origin adds HTTP headers such as
      Cache-Control max-age, Cache-Control s-maxage, and Expires to objects
  CloudFrontPriceClass:
    Type: String
    Description: >
      The price class that corresponds with the maximum price that you want to
      pay for CloudFront service.
    Default: PriceClass_All
    AllowedValues:
      - PriceClass_100
      - PriceClass_200
      - PriceClass_All
  CloudFrontDefaultRootObject:
    Type: String
    Default: index.html
    Description: >
      Optional. The object that you want CloudFront to return (for example,
      index.html) when a viewer request points to your root URL
      (http://www.example.com) instead of to a specific object in your
      distribution (http://www.example.com/index.html).
  CloudFrontAllowedMethods:
    Type: CommaDelimitedList
    Description: >
      HTTP methods that CloudFront processes and forwards to your Amazon S3 bucket or your custom origin.
    Default: "HEAD,GET"
    AllowedValues:
      - "HEAD,GET"
      - "GET,HEAD,OPTIONS"
      - "DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT"
  CloudFrontCachedMethods:
    Type: CommaDelimitedList
    Description: >
      HTTP methods for which CloudFront caches responses.
    Default: "HEAD,GET"
    AllowedValues:
      - "HEAD,GET"
      - "GET,HEAD,OPTIONS"
  CloudFrontOriginAccess:
    Type: String
    Description: >
      Create an origin access identity which can be used to grant the CloudFront
      distribution access to an S3 bucket via a bucket policy. Only use this
      when the origin is an S3 bucket. The Comment is required when an origin
      access identity is created. Turning this on will not update an S3 bucket
      policies.
    Default: 'No'
    AllowedValues:
      - 'Yes'
      - 'No'
  AcmCertificateArn:
    Type: String
    Description: >
      ARN for the ACM certificate that will be used with the CloudFront
      distribution. If no value is supplied, a new certificate will be created.
  ValidationDomain:
    Type: String
    Description: >
      eg. songexploder.net. Must be a superdomain of the public feed domain
      name. A verification email will be sent to postmast@, webmaster@, etc.
      (Not used if a certificate ARN is given)
Resources:
  # ACM Certificate
  # This gets created when no ARN for a pre-existing certificate is provided
  Certificate:
    Type: "AWS::CertificateManager::Certificate"
    Condition: HasNoAcmCertificateArn
    Properties:
      DomainName: !Select [0, !Ref Cnames]
      DomainValidationOptions:
        - ValidationDomain: !Ref ValidationDomain
          DomainName: !Select [0, !Ref Cnames]
      SubjectAlternativeNames: !Ref Cnames
      Tags:
        - Key: Project
          Value: !Ref ProjectTag
        - Key: Name
          Value: !Sub "${AWS::StackName} ${AWS::Region}"
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
  CloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Aliases: !Ref Cnames
        # CacheBehaviors:
          # CacheBehavior
        Comment: !Ref CloudFrontComment
        # CustomErrorResponses:
        #   CustomErrorResponse
        DefaultCacheBehavior:
          AllowedMethods: !Ref CloudFrontAllowedMethods
          CachedMethods: !Ref CloudFrontCachedMethods
          Compress: true
          # DefaultTTL: Number
          ForwardedValues:
            # Cookies:
            #   Cookies
            # Headers:
            #   - String
            QueryString: false
            # QueryStringCacheKeys:
          # LambdaFunctionAssociations:
          MaxTTL: !If [HasCloudFrontMaxTtl, !Ref "CloudFrontMaxTtl", !Ref "AWS::NoValue"]
          MinTTL: !If [HasCloudFrontMinTtl, !Ref "CloudFrontMinTtl", !Ref "AWS::NoValue"]
          # SmoothStreaming: Boolean
          TargetOriginId: web-origin
          # TrustedSigners:
          #   - String
          ViewerProtocolPolicy : redirect-to-https
        DefaultRootObject: !If [HasCloudFrontDefaultRootObject, !Ref "CloudFrontDefaultRootObject", !Ref "AWS::NoValue"]
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Logging:
          !If
            - HasCloudFrontLoggingBucket
            - Bucket: !Ref CloudFrontLoggingBucket
              IncludeCookies: false
              Prefix: !If [HasCloudFrontLoggingBucketPrefix, !Ref "CloudFrontLoggingBucketPrefix", !Ref "AWS::NoValue"]
            - !Ref "AWS::NoValue"
        Origins:
          - CustomOriginConfig:
              !If
                - HasCloudFrontOriginAccess
                - !Ref "AWS::NoValue"
                - HTTPSPort: 443
                  # HTTPPort: Integer
                  OriginProtocolPolicy: https-only
                  OriginSSLProtocols:
                    - TLSv1.2
                    - TLSv1.1
                    - TLSv1
            DomainName: !Ref OriginDomain
            Id: web-origin
            # OriginCustomHeaders:
            #   - OriginCustomHeader
            OriginPath: !If [HasOriginPath, !Ref "OriginPath", !Ref "AWS::NoValue"]
            S3OriginConfig:
              !If
                - HasCloudFrontOriginAccess
                - OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}"
                - !Ref "AWS::NoValue"
        PriceClass: !Ref CloudFrontPriceClass
        # Restrictions:
        #   Restriction
        ViewerCertificate:
          AcmCertificateArn: !If [HasAcmCertificateArn, !Ref "AcmCertificateArn", !Ref Certificate]
          # CloudFrontDefaultCertificate: true
          # IamCertificateId: String
          # MinimumProtocolVersion: String
          SslSupportMethod: sni-only
        # WebACLId: String
      Tags:
        - Key: Project
          Value: !Ref ProjectTag
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
  CloudFrontOriginAccessIdentity:
    Type: "AWS::CloudFront::CloudFrontOriginAccessIdentity"
    Condition: HasCloudFrontOriginAccess
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Ref CloudFrontComment
Outputs:
  CloudFrontDomainName:
    Value: !GetAtt CloudFrontDistribution.DomainName
  CloudFrontOriginAccessIdentityId:
    Value: !Ref CloudFrontOriginAccessIdentity
  CloudFrontOriginAccessIdentityS3CanonicalUserId:
    Value: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
