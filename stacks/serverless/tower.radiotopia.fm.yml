# stacks/serverless/tower.radiotopia.fm.yml
AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Radiotopia Radio API
Conditions:
  CreateProductionResources: !Equals [!Ref EnvironmentType, Production]
Parameters:
  OpsWarnMessagesSnsTopicArn:
    Type: String
  EnvironmentType:
    Type: String
  CodeS3Bucket:
    Type: String
  CodeS3ObjectKey:
    Type: String
Resources:
  # API
  # https://tower.radiotopia.fm/api/v2/episodes.json
  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration:
        AllowHeaders:
          - Content-Type
          - X-Amz-Date
          - Authorization
          - X-Api-Key
          - X-Amz-Security-Token
        AllowMethods:
          - GET
          - OPTIONS
        AllowOrigins:
          - "*"
      Tags:
        Project: tower.radiotopia.fm
        Environment: !Ref EnvironmentType
        prx:cloudformation:stack-name: !Ref AWS::StackName
        prx:cloudformation:stack-id: !Ref AWS::StackId
  TowerLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri:
        Bucket: !Ref CodeS3Bucket
        Key: !Ref CodeS3ObjectKey
      Description: Radiotopia Radio API v2
      Events:
        ApiRequest:
          Properties:
            ApiId: !Ref HttpApi
            Method: get
            Path: /api/v2/episodes.json
          Type: HttpApi
      Handler: index.handler
      Layers:
        - arn:aws:lambda:us-east-1:561178107736:layer:npm-rgrove-parse-xml:1
      MemorySize: 512
      Runtime: nodejs14.x
      Tags:
        Project: tower.radiotopia.fm
        Environment: !Ref EnvironmentType
        prx:cloudformation:stack-name: !Ref AWS::StackName
        prx:cloudformation:stack-id: !Ref AWS::StackId
      Timeout: 16
  TowerLambdaErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateProductionResources
    Properties:
      ActionsEnabled: true
      AlarmName: "[Tower][Lambda][Error] Invocation 4XX"
      AlarmActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      InsufficientDataActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      OKActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      AlarmDescription: The error rate on the Tower lambda has exceeded 2
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 2
      TreatMissingData: notBreaching
      Dimensions:
        - Name: FunctionName
          Value: !Ref TowerLambdaFunction
  TowerLambdaThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateProductionResources
    Properties:
      ActionsEnabled: true
      AlarmName: "[Tower][Lambda][Throttles] Invocation 429"
      AlarmActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      InsufficientDataActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      OKActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      AlarmDescription: Throttles on the Tower lambda has exceeded 0
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      MetricName: Throttles
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching
      Dimensions:
        - Name: FunctionName
          Value: !Ref TowerLambdaFunction
  TowerLambdaFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${TowerLambdaFunction}
      RetentionInDays: 14
