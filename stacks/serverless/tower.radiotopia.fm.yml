# stacks/serverless/tower.radiotopia.fm.yml
AWSTemplateFormatVersion: "2010-09-09"
Description: Radiotopia Radio API
Conditions:
  CreateStagingResources: !Equals [!Ref EnvironmentType, Staging]
  CreateProductionResources: !Equals [!Ref EnvironmentType, Production]
Parameters:
  OpsErrorMessagesSnsTopicArn:
    Type: String
  OpsWarnMessagesSnsTopicArn:
    Type: String
  EnvironmentType:
    Type: String
  CodeS3Bucket:
    Type: String
  CodeS3ObjectVersion:
    Type: String
Resources:
  TowerLambdaIamRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
            - Effect: "Allow"
              Principal:
                Service:
                  - "lambda.amazonaws.com"
              Action:
                - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
  TowerLambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket: !Ref CodeS3Bucket
        S3Key: "lambda/PRX-tower.radiotopia.fm.zip"
        S3ObjectVersion: !Ref CodeS3ObjectVersion
      Description: Radiotopia Radio API v2
      Handler: lambda_function.lambda_handler
      MemorySize: 512
      Role: !GetAtt TowerLambdaIamRole.Arn
      Runtime: python2.7
      Tags:
        - Key: Project
          Value: tower.radiotopia.fm
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
      Timeout: 5
  TowerLambdaErrorAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CreateProductionResources
    Properties:
      ActionsEnabled: true
      AlarmName: "[Tower][Lambda][Error] Invocation 4XX"
      AlarmActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      InsufficientDataActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      OKActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      AlarmDescription:
        The error rate on the Tower lambda has exceeded 2
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 2
      TreatMissingData: notBreaching
      Dimensions:
        - Name: FunctionName
          Value: !Ref TowerLambdaFunction
  TowerLambdaThrottleAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CreateProductionResources
    Properties:
      ActionsEnabled: true
      AlarmName: "[Tower][Lambda][Throttles] Invocation 429"
      AlarmActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      InsufficientDataActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      OKActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      AlarmDescription:
        Throttles on the Tower lambda has exceeded 0
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      MetricName: Throttles
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching
      Dimensions:
        - Name: FunctionName
          Value: !Ref TowerLambdaFunction
  # TowerLambdaDurationAlarm:
  #   Type: "AWS::CloudWatch::Alarm"
  #   Condition: CreateProductionResources
  #   Properties:
  #     ActionsEnabled: true
  #     AlarmName: "[Tower][Lambda][Duration] Unusually slow"
  #     AlarmActions:
  #       - !Ref OpsWarnMessagesSnsTopicArn
  #     InsufficientDataActions:
  #       - !Ref OpsWarnMessagesSnsTopicArn
  #     OKActions:
  #       - !Ref OpsWarnMessagesSnsTopicArn
  #     AlarmDescription:
  #       At least one invocation duration exceeded 225ms
  #     ComparisonOperator: GreaterThanThreshold
  #     EvaluationPeriods: 1
  #     MetricName: Duration
  #     Namespace: AWS/Lambda
  #     Period: 60
  #     Statistic: Maximum
  #     Threshold: 10000
  #     TreatMissingData: notBreaching
  #     Dimensions:
  #       - Name: FunctionName
  #         Value: !Ref TowerLambdaFunction
