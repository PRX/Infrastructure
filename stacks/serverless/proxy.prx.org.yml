# stacks/proxy.prx.org.yml
AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >-
  Creates a serverless app to handle traffic to various domains that needs to
  be proxied or redirected based on rule sets. In staging, it only handles
  proxy.staging.prx.org. In production, the API is also mapped to the domains
  it's designed to proxy, such as prx.org and pri.org.

Parameters:
  OpsWarnMessagesSnsTopicArn:
    Type: String
  OpsErrorMessagesSnsTopicArn:
    Type: String
  CodeS3Bucket:
    Type: String
  CodeS3ObjectKey:
    Type: String
  EnvironmentType:
    Type: String
  EnvironmentTypeAbbreviation:
    Type: String
  RootStackName:
    Type: String

Mappings:
  EnvironmentTypeMap:
    Testing:
      DomainName: "proxy.test.prx.tech"
      HostedZoneName: "prx.tech."
      CorporateHost: "corporate.prx.tech"
      ExchangeHost: "exchange.test.prx.tech"
      PrxSessionKey: "_prx_session_test"
    Staging:
      DomainName: "proxy.staging.prx.tech"
      HostedZoneName: "prx.tech."
      CorporateHost: "corporate.prx.tech"
      ExchangeHost: "exchange.staging.prx.tech"
      PrxSessionKey: "_prx_session_staging"
    Production:
      DomainName: "proxy.prx.org"
      HostedZoneName: "prx.org."
      CorporateHost: "corporate.prx.tech"
      ExchangeHost: "exchange.prx.org"
      PrxSessionKey: "_prx_session"

Conditions:
  CreateStagingResources: !Equals [!Ref EnvironmentType, Staging]
  CreateProductionResources: !Equals [!Ref EnvironmentType, Production]

Resources:
  Certificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !If [CreateProductionResources, www.prx.org, proxy.staging.prx.tech]
      SubjectAlternativeNames: !If
        - CreateProductionResources
        - - prx.org
          - proxy.prx.tech
        - !Ref AWS::NoValue
      Tags:
        - { Key: Name, Value: !Sub "${RootStackName}_proxy" }
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Proxy }
      ValidationMethod: DNS

  ProxyHttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Description: !Sub ${EnvironmentType} proxy service
      DisableExecuteApiEndpoint: false
      Tags:
        prx:meta:tagging-version: "2021-04-07"
        prx:cloudformation:stack-name: !Ref AWS::StackName
        prx:cloudformation:stack-id: !Ref AWS::StackId
        prx:ops:environment: !Ref EnvironmentType
        prx:dev:application: Proxy
  ProxyHttpLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri:
        Bucket: !Ref CodeS3Bucket
        Key: !Ref CodeS3ObjectKey
      Description: !Sub ${EnvironmentType} proxy server
      Environment:
        Variables:
          CORPORATE_HOST: !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, CorporateHost]
          EXCHANGE_HOST: !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, ExchangeHost]
          PRX_SESSION_KEY: !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, PrxSessionKey]
      Events:
        ApiRootRequest:
          Properties:
            ApiId: !Ref ProxyHttpApi
            Method: any
            Path: /
            PayloadFormatVersion: "1.0"
          Type: HttpApi
        ApiDeepRequest:
          Properties:
            ApiId: !Ref ProxyHttpApi
            Method: any
            Path: /{proxy+}
            PayloadFormatVersion: "1.0"
          Type: HttpApi
      Handler: index.handler
      MemorySize: 192
      Runtime: nodejs14.x
      Tags:
        prx:meta:tagging-version: "2021-04-07"
        prx:cloudformation:stack-name: !Ref AWS::StackName
        prx:cloudformation:stack-id: !Ref AWS::StackId
        prx:ops:environment: !Ref EnvironmentType
        prx:dev:application: Proxy
      Timeout: 30
  ProxyHttpLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${ProxyHttpLambdaFunction}
      RetentionInDays: 60
