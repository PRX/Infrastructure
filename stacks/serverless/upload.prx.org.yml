# stacks/serverless/upload.prx.org.yml
AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: File upload Lambda function
Conditions:
  CreateProductionResources: !Equals [!Ref EnvironmentType, Production]
Parameters:
  OpsErrorMessagesSnsTopicArn:
    Type: String
  OpsWarnMessagesSnsTopicArn:
    Type: String
  OpsFatalMessagesSnsTopicArn:
    Type: String
  CodeS3Bucket:
    Type: String
  CodeS3ObjectVersion:
    Type: String
  EnvironmentType:
    Type: String
Resources:
  UploadHttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration:
        AllowHeaders:
          - Content-Type
          - X-Amz-Date
          - Authorization
          - X-Api-Key
          - X-Amz-Security-Token
        AllowMethods:
          - GET
          - OPTIONS
        AllowOrigins:
          - "*"
      Description: !Sub ${EnvironmentType} S3 upload signing API
      Tags:
        prx:meta:tagging-version: "2021-04-07"
        prx:cloudformation:stack-name: !Ref AWS::StackName
        prx:cloudformation:stack-id: !Ref AWS::StackId
        prx:ops:environment: !Ref EnvironmentType
        prx:dev:application: S3 Signing Service
  UploadHttpLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri:
        Bucket: !Ref CodeS3Bucket
        Key: lambda/PRX-upload.prx.org.zip
        Version: !Ref CodeS3ObjectVersion
      Description: !Sub ${EnvironmentType} S3 signing service Lambda function
      Environment:
        Variables:
          ACCESS_KEY: !GetAtt UploadHttpSigningAccessKey.SecretAccessKey
      Events:
        ApiRequest:
          Properties:
            ApiId: !Ref UploadHttpApi
            Method: get
            Path: /signature
          Type: HttpApi
      Handler: index.handler
      MemorySize: 128
      Runtime: nodejs14.x
      Tags:
        prx:meta:tagging-version: "2021-04-07"
        prx:cloudformation:stack-name: !Ref AWS::StackName
        prx:cloudformation:stack-id: !Ref AWS::StackId
        prx:ops:environment: !Ref EnvironmentType
        prx:dev:application: S3 Signing Service
      Timeout: 5
  UploadHttpLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${UploadHttpLambdaFunction}
      RetentionInDays: 60
  UploadHttpSigningUser:
    Type: AWS::IAM::User
    Properties:
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: S3 Signing Service }
  UploadHttpSigningAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref UploadHttpSigningUser
  UploadHttpSigningS3AccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        # TODO Need to be updated for multi-region replication
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - s3:* # TODO Can this be the same as the others?
            Resource:
              - arn:aws:s3:::test.mediajoint.prx.org/public/uploads/*
              - arn:aws:s3:::development.mediajoint.prx.org/public/uploads/*
              - arn:aws:s3:::staging.mediajoint.prx.org/public/uploads/*
              - arn:aws:s3:::production.mediajoint.prx.org/public/uploads/*
          - Effect: Allow
            Action:
              - s3:AbortMultipartUpload
              - s3:ListMultipartUploadParts
              - s3:PutObject
            Resource:
              - arn:aws:s3:::test.networks.prx.org/public/item_attachments/*
              - arn:aws:s3:::development.networks.prx.org/public/item_attachments/*
              - arn:aws:s3:::staging.networks.prx.org/public/item_attachments/*
              - arn:aws:s3:::production.networks.prx.org/public/item_attachments/*
          - Effect: Allow
            Action:
              - s3:AbortMultipartUpload
              - s3:ListMultipartUploadParts
              - s3:PutObject
            Resource:
              - arn:aws:s3:::wfmt-services*
              - arn:aws:s3:::wfmt-services/*
      PolicyName: ExternalS3BucketAccess
      Users:
        - !Ref UploadHttpSigningUser

  # Lambda Alarms
  UploadLambdaElevatedErrorAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CreateProductionResources
    Properties:
      ActionsEnabled: true
      AlarmName: "[Upload][Lambda] Elevated error volume"
      AlarmActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      InsufficientDataActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      OKActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      AlarmDescription: Signing function has encountered an invocation error
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching
      Dimensions:
        - Name: FunctionName
          Value: !Ref UploadHttpLambdaFunction
  UploadLambdaDangerousErrorAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CreateProductionResources
    Properties:
      ActionsEnabled: true
      AlarmName: "[Upload][Lambda] Dangerous error volume"
      AlarmActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      InsufficientDataActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      OKActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      AlarmDescription: Signing function has encountered several invocation errors
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 10
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching
      Dimensions:
        - Name: FunctionName
          Value: !Ref UploadHttpLambdaFunction
  UploadLambdaElevatedThrottleAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CreateProductionResources
    Properties:
      ActionsEnabled: true
      AlarmName: "[Upload][Lambda] Elevated invocation throttling"
      AlarmActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      InsufficientDataActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      OKActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      AlarmDescription: Signing function invocations are being throttled
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      MetricName: Throttles
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching
      Dimensions:
        - Name: FunctionName
          Value: !Ref UploadHttpLambdaFunction
  UploadLambdaElevatedMaxDurationAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CreateProductionResources
    Properties:
      ActionsEnabled: true
      AlarmName: "[Upload][Lambda] Elevated maximum duration"
      AlarmActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      InsufficientDataActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      OKActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      AlarmDescription: Several signing function invocations were unusually slow
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 3
      MetricName: Duration
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Maximum
      Threshold: 225
      TreatMissingData: notBreaching
      Dimensions:
        - Name: FunctionName
          Value: !Ref UploadHttpLambdaFunction
  UploadLambdaElevatedVolumeAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CreateProductionResources
    Properties:
      ActionsEnabled: true
      AlarmName: "[Upload][Lambda] Elevated invocation volume"
      AlarmActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      InsufficientDataActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      OKActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      AlarmDescription: The number of signing function invocations has been unusually high for
        several periods
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 3
      MetricName: Invocations
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 500
      TreatMissingData: notBreaching
      Dimensions:
        - Name: FunctionName
          Value: !Ref UploadHttpLambdaFunction
  UploadLambdaDangerousErrorRateAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CreateProductionResources
    Properties:
      ActionsEnabled: true
      AlarmName: "[Upload][Lambda] Dangerous error rate"
      AlarmActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      InsufficientDataActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      OKActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      AlarmDescription: Short-term error rate has reached a dangerous level
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 3
      Metrics:
        - Id: errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: FunctionName
                  Value: !Ref UploadHttpLambdaFunction
              MetricName: Errors
              Namespace: AWS/Lambda
            Period: 120
            Stat: Sum
          ReturnData: false
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: FunctionName
                  Value: !Ref UploadHttpLambdaFunction
              MetricName: Invocations
              Namespace: AWS/Lambda
            Period: 120
            Stat: Sum
          ReturnData: false
        - Id: error_rate
          Expression: "errors / invocations"
          ReturnData: true
      Threshold: 0.3
      TreatMissingData: notBreaching
  UploadLambdaCriticalErrorRateAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CreateProductionResources
    Properties:
      ActionsEnabled: true
      AlarmName: "[Upload][Lambda] Critical error rate"
      AlarmActions:
        - !Ref OpsFatalMessagesSnsTopicArn
      InsufficientDataActions:
        - !Ref OpsFatalMessagesSnsTopicArn
      OKActions:
        - !Ref OpsFatalMessagesSnsTopicArn
      AlarmDescription: Short-term error rate has reached a critical level
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 2
      Metrics:
        - Id: errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: FunctionName
                  Value: !Ref UploadHttpLambdaFunction
              MetricName: Errors
              Namespace: AWS/Lambda
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: FunctionName
                  Value: !Ref UploadHttpLambdaFunction
              MetricName: Invocations
              Namespace: AWS/Lambda
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: error_rate
          Expression: "errors / invocations"
          ReturnData: true
      Threshold: 0.6
      TreatMissingData: notBreaching
Outputs:
  SigningAccessKeyId:
    Description: >-
      The IAM access key ID for the access key used to generate S3 API
      request signatures
    Value: !Ref UploadHttpSigningAccessKey
  SigningDomain:
    Description: The domain for the signing service
    Value: !Sub ${UploadHttpApi}.execute-api.${AWS::Region}.amazonaws.com
  SigningEndpointUrl:
    Description: The URL for the signing endpoint
    Value: !Sub https://${UploadHttpApi}.execute-api.${AWS::Region}.amazonaws.com/signature
  UploadSigningUserName:
    Description: The user name of the IAM user whose key is used for signing
    Value: !Ref UploadHttpSigningUser
