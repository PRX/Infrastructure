# stacks/serverless/dovetail-cdn-arranger.yml
AWSTemplateFormatVersion: '2010-09-09'
Description: Dovetail CDN Arranger lambda function
Conditions:
  IsProduction: !Equals [!Ref EnvironmentType, Production]
Parameters:
  CodeS3Bucket:
    Type: String
  CodeS3ObjectVersion:
    Type: String
  EnvironmentType:
    Type: String
  DovetailHost:
    Type: AWS::SSM::Parameter::Value<String>
  DovetailToken:
    Type: AWS::SSM::Parameter::Value<String>
  DynamodbTableArn:
    Type: AWS::SSM::Parameter::Value<String>
Resources:
  DovetailCdnArrangerWorkspaceBucket:
    Type: AWS::S3::Bucket
    Properties:
      # TODO: tag-specific expirations
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 30
            Status: Enabled
      Tags:
        - Key: Project
          Value: Dovetail
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
  DovetailCdnArrangerBinaryLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleRuntimes:
        - nodejs14.x
        - nodejs12.x
      Content:
        S3Bucket: prx-tech
        S3Key: archives/ffmpeg-4.3.1-lambda-layer.zip
      Description: ffmpeg binaries for dovetail-cdn-arranger
      LicenseInfo: MIT
  DovetailCdnArrangerExecutionIAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service:
                - 'lambda.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Path: '/'
      Policies:
        - PolicyName: DynamoDBWritePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'dynamodb:DescribeTable'
                  - 'dynamodb:GetItem'
                  - 'dynamodb:PutItem'
                Resource:
                  - !Ref DynamodbTableArn
        - PolicyName: S3WritePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:ListBucket'
                Resource:
                  - !GetAtt DovetailCdnArrangerWorkspaceBucket.Arn
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:PutObjectTagging'
                Resource:
                  - !Sub ${DovetailCdnArrangerWorkspaceBucket.Arn}/*
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy'
      Tags:
        - Key: Project
          Value: Dovetail
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: 'prx:cloudformation:stack-name'
          Value: !Ref AWS::StackName
        - Key: 'prx:cloudformation:stack-id'
          Value: !Ref AWS::StackId
  DovetailCdnArrangerFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: !Ref CodeS3Bucket
        S3Key: lambda/PRX-dovetail-cdn-arranger.zip
        S3ObjectVersion: !Ref CodeS3ObjectVersion
      Description: Dovetail CDN Arranger
      Environment:
        Variables:
          DDB_TABLE: !Ref DynamodbTableArn
          DOVETAIL_HOST: !Ref DovetailHost
          DOVETAIL_TOKEN: !Ref DovetailToken
          S3_BUCKET: !Ref DovetailCdnArrangerWorkspaceBucket
      Handler: index.handler
      Layers: !If
        - IsProduction
        - - !Sub arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:12
        - !Ref AWS::NoValue
      MemorySize: 8000
      Role: !GetAtt DovetailCdnArrangerExecutionIAMRole.Arn
      Runtime: nodejs14.x
      Timeout: 300
      Tags:
        - Key: Project
          Value: Dovetail
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: Name
          Value: !Sub Dovetail-Counts-${EnvironmentType}
        - Key: 'prx:cloudformation:stack-name'
          Value: !Ref AWS::StackName
        - Key: 'prx:cloudformation:stack-id'
          Value: !Ref AWS::StackId
