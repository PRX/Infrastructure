# stacks/serverless/analytics-ingest-filters.yml
AWSTemplateFormatVersion: "2010-09-09"
Description: Cloudwatch log metric-filters and alarms for analytics-ingest-lambdas
Conditions:
  IsProduction: !Equals [!Ref EnvironmentType, Production]
Parameters:
  OpsWarnMessagesSnsTopicArn:
    Type: String
  OpsErrorMessagesSnsTopicArn:
    Type: String
  OpsFatalMessagesSnsTopicArn:
    Type: String
  EnvironmentType:
    Type: String
  EnvironmentTypeAbbreviation:
    Type: String
  BigqueryFunctionName:
    Type: String
  DynamodbFunctionName:
    Type: String
  PingbacksFunctionName:
    Type: String
  RedisFunctionName:
    Type: String
  MetricsKinesisStreamArn:
    Type: AWS::SSM::Parameter::Value<String>
Resources:
  # bigquery metrics
  AnalyticsBigqueryLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: !Sub "/aws/lambda/${BigqueryFunctionName}"
      RetentionInDays: 14
  AnalyticsBigqueryDownloadsMetric:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: '{ $.dest = "dt_downloads" }'
      LogGroupName: !Ref AnalyticsBigqueryLogGroup
      MetricTransformations:
        - MetricName: !Sub "analytics_bigquery_downloads_${EnvironmentTypeAbbreviation}"
          MetricNamespace: LogMetrics
          MetricValue: $.rows
  AnalyticsBigqueryImpressionsMetric:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: '{ $.dest = "dt_impressions" }'
      LogGroupName: !Ref AnalyticsBigqueryLogGroup
      MetricTransformations:
        - MetricName: !Sub "analytics_bigquery_impressions_${EnvironmentTypeAbbreviation}"
          MetricNamespace: LogMetrics
          MetricValue: $.rows
  AnalyticsBigqueryErrorsMetric:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: '{ $._logLevel = "error" }'
      LogGroupName: !Ref AnalyticsBigqueryLogGroup
      MetricTransformations:
        - MetricName: !Sub "analytics_bigquery_errors_${EnvironmentTypeAbbreviation}"
          MetricNamespace: LogMetrics
          MetricValue: "1"
  AnalyticsBigqueryErrorsAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[Analytics][BigQuery][LogErrors] ${EnvironmentType}"
      AlarmActions:
        - !If [IsProduction, !Ref OpsErrorMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      InsufficientDataActions:
        - !If [IsProduction, !Ref OpsErrorMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      OKActions:
        - !If [IsProduction, !Ref OpsErrorMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      AlarmDescription: Logged errors on the analytics bigquery function
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      MetricName: !Sub "analytics_bigquery_errors_${EnvironmentTypeAbbreviation}"
      Namespace: LogMetrics
      Period: 60
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching
  AnalyticsBigqueryDownloadsAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: IsProduction
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[Analytics][BigQuery][Downloads] ${EnvironmentType} Too Few"
      AlarmActions: [!Ref OpsFatalMessagesSnsTopicArn]
      InsufficientDataActions: [!Ref OpsFatalMessagesSnsTopicArn]
      OKActions: [!Ref OpsFatalMessagesSnsTopicArn]
      AlarmDescription: BigQuery downloads dropped below threshold
      ComparisonOperator: LessThanThreshold
      EvaluationPeriods: 1
      MetricName: !Sub "analytics_bigquery_downloads_${EnvironmentTypeAbbreviation}"
      Namespace: LogMetrics
      Period: 300
      Statistic: Sum
      Threshold: 2000
      TreatMissingData: breaching
  AnalyticsBigqueryImpressionsAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: IsProduction
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[Analytics][BigQuery][Impressions] ${EnvironmentType} Too Few"
      AlarmActions: [!Ref OpsFatalMessagesSnsTopicArn]
      InsufficientDataActions: [!Ref OpsFatalMessagesSnsTopicArn]
      OKActions: [!Ref OpsFatalMessagesSnsTopicArn]
      AlarmDescription: BigQuery impressions dropped below threshold
      ComparisonOperator: LessThanThreshold
      EvaluationPeriods: 1
      MetricName: !Sub "analytics_bigquery_impressions_${EnvironmentTypeAbbreviation}"
      Namespace: LogMetrics
      Period: 300
      Statistic: Sum
      Threshold: 4000
      TreatMissingData: breaching
  # dynamodb metrics
  AnalyticsDynamodbLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: !Sub "/aws/lambda/${DynamodbFunctionName}"
      RetentionInDays: 14
  AnalyticsDynamodbInsertsMetric:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: '{ $.dest = "dynamodb" }'
      LogGroupName: !Ref AnalyticsDynamodbLogGroup
      MetricTransformations:
        - MetricName: !Sub "analytics_dynamodb_inserts_${EnvironmentTypeAbbreviation}"
          MetricNamespace: LogMetrics
          MetricValue: $.rows
  AnalyticsDynamodbLookupsMetric:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: '{ $.dest = "kinesis*" }'
      LogGroupName: !Ref AnalyticsDynamodbLogGroup
      MetricTransformations:
        - MetricName: !Sub "analytics_dynamodb_lookups_${EnvironmentTypeAbbreviation}"
          MetricNamespace: LogMetrics
          MetricValue: $.rows
  AnalyticsDynamodbRetriesMetric:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: '{ $.ddb = "retrying" }'
      LogGroupName: !Ref AnalyticsDynamodbLogGroup
      MetricTransformations:
        - MetricName: !Sub "analytics_dynamodb_retries_${EnvironmentTypeAbbreviation}"
          MetricNamespace: LogMetrics
          MetricValue: "1"
  AnalyticsDynamodbMissingMetric:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: '{ $.ddb = "missing" }'
      LogGroupName: !Ref AnalyticsDynamodbLogGroup
      MetricTransformations:
        - MetricName: !Sub "analytics_dynamodb_missing_${EnvironmentTypeAbbreviation}"
          MetricNamespace: LogMetrics
          MetricValue: "1"
  AnalyticsDynamodbErrorsMetric:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: '{ $._logLevel = "error" }'
      LogGroupName: !Ref AnalyticsDynamodbLogGroup
      MetricTransformations:
        - MetricName: !Sub "analytics_dynamodb_errors_${EnvironmentTypeAbbreviation}"
          MetricNamespace: LogMetrics
          MetricValue: "1"
  AnalyticsDynamodbMissingAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[Analytics][DynamoDB][Missing] ${EnvironmentType}"
      AlarmActions:
        - !If [IsProduction, !Ref OpsErrorMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      InsufficientDataActions:
        - !If [IsProduction, !Ref OpsErrorMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      OKActions:
        - !If [IsProduction, !Ref OpsErrorMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      AlarmDescription: Missing DDB redirect-data on the analytics dynamodb function
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 5
      MetricName: !Sub "analytics_dynamodb_missing_${EnvironmentTypeAbbreviation}"
      Namespace: LogMetrics
      Period: 60
      Statistic: Sum
      Threshold: 100
      TreatMissingData: notBreaching
  AnalyticsDynamodbErrorsAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[Analytics][DynamoDB][LogErrors] ${EnvironmentType}"
      AlarmActions:
        - !If [IsProduction, !Ref OpsErrorMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      InsufficientDataActions:
        - !If [IsProduction, !Ref OpsErrorMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      OKActions:
        - !If [IsProduction, !Ref OpsErrorMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      AlarmDescription: Logged errors on the analytics dynamodb function
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 2
      MetricName: !Sub "analytics_dynamodb_errors_${EnvironmentTypeAbbreviation}"
      Namespace: LogMetrics
      Period: 60
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching
  # connect dynamodb impressions to kinesis
  AnalyticsDynamodbSubscriptionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: AnalyticsDynamodbSubscriptionKinesisPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "kinesis:DescribeStream"
                  - "kinesis:PutRecord"
                  - "kinesis:PutRecords"
                Resource:
                  - !Ref MetricsKinesisStreamArn
      Tags:
        - Key: Project
          Value: Dovetail
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
  AnalyticsDynamodbSubscriptionFilter:
    Type: "AWS::Logs::SubscriptionFilter"
    Properties:
      DestinationArn: !Ref MetricsKinesisStreamArn
      FilterPattern: "{$.msg = impression}"
      LogGroupName: !Ref AnalyticsDynamodbLogGroup
      RoleArn: !GetAtt AnalyticsDynamodbSubscriptionRole.Arn
  # pingbacks metrics
  AnalyticsPingbacksLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: !Sub "/aws/lambda/${PingbacksFunctionName}"
      RetentionInDays: 14
  AnalyticsPingbacksAdzerkMetric:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: '{ $.dest = "*.adzerk.net" }'
      LogGroupName: !Ref AnalyticsPingbacksLogGroup
      MetricTransformations:
        - MetricName: !Sub "analytics_pingbacks_adzerk_${EnvironmentTypeAbbreviation}"
          MetricNamespace: LogMetrics
          MetricValue: $.rows
  AnalyticsPingbacksOtherMetric:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: '{ $.dest != "*.adzerk.net" }'
      LogGroupName: !Ref AnalyticsPingbacksLogGroup
      MetricTransformations:
        - MetricName: !Sub "analytics_pingbacks_other_${EnvironmentTypeAbbreviation}"
          MetricNamespace: LogMetrics
          MetricValue: $.rows
  AnalyticsPingbacksFailMetric:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: '{ $.msg = "PINGFAIL*" }'
      LogGroupName: !Ref AnalyticsPingbacksLogGroup
      MetricTransformations:
        - MetricName: !Sub "analytics_pingbacks_fails_${EnvironmentTypeAbbreviation}"
          MetricNamespace: LogMetrics
          MetricValue: "1"
  AnalyticsPingbacksErrorsMetric:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: '{ $._logLevel = "error" }'
      LogGroupName: !Ref AnalyticsPingbacksLogGroup
      MetricTransformations:
        - MetricName: !Sub "analytics_pingbacks_errors_${EnvironmentTypeAbbreviation}"
          MetricNamespace: LogMetrics
          MetricValue: "1"
  AnalyticsPingbacksErrorsAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[Analytics][Pingbacks][LogErrors] ${EnvironmentType}"
      AlarmActions:
        - !If [IsProduction, !Ref OpsErrorMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      InsufficientDataActions:
        - !If [IsProduction, !Ref OpsErrorMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      OKActions:
        - !If [IsProduction, !Ref OpsErrorMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      AlarmDescription: Logged errors on the analytics pingbacks function
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      MetricName: !Sub "analytics_pingbacks_errors_${EnvironmentTypeAbbreviation}"
      Namespace: LogMetrics
      Period: 60
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching
  AnalyticsPingbacksAdzerkAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: IsProduction
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[Analytics][Pingbacks][Adzerk] ${EnvironmentType} Too Few"
      AlarmActions: [!Ref OpsFatalMessagesSnsTopicArn]
      InsufficientDataActions: [!Ref OpsFatalMessagesSnsTopicArn]
      OKActions: [!Ref OpsFatalMessagesSnsTopicArn]
      AlarmDescription: Adzerk pingback impressions dropped below threshold
      ComparisonOperator: LessThanThreshold
      EvaluationPeriods: 1
      MetricName: !Sub "analytics_pingbacks_adzerk_${EnvironmentTypeAbbreviation}"
      Namespace: LogMetrics
      Period: 300
      Statistic: Sum
      Threshold: 4000
      TreatMissingData: breaching
  # redis metrics
  AnalyticsRedisLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: !Sub "/aws/lambda/${RedisFunctionName}"
      RetentionInDays: 14
  AnalyticsRedisInsertsMetric:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: '{ $.dest = "redis*" }'
      LogGroupName: !Ref AnalyticsRedisLogGroup
      MetricTransformations:
        - MetricName: !Sub "analytics_redis_inserts_${EnvironmentTypeAbbreviation}"
          MetricNamespace: LogMetrics
          MetricValue: $.rows
  AnalyticsRedisErrorsMetric:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: '{ $._logLevel = "error" }'
      LogGroupName: !Ref AnalyticsRedisLogGroup
      MetricTransformations:
        - MetricName: !Sub "analytics_redis_errors_${EnvironmentTypeAbbreviation}"
          MetricNamespace: LogMetrics
          MetricValue: "1"
  AnalyticsRedisErrorsAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[Analytics][Redis][LogErrors] ${EnvironmentType}"
      AlarmActions:
        - !If [IsProduction, !Ref OpsErrorMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      InsufficientDataActions:
        - !If [IsProduction, !Ref OpsErrorMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      OKActions:
        - !If [IsProduction, !Ref OpsErrorMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      AlarmDescription: Logged errors on the analytics redis function
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      MetricName: !Sub "analytics_redis_errors_${EnvironmentTypeAbbreviation}"
      Namespace: LogMetrics
      Period: 300
      Statistic: Sum
      Threshold: 4
      TreatMissingData: notBreaching
