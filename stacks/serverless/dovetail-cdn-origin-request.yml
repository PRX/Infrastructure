# stacks/serverless/dovetail-cdn-origin-request.yml
AWSTemplateFormatVersion: "2010-09-09"
Description: Dovetail CDN Origin-Request Lambda
Conditions:
  IsProduction: !Equals [!Ref EnvironmentType, Production]
Parameters:
  CodeS3Bucket:
    Type: String
  CodeS3ObjectKey:
    Type: String
  EnvironmentType:
    Type: String
  ArrangerFunctionArn:
    Type: String
  ArrangerBucketArn:
    Type: String
Resources:
  DovetailCdnOriginRequestExecutionIAMRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
                - "edgelambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: LambdaEdgePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "lambda:GetFunction"
                  - "lambda:EnableReplication*"
                  - "iam:CreateServiceLinkedRole"
                Resource:
                  - "*"
        - PolicyName: ArrangerInvokePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "lambda:InvokeFunction"
                Resource:
                  # TODO: multiple region arrangers
                  - !Ref ArrangerFunctionArn
                  - Fn::If:
                      - IsProduction
                      - arn:aws:lambda:us-east-1:561178107736:function:infrastructure-cd-root-production-ArrangerFunction-ysoBl4aqx1rY
                      - arn:aws:lambda:us-east-1:561178107736:function:infrastructure-cd-root-staging-Ap-ArrangerFunction-sANzpZHSDRyd
        - PolicyName: ArrangerS3Policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                Resource:
                  # TODO: multiple region arrangers
                  - !Sub ${ArrangerBucketArn}/*
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Tags:
        - Key: Project
          Value: Dovetail
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
  DovetailCdnOriginRequestFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref CodeS3Bucket
        S3Key: !Ref CodeS3ObjectKey
      Description: Dovetail CDN Origin Request
      Handler: !If [IsProduction, index-production.handler, index-staging.handler]
      MemorySize: 256
      Role: !GetAtt DovetailCdnOriginRequestExecutionIAMRole.Arn
      Runtime: nodejs14.x
      Timeout: 30
      Tags:
        - Key: Project
          Value: Dovetail
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: Name
          Value: !Sub Dovetail-Cdn-OriginRequest-${EnvironmentType}
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
