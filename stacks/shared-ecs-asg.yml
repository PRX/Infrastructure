# stacks/shared-ecs-asg.yml
AWSTemplateFormatVersion: "2010-09-09"

Description: >- # TODO
  tktktk

Parameters:
  EnvironmentType:
    Type: String
  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: >-
      The EC2 key pair used for instances in the Auto Scaling
      group (region-specific)
  # EnvironmentTypeAbbreviation:
  #   Type: String
  VpcId:
    Type: AWS::EC2::VPC::Id
  VpcPublicSubnet1Id:
    Type: AWS::EC2::Subnet::Id
  VpcPublicSubnet2Id:
    Type: AWS::EC2::Subnet::Id
  VpcPublicSubnet3Id:
    Type: AWS::EC2::Subnet::Id
  EcsClusterName:
    Type: String

Conditions:
  IsProduction: !Equals [!Ref EnvironmentType, Production]

Resources:
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref InstanceRole
  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
      Policies:
        - PolicyName: DockerDiskUsagePolicy
          PolicyDocument:
            Statement:
              - Action: cloudwatch:PutMetricData
                Effect: Allow
                Resource: "*"
            Version: "2012-10-17"
        - PolicyName: ModifyCreditSpecificationPolicy
          PolicyDocument:
            Statement:
              - Action:
                  - ec2:ModifyInstanceCreditSpecification
                  - ec2:DescribeInstanceCreditSpecifications
                Effect: Allow
                Resource: "*"
            Version: "2012-10-17"
      Tags:
        - Key: Project
          Value: platform.prx.org
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId

  InboundNtpTrafficSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: !Sub >-
        Allows inbound NTP traffic to ${EnvironmentType} ECS ASG instances
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: udp
          FromPort: 123
          ToPort: 123
        - CidrIpv6: ::/0
          IpProtocol: udp
          FromPort: 123
          ToPort: 123
      Tags:
        - Key: Project
          Value: platform.prx.org
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: Name
          Value: !Sub Platform-${EnvironmentType}-ECS-instances-inbound # TODO
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId

  OutboundTrafficSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: !Sub >-
        Allows ALL outbound traffic from ${EnvironmentType} ECS ASG instances
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: "-1"
        - CidrIpv6: ::/0
          IpProtocol: "-1"
      Tags:
        - Key: Project
          Value: platform.prx.org
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: Name
          Value: !Sub Platform-${EnvironmentType}-ECS-instances-outbound # TODO
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId

  Ec2LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        BlockDeviceMappings: # TODO
          - DeviceName: /dev/xvda
            Ebs:
              DeleteOnTermination: true
              VolumeSize: 30
              VolumeType: gp3
          - DeviceName: /dev/xvdcz
            Ebs:
              DeleteOnTermination: true
              VolumeSize: !If
                - IsProduction
                - 80
                - 30
              VolumeType: gp3
        CreditSpecification:
          CpuCredits: unlimited
        IamInstanceProfile:
          Arn: !GetAtt InstanceProfile.Arn
        ImageId: ami-09a3cad575b7eabaa # TODO Make multi-region aware
        InstanceType: !If
          - IsProduction
          - t3a.medium
          - t3a.small
        KeyName: !Ref KeyPairName
        Monitoring:
          Enabled: false # Specifies whether detailed monitoring is enabled
        SecurityGroupIds:
          - !Ref OutboundTrafficSecurityGroup
          - !Ref InboundNtpTrafficSecurityGroup
        # TagSpecifications:
        # UserData:
      # TagSpecifications:
      #   - TagSpecification

  Asg:
    Type: AWS::AutoScaling::AutoScalingGroup
    # TODO  UpdatePolicy attribute
    Properties:
      Cooldown: "240"
      HealthCheckGracePeriod: 512
      HealthCheckType: EC2
      LaunchTemplate:
        LaunchTemplateId: !Ref Ec2LaunchTemplate
        Version: !GetAtt Ec2LaunchTemplate.LatestVersionNumber
      # LifecycleHookSpecificationList
      # MaxInstanceLifetime
      MaxSize: !If
        - IsProduction
        - "40"
        - "20"
      MetricsCollection:
        - Granularity: 1Minute
      MinSize: !If
        - IsProduction
        - "4"
        - "2"
      NewInstancesProtectedFromScaleIn: true
      # NotificationConfigurations
      Tags:
        - Key: Project
          Value: platform.prx.org # TODO
          PropagateAtLaunch: true
        - Key: Environment
          Value: !Ref EnvironmentType
          PropagateAtLaunch: true
        - Key: Name
          Value: tktktk # TODO
          PropagateAtLaunch: true
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
          PropagateAtLaunch: true
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
          PropagateAtLaunch: true
      # TODO TerminationPolicies
      VPCZoneIdentifier:
        - !Ref VpcPublicSubnet1Id
        - !Ref VpcPublicSubnet2Id
        - !Ref VpcPublicSubnet3Id

  DefaultCapacityProvider:
    Type: AWS::ECS::CapacityProvider
    Properties:
      AutoScalingGroupProvider:
        AutoScalingGroupArn: !Ref Asg
        ManagedScaling:
          MaximumScalingStepSize: 10
          MinimumScalingStepSize: 1
          Status: ENABLED
          TargetCapacity: 72
        ManagedTerminationProtection: ENABLED
      Tags:
        - Key: Project
          Value: platform.prx.org # TODO
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
  ClusterCapacityProviderAssociation:
    Type: AWS::ECS::ClusterCapacityProviderAssociations
    Properties:
      Cluster: !Ref EcsClusterName
      CapacityProviders:
        - !Ref DefaultCapacityProvider
      DefaultCapacityProviderStrategy:
        # With only one default capacity provider, the base and weight won't
        # factor into scheduling; everything will be even within the ASG
        - Base: 0
          Weight: 0
          CapacityProvider: !Ref DefaultCapacityProvider
