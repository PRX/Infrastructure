# stacks/shared-vpc/interface-endpoints.yml
AWSTemplateFormatVersion: "2010-09-09"

Description: Interface VPC endpoints

Parameters:
  EnvironmentType: { Type: String }
  VpcId: { Type: "AWS::EC2::VPC::Id" }
  PublicSubnet1Id: { Type: "AWS::EC2::Subnet::Id" }
  PublicSubnet2Id: { Type: "AWS::EC2::Subnet::Id" }
  PublicSubnet3Id: { Type: "AWS::EC2::Subnet::Id" }

#
# !!!! IMPORTANT !!!!
#
# When creating an interface endpoint with PrivateDnsEnabled turned on,
# ALL subnets that share a VPC and AZ with the subnets the interface endpoint
# has been added to will use the private DNS for that endpoint. Be sure that
# the Endpoints allow traffic from all subnets that are effected, or explicitly
# add all subnets to the Endpoints.

# https://docs.aws.amazon.com/vpc/latest/userguide/vpce-interface.html
Resources:
  EcsLaunchEndpointsAccessSecurityGroup:
    # This security group is intented to be used by EC2 instances, ECS
    # services, etc. Resources that belong to this group will be able to send
    # traffic to the services needed to launch tasks in ECS.
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub >-
        Allows outbound HTTPS traffic to flow to VPC Endpoints required for
        launching ECS tasks and services in ${EnvironmentType}
      SecurityGroupEgress:
        - DestinationSecurityGroupId: !GetAtt EcsLaunchEndpointsInboundTrafficSecurityGroup.GroupId
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      Tags:
        - Key: Project
          Value: platform.prx.org # TODO
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: Name
          Value: !Sub Platform-${EnvironmentType}-LB-web_ssh # TODO
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
      VpcId: !Ref VpcId

  EcsLaunchEndpointsInboundTrafficSecurityGroup:
    # https://docs.aws.amazon.com/AmazonECS/latest/developerguide/vpc-endpoints.html#ecs-vpc-endpoint-considerations
    # This security group should be added to any VPC Endpoints that are
    # necessary when launching ECS tasks and services in an environment that
    # does not have internet access, such as private subnets and Fargate. This
    # includes services like ECR, ECS, CloudWatch Logs, and S3.
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub >-
        Allows HTTPS traffic from the EcsLaunchEndpointsAccessSecurityGroup
        to flow into VPC Endpoints for AWS services required for launching ECS
        tasks and services in ${EnvironmentType}
      Tags:
        - Key: Project
          Value: Porter # TODO
        - Key: Name
          Value: !Sub ${AWS::StackName}-EcsEndpointsSecurityGroup # TODO
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
      VpcId: !Ref VpcId
  EcsLaunchEndpointsInboundTrafficSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      FromPort: 443
      GroupId: !GetAtt EcsLaunchEndpointsInboundTrafficSecurityGroup.GroupId
      IpProtocol: tcp
      SourceSecurityGroupId: !GetAtt EcsLaunchEndpointsAccessSecurityGroup.GroupId
      ToPort: 443

  EcrDockerVpcEndpoint:
    # https://docs.aws.amazon.com/AmazonECR/latest/userguide/vpc-endpoints.html#ecr-vpc-endpoint-considerations
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EcsLaunchEndpointsInboundTrafficSecurityGroup
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ecr.dkr
      SubnetIds:
        - !Ref PublicSubnet1Id
        - !Ref PublicSubnet2Id
        - !Ref PublicSubnet3Id
      VpcEndpointType: Interface
      VpcId: !Ref VpcId
  EcrApiVpcEndpoint:
    # https://docs.aws.amazon.com/AmazonECR/latest/userguide/vpc-endpoints.html#ecr-vpc-endpoint-considerations
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EcsLaunchEndpointsInboundTrafficSecurityGroup
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ecr.api
      SubnetIds:
        - !Ref PublicSubnet1Id
        - !Ref PublicSubnet2Id
        - !Ref PublicSubnet3Id
      VpcEndpointType: Interface
      VpcId: !Ref VpcId

  EcsAgentVpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EcsLaunchEndpointsInboundTrafficSecurityGroup
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ecs-agent
      SubnetIds:
        - !Ref PublicSubnet1Id
        - !Ref PublicSubnet2Id
        - !Ref PublicSubnet3Id
      VpcEndpointType: Interface
      VpcId: !Ref VpcId
  EcsTelemetryVpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EcsLaunchEndpointsInboundTrafficSecurityGroup
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ecs-telemetry
      SubnetIds:
        - !Ref PublicSubnet1Id
        - !Ref PublicSubnet2Id
        - !Ref PublicSubnet3Id
      VpcEndpointType: Interface
      VpcId: !Ref VpcId
  EcsVpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EcsLaunchEndpointsInboundTrafficSecurityGroup
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ecs
      SubnetIds:
        - !Ref PublicSubnet1Id
        - !Ref PublicSubnet2Id
        - !Ref PublicSubnet3Id
      VpcEndpointType: Interface
      VpcId: !Ref VpcId

  CloudWatchLogsVpcEndpoint:
    # https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/cloudwatch-logs-and-interface-VPC.html#create-VPC-endpoint-for-CloudWatchLogs
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EcsLaunchEndpointsInboundTrafficSecurityGroup
      ServiceName: !Sub com.amazonaws.${AWS::Region}.logs
      SubnetIds:
        - !Ref PublicSubnet1Id
        - !Ref PublicSubnet2Id
        - !Ref PublicSubnet3Id
      VpcEndpointType: Interface
      VpcId: !Ref VpcId

Outputs:
  EcsLaunchEndpointsAccessSecurityGroupId:
    Value: !GetAtt EcsLaunchEndpointsAccessSecurityGroup.GroupId
