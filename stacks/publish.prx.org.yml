# stacks/publish.prx.org.yml
AWSTemplateFormatVersion: "2010-09-09"
Description: publish.prx.org application running in Docker
Mappings:
  Shared:
    Project:
      name: publish.prx.org
    Container:
      name: publish-express
Conditions:
  CreateStagingResources: !Equals [!Ref EnvironmentType, Staging]
  CreateProductionResources: !Equals [!Ref EnvironmentType, Production]
Parameters:
  # VPC ########################################################################
  VPC:
    Type: "AWS::EC2::VPC::Id"
  # Load Balancer ##############################################################
  PlatformALBDNSName:
    Type: String
  PlatformALBFullName:
    Type: String
  PlatformALBCanonicalHostedZoneID:
    Type: String
  PlatformALBHTTPListenerArn:
    Type: String
  PlatformALBHTTPSListenerArn:
    Type: String
  PlatformALBListenerPriorityPrefix:
    Type: String
  # ECS Cluster ################################################################
  ECSCluster:
    Type: String
  ECSServiceAutoscaleIAMRoleArn:
    Type: String
  ECSServiceIAMRole:
    Type: String
  # Misc #######################################################################
  OpsDebugMessagesSnsTopicArn:
    Type: String
  OpsErrorMessagesSnsTopicArn:
    Type: String
  EnvironmentType:
    Type: String
  EnvironmentTypeAbbreviation:
    Type: String
  EcrRegion:
    Type: String
  SecretsBase:
    Type: String
  ContainerMemory:
    Type: String
  ContainerCpu:
    Type: String
  # Shared ENV #################################################################
  # Publish ECS ################################################################
  PublishEcrImageTag:
    Type: String
  # Publish ENV ################################################################
  PublishSecretsVersion:
    Type: String
Resources:
  PublishLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      RetentionInDays: 14
  PublishALBTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      HealthCheckIntervalSeconds: 15
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      UnhealthyThresholdCount: 3
      HealthCheckPath: /
      Name: !Sub publish-${EnvironmentTypeAbbreviation}-${VPC}
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: "15"
      Tags:
        - Key: Project
          Value: !FindInMap [Shared, Project, name]
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: Name
          Value: !Sub Publish-${EnvironmentType}
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
      VpcId: !Ref VPC
  # ALB Listener Rules
  PublishALBHTTPSHostWildcardListenerRule:
    Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
    Properties:
      Actions:
        - TargetGroupArn: !Ref PublishALBTargetGroup
          Type: forward
      Conditions:
        - Field: host-header
          Values:
            - publish.*
      ListenerArn: !Ref PlatformALBHTTPSListenerArn
      Priority: !Join ["", [!Ref PlatformALBListenerPriorityPrefix, "00"]]
  PublishALBHTTPHostWildcardListenerRule:
    Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
    Properties:
      Actions:
        - TargetGroupArn: !Ref PublishALBTargetGroup
          Type: forward
      Conditions:
        - Field: host-header
          Values:
            - publish.*
      ListenerArn: !Ref PlatformALBHTTPListenerArn
      Priority: !Join ["", [!Ref PlatformALBListenerPriorityPrefix, "00"]]
  # ECS Service
  PublishTaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      ContainerDefinitions:
        - Cpu: !Ref ContainerCpu
          Environment:
            - Name: APP_NAME
              Value: "publish"
            - Name: APP_ENV
              Value: !Ref EnvironmentTypeAbbreviation
            - Name: AWS_SECRETS_BASE
              Value: !Ref SecretsBase
            - Name: AWS_SECRETS_VERSION
              Value: !Ref PublishSecretsVersion
            - Name: AWS_DEFAULT_REGION
              Value: !Ref AWS::Region
            - Name: UPLOAD_S3_ENDPOINT_HOST
              Value: !Sub ${PublishUploadsBucket}.s3-accelerate.dualstack.amazonaws.com
            - Name: UPLOAD_BUCKET_NAME
              Value: !Ref PublishUploadsBucket
            - Name: UPLOAD_PUBLIC_ACCESS_HOST
              Value: !GetAtt PublishUploadsCloudFrontDistribution.DomainName
          Essential: true
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${EcrRegion}.amazonaws.com/publish.prx.org:${PublishEcrImageTag}
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref PublishLogGroup
              awslogs-region: !Ref AWS::Region
          Memory: !Ref ContainerMemory
          Name: !FindInMap [Shared, Container, name]
          PortMappings:
            - HostPort: 0
              ContainerPort: 4200
      Tags:
        - Key: Project
          Value: !FindInMap [Shared, Project, name]
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
  PublishService:
    Type: "AWS::ECS::Service"
    Properties:
      Cluster: !Ref ECSCluster
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 2
      LoadBalancers:
        - ContainerName: !FindInMap [Shared, Container, name]
          ContainerPort: 4200
          TargetGroupArn: !Ref PublishALBTargetGroup
      Role: !Ref ECSServiceIAMRole
      Tags:
        - Key: Project
          Value: !FindInMap [Shared, Project, name]
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
      TaskDefinition: !Ref PublishTaskDefinition
  PublishWebRecordSetGroup:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      Comment: Record sets for dualstack web traffic to an publish instance
      HostedZoneName: prx.tech.
      RecordSets:
        - Type: AAAA
          Name: !Sub publish.${EnvironmentTypeAbbreviation}-${VPC}.prx.tech.
          AliasTarget:
            DNSName: !Ref PlatformALBDNSName
            HostedZoneId: !Ref PlatformALBCanonicalHostedZoneID
        - Type: A
          Name: !Sub publish.${EnvironmentTypeAbbreviation}-${VPC}.prx.tech.
          AliasTarget:
            DNSName: !Ref PlatformALBDNSName
            HostedZoneId: !Ref PlatformALBCanonicalHostedZoneID
  # CloudWatch Alarms
  PublishALBTargetGroup500Alarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CreateProductionResources
    Properties:
      ActionsEnabled: true
      AlarmName: "[Publish][ALB][Error] Target 5XX"
      AlarmActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      InsufficientDataActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      OKActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      AlarmDescription: >
        5XX server errors originating from the publish target group exceeded 0
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      MetricName: HTTPCode_Target_5XX_Count
      Namespace: AWS/ApplicationELB
      Period: 60
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching
      Dimensions:
        - Name: LoadBalancer
          Value: !Ref PlatformALBFullName
        - Name: TargetGroup
          Value: !GetAtt PublishALBTargetGroup.TargetGroupFullName
  # Upload bucket
  PublishUploadsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      AccelerateConfiguration:
        AccelerationStatus: Enabled
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - POST
              - PUT
            AllowedOrigins:
              - "*"
            ExposedHeaders:
              - ETag
              - Content-Type
              - Content-Length
              - Date
            MaxAge: 3000
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 3
            Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Project
          Value: !FindInMap [Shared, Project, name]
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
  PublishUploadsCloudFrontCachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties:
      CachePolicyConfig:
        Comment: !Sub Policy for ${AWS::StackName}
        DefaultTTL: 86400
        MaxTTL: 31536000
        MinTTL: 0
        Name: !Sub ${AWS::StackName}-CachePolicy
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: none
          EnableAcceptEncodingBrotli: true
          EnableAcceptEncodingGzip: true
          HeadersConfig:
            HeaderBehavior: none
          QueryStringsConfig:
            QueryStringBehavior: none
  PublishUploadsCloudFrontOriginRequestPolicy:
    Type: AWS::CloudFront::OriginRequestPolicy
    Properties:
      OriginRequestPolicyConfig:
        Comment: !Sub Policy for ${AWS::StackName}
        CookiesConfig:
          CookieBehavior: none
        HeadersConfig:
          HeaderBehavior: none
        Name: !Sub ${AWS::StackName}-OriginRequestPolicy
        QueryStringsConfig:
          QueryStringBehavior: none
  PublishUploadsCloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: !Sub Publish uploads ${AWS::StackName}
        DefaultCacheBehavior:
          AllowedMethods:
            - HEAD
            - GET
          CachedMethods:
            - HEAD
            - GET
          CachePolicyId: !Ref PublishUploadsCloudFrontCachePolicy
          Compress: true
          OriginRequestPolicyId: !Ref PublishUploadsCloudFrontOriginRequestPolicy
          TargetOriginId: !FindInMap [Shared, Project, name]
          ViewerProtocolPolicy : redirect-to-https
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Origins:
          - DomainName: !GetAtt PublishUploadsBucket.RegionalDomainName
            Id: !FindInMap [Shared, Project, name]
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${PublishUploadsCloudFrontOriginAccessIdentity}
        PriceClass: PriceClass_All
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
  PublishUploadsCloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub Publish uploads ${AWS::StackName}
  DeployBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref PublishUploadsBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${PublishUploadsCloudFrontOriginAccessIdentity}
            Resource: !Sub arn:aws:s3:::${PublishUploadsBucket}/*
            Sid: Grant read access to a CloudFront Origin Identity
Outputs:
  HostedZoneDNSName:
    Description: Convenience domain name for the ALB in a hosted zone
    Value: !Sub |
      publish.${EnvironmentTypeAbbreviation}-${VPC}.prx.tech.
