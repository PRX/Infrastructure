# stacks/container-apps/web-application.yml
AWSTemplateFormatVersion: "2010-09-09"
Description: >-
  Docker web application with optional worker, using the shared platform ALB

Conditions:
  CreateWorkerResources: !Equals [!Ref CreateWorker, true]
  CreateProductionResources: !Equals [!Ref EnvironmentType, Production]
  HasMemoryReservation: !Not [!Equals [!Ref ContainerMemoryReservation, ""]]
  HasAltName: !Not [!Equals [!Ref AltName, ""]]
  HasExplicitHostHeader: !Not [!Equals [!Ref ExplicitHostHeader, ""]]

Parameters:
  UploadSigningEndpointUrl:
    Type: String
  UploadSigningAccessKeyId:
    Type: String
  AmazonSesSmtpCredentialsGeneratorServiceToken:
    Type: String
  # VPC ########################################################################
  VPC:
    Type: "AWS::EC2::VPC::Id"
  # Load Balancer ##############################################################
  PlatformALBDNSName:
    Type: String
  PlatformALBFullName:
    Type: String
  PlatformALBCanonicalHostedZoneID:
    Type: String
  PlatformALBHTTPListenerArn:
    Type: String
  PlatformALBHTTPSListenerArn:
    Type: String
  PlatformALBListenerPriorityPrefix:
    Type: String
  # ECS Cluster ################################################################
  ECSCluster:
    Type: String
  ECSServiceAutoscaleIAMRoleArn:
    Type: String
  ECSServiceIAMRole:
    Type: String
  # Misc #######################################################################
  SharedMemcachedEndpointAddress:
    Type: String
  SharedMemcachedEndpointPort:
    Type: String
  OpsWarnMessagesSnsTopicArn:
    Type: String
  OpsErrorMessagesSnsTopicArn:
    Type: String
  OpsFatalMessagesSnsTopicArn:
    Type: String
  EnvironmentType:
    Type: String
  EnvironmentTypeAbbreviation:
    Type: String
  SecretsBase:
    Type: String
  EcrRegion:
    Type: String
  EcrImageTag:
    Type: String
  CreateWorker:
    Type: String
  DesiredWebs:
    Type: String
    Default: 2
  DesiredWorkers:
    Type: String
    Default: 1
  DesiredWebsProduction:
    Type: String
    Default: 2
  DesiredWorkersProduction:
    Type: String
    Default: 1
  ErrorAlarmThreshold:
    Type: String
    Default: 0
  # App ENV #################################################################
  AppName:
    Type: String # castle, crier, cms, feeder
  AltName:
    Type: String
    Default: ""
  ExplicitHostHeader:
    Type: String
    Default: ""
  SecretsVersion:
    Type: String
  ContainerPort:
    Type: String
    Default: 3000
  ContainerMemory:
    Type: String
    Default: 500
  ContainerMemoryReservation:
    Type: String
    Default: ""
  ContainerCpu:
    Type: String
    Default: 128
  WebContainerCommand:
    Type: String
    Default: web
  HealthCheckPath:
    Type: String
    Default: /api/v1

Mappings:
  EnvironmentTypeMap:
    Staging:
      WorkerMinCount: 1
      WorkerMaxCount: 4
    Production:
      WorkerMinCount: 2
      WorkerMaxCount: 20

Resources:
  ALBTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      HealthCheckIntervalSeconds: 15
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      UnhealthyThresholdCount: 3
      HealthCheckPath: !Ref HealthCheckPath
      Name: !Sub ${AppName}-${EnvironmentTypeAbbreviation}
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: "30"
      Tags:
        - Key: Project
          Value: !Ref AppName
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: Name
          Value: !Sub ${AppName}-${EnvironmentType}
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
      VpcId: !Ref VPC
  # ALB Listener Rules
  ALBHTTPSHostWildcardListenerRule:
    Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
    Properties:
      Actions:
        - TargetGroupArn: !Ref ALBTargetGroup
          Type: forward
      Conditions:
        - Field: host-header
          Values:
            - !Sub ${AppName}.*
      ListenerArn: !Ref PlatformALBHTTPSListenerArn
      Priority: !Join ["", [!Ref PlatformALBListenerPriorityPrefix, "00"]]
  ALBHTTPHostWildcardListenerRule:
    Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
    Properties:
      Actions:
        - TargetGroupArn: !Ref ALBTargetGroup
          Type: forward
      Conditions:
        - Field: host-header
          Values:
            - !Sub ${AppName}.*
      ListenerArn: !Ref PlatformALBHTTPListenerArn
      Priority: !Join ["", [!Ref PlatformALBListenerPriorityPrefix, "00"]]
  ALBHTTPSAlternateWildcardListenerRule:
    Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
    Condition: HasAltName
    Properties:
      Actions:
        - TargetGroupArn: !Ref ALBTargetGroup
          Type: forward
      Conditions:
        - Field: host-header
          Values:
            - !Sub ${AltName}.*
      ListenerArn: !Ref PlatformALBHTTPSListenerArn
      Priority: !Join ["", [!Ref PlatformALBListenerPriorityPrefix, "01"]]
  ALBHTTPAlternateWildcardListenerRule:
    Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
    Condition: HasAltName
    Properties:
      Actions:
        - TargetGroupArn: !Ref ALBTargetGroup
          Type: forward
      Conditions:
        - Field: host-header
          Values:
            - !Sub ${AltName}.*
      ListenerArn: !Ref PlatformALBHTTPListenerArn
      Priority: !Join ["", [!Ref PlatformALBListenerPriorityPrefix, "01"]]
  ALBHTTPSExplicitListenerRule:
    Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
    Condition: HasExplicitHostHeader
    Properties:
      Actions:
        - TargetGroupArn: !Ref ALBTargetGroup
          Type: forward
      Conditions:
        - Field: host-header
          Values:
            - !Ref ExplicitHostHeader
      ListenerArn: !Ref PlatformALBHTTPSListenerArn
      Priority: !Join ["", [!Ref PlatformALBListenerPriorityPrefix, "10"]]
  ALBHTTPExplicitListenerRule:
    Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
    Condition: HasExplicitHostHeader
    Properties:
      Actions:
        - TargetGroupArn: !Ref ALBTargetGroup
          Type: forward
      Conditions:
        - Field: host-header
          Values:
            - !Ref ExplicitHostHeader
      ListenerArn: !Ref PlatformALBHTTPListenerArn
      Priority: !Join ["", [!Ref PlatformALBListenerPriorityPrefix, "10"]]
  # CloudWatch Alarms
  ALBTargetGroup500Alarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CreateProductionResources
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[${AppName}][ALB][Error] Target 5XX"
      AlarmActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      InsufficientDataActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      OKActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      AlarmDescription: !Sub |
        5XX server errors originating from the ${AppName} target group exceeded 0
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      MetricName: HTTPCode_Target_5XX_Count
      Namespace: AWS/ApplicationELB
      Period: 60
      Statistic: Sum
      Threshold: !Ref ErrorAlarmThreshold
      TreatMissingData: notBreaching
      Dimensions:
        - Name: LoadBalancer
          Value: !Ref PlatformALBFullName
        - Name: TargetGroup
          Value: !GetAtt ALBTargetGroup.TargetGroupFullName
  # ECS Service - Web
  WebLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      RetentionInDays: 14
  WebTaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      ContainerDefinitions:
        - Cpu: !Ref ContainerCpu
          Environment:
            - Name: APP_NAME
              Value: !Ref AppName
            - Name: APP_ENV
              Value: !Ref EnvironmentTypeAbbreviation
            - Name: AWS_SECRETS_BASE
              Value: !Ref SecretsBase
            - Name: AWS_SECRETS_VERSION
              Value: !Ref SecretsVersion
            - Name: AWS_DEFAULT_REGION
              Value: !Ref AWS::Region
            - Name: AWS_SIGNER_URL
              Value: !Ref UploadSigningEndpointUrl
            - Name: AWS_SIGNER_KEY
              Value: !Ref UploadSigningAccessKeyId
            - Name: MEMCACHED_PORT_11211_TCP_ADDR
              Value: !Ref SharedMemcachedEndpointAddress
            - Name: MEMCACHED_PORT_11211_TCP_PORT
              Value: !Ref SharedMemcachedEndpointPort
            - Name: SMTP_ADDRESS
              Value: !Sub email-smtp.${AWS::Region}.amazonaws.com
            - Name: SMTP_AUTHENTICATION
              Value: login
            - Name: SMTP_PORT
              Value: "587"
            - Name: SMTP_DOMAIN
              Value: prx.org
            - Name: SMTP_USER_NAME
              Value: !GetAtt SesSendingSmtpCredentials.UserName
            - Name: SMTP_PASSWORD
              Value: !GetAtt SesSendingSmtpCredentials.Password
          Essential: true
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${EcrRegion}.amazonaws.com/${AppName}.prx.org:${EcrImageTag}
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref WebLogGroup
              awslogs-region: !Ref AWS::Region
          Memory: !Ref ContainerMemory
          MemoryReservation: !If [HasMemoryReservation, !Ref ContainerMemoryReservation, !Ref "AWS::NoValue"]
          Name: !Sub ${AppName}-web
          PortMappings:
            - HostPort: 0
              ContainerPort: !Ref ContainerPort
          Command:
            - !Ref WebContainerCommand
      Tags:
        - Key: Project
          Value: !Ref AppName
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
  WebService:
    Type: "AWS::ECS::Service"
    Properties:
      Cluster: !Ref ECSCluster
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: !If [CreateProductionResources, !Ref DesiredWebsProduction, !Ref DesiredWebs]
      LoadBalancers:
        - ContainerName: !Sub ${AppName}-web
          ContainerPort: !Ref ContainerPort
          TargetGroupArn: !Ref ALBTargetGroup
      Role: !Ref ECSServiceIAMRole
      Tags:
        - Key: Project
          Value: !Ref AppName
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
      TaskDefinition: !Ref WebTaskDefinition
  # Route 53
  WebRecordSetGroup:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      Comment: Record sets for dualstack web traffic to a web app instance
      HostedZoneName: prx.tech.
      RecordSets:
        - Type: AAAA
          Name: !Sub ${AppName}.${EnvironmentTypeAbbreviation}-${VPC}.prx.tech.
          AliasTarget:
            DNSName: !Ref PlatformALBDNSName
            HostedZoneId: !Ref PlatformALBCanonicalHostedZoneID
        - Type: A
          Name: !Sub ${AppName}.${EnvironmentTypeAbbreviation}-${VPC}.prx.tech.
          AliasTarget:
            DNSName: !Ref PlatformALBDNSName
            HostedZoneId: !Ref PlatformALBCanonicalHostedZoneID
  # ECS Service - Worker
  WorkerLogGroup:
    Condition: CreateWorkerResources
    Type: "AWS::Logs::LogGroup"
    Properties:
      RetentionInDays: 14
  WorkerTaskDefinition:
    Condition: CreateWorkerResources
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      ContainerDefinitions:
        - Cpu: !Ref ContainerCpu
          Environment:
            - Name: APP_NAME
              Value: !Ref AppName
            - Name: APP_ENV
              Value: !Ref EnvironmentTypeAbbreviation
            - Name: AWS_SECRETS_BASE
              Value: !Ref SecretsBase
            - Name: AWS_SECRETS_VERSION
              Value: !Ref SecretsVersion
            - Name: AWS_DEFAULT_REGION
              Value: !Ref AWS::Region
            - Name: AWS_SIGNER_URL
              Value: !Ref UploadSigningEndpointUrl
            - Name: AWS_SIGNER_KEY
              Value: !Ref UploadSigningAccessKeyId
            - Name: MEMCACHED_PORT_11211_TCP_ADDR
              Value: !Ref SharedMemcachedEndpointAddress
            - Name: MEMCACHED_PORT_11211_TCP_PORT
              Value: !Ref SharedMemcachedEndpointPort
            - Name: SMTP_ADDRESS
              Value: !Sub email-smtp.${AWS::Region}.amazonaws.com
            - Name: SMTP_AUTHENTICATION
              Value: login
            - Name: SMTP_PORT
              Value: "587"
            - Name: SMTP_DOMAIN
              Value: prx.org
            - Name: SMTP_USER_NAME
              Value: !GetAtt SesSendingSmtpCredentials.UserName
            - Name: SMTP_PASSWORD
              Value: !GetAtt SesSendingSmtpCredentials.Password
          Essential: true
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${EcrRegion}.amazonaws.com/${AppName}.prx.org:${EcrImageTag}
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref WorkerLogGroup
              awslogs-region: !Ref AWS::Region
          Memory: !Ref ContainerMemory
          MemoryReservation: !If [HasMemoryReservation, !Ref ContainerMemoryReservation, !Ref "AWS::NoValue"]
          Name: !Sub ${AppName}-worker
          Command:
            - worker
      Tags:
        - Key: Project
          Value: !Ref AppName
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
  WorkerService:
    Condition: CreateWorkerResources
    Type: "AWS::ECS::Service"
    Properties:
      Cluster: !Ref ECSCluster
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: !If [CreateProductionResources, !Ref DesiredWorkersProduction, !Ref DesiredWorkers]
      Tags:
        - Key: Project
          Value: !Ref AppName
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
      TaskDefinition: !Ref WorkerTaskDefinition

  SesSendingUser:
    Type: AWS::IAM::User
    Properties:
      Tags:
        - Key: Project
          Value: !Ref AppName
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
  SesSendingAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref SesSendingUser
  SesSendingPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ses:SendRawEmail
            Effect: Allow
            Resource:
              - "*"
        Version: "2012-10-17"
      PolicyName: SesSendingPolicy
      Users:
        - !Ref SesSendingUser
  SesSendingSmtpCredentials:
    Type: Custom::AmazonSesSmtpPasswordGenerator
    Properties:
      ServiceToken: !Ref AmazonSesSmtpCredentialsGeneratorServiceToken
      AccessKeyId: !Ref SesSendingAccessKey
      SecretAccessKey: !GetAtt SesSendingAccessKey.SecretAccessKey
      Region: !Ref AWS::Region
  # exchange worker autoscaling
  ExchangeAutoScalingIamRole:
    Type: AWS::IAM::Role
    Condition: CreateWorkerResources
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - application-autoscaling.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceAutoscaleRole
  ExchangeWorkerAutoScaling:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Condition: CreateWorkerResources
    Properties:
      MinCapacity: !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, WorkerMinCount]
      MaxCapacity: !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, WorkerMaxCount]
      ResourceId: !Join ["/", ["service", !Ref ECSCluster, !GetAtt WorkerService.Name]]
      RoleARN: !GetAtt ExchangeAutoScalingIamRole.Arn
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs
  ExchangeWorkerAutoScalingInPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: CreateWorkerResources
    Properties:
      PolicyName: ScaleIn
      PolicyType: StepScaling
      ScalingTargetId: !Ref ExchangeWorkerAutoScaling
      StepScalingPolicyConfiguration:
        AdjustmentType: ChangeInCapacity
        Cooldown: 60
        MetricAggregationType: Average
        StepAdjustments:
          - MetricIntervalLowerBound: -9
            MetricIntervalUpperBound: 0
            ScalingAdjustment: -1
          - MetricIntervalUpperBound: -9
            ScalingAdjustment: -2
  ExchangeWorkerAutoScalingScaleInAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateWorkerResources
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[Exchange][Worker][AS:In] ${EnvironmentType} Scale In"
      AlarmActions:
        - !Ref ExchangeWorkerAutoScalingInPolicy
      AlarmDescription: Scale in exchange workers
      ComparisonOperator: LessThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Period: 60
      Statistic: Average
      Threshold: 10
      TreatMissingData: notBreaching
      Dimensions:
        - Name: QueueName
          Value: !Sub Prx3${EnvironmentType}DeliveryUpdate
  ExchangeWorkerAutoScalingOutPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: CreateWorkerResources
    Properties:
      PolicyName: ScaleOut
      PolicyType: StepScaling
      ScalingTargetId: !Ref ExchangeWorkerAutoScaling
      StepScalingPolicyConfiguration:
        AdjustmentType: ChangeInCapacity
        Cooldown: 120
        MetricAggregationType: Average
        StepAdjustments:
          - MetricIntervalLowerBound: 0
            MetricIntervalUpperBound: 80
            ScalingAdjustment: 2
          - MetricIntervalLowerBound: 80
            MetricIntervalUpperBound: 380
            ScalingAdjustment: 4
          - MetricIntervalLowerBound: 380
            ScalingAdjustment: 6
  ExchangeWorkerAutoScalingScaleOutAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateWorkerResources
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[Exchange][Worker][AS:Out] ${EnvironmentType} Scale Out"
      AlarmActions:
        - !Ref ExchangeWorkerAutoScalingOutPolicy
      AlarmDescription: Scale out exchange workers
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Period: 60
      Statistic: Average
      Threshold: 20
      TreatMissingData: notBreaching
      Dimensions:
        - Name: QueueName
          Value: !Sub Prx3${EnvironmentType}DeliveryUpdate
  # exchange/fixer queue depth alarms
  ExchangeDeliveryUpdateAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateWorkerResources
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[Exchange][Worker][SQS] ${EnvironmentType} Deliveries Not Processing"
      AlarmActions:
        - !If [CreateProductionResources, !Ref OpsFatalMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      InsufficientDataActions:
        - !If [CreateProductionResources, !Ref OpsFatalMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      OKActions:
        - !If [CreateProductionResources, !Ref OpsFatalMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      AlarmDescription: Deliveries are very behind
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 12
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Period: 300
      Statistic: Average
      Threshold: 100
      TreatMissingData: notBreaching
      Dimensions:
        - Name: QueueName
          Value: !Sub Prx3${EnvironmentType}DeliveryUpdate
  ExchangeSayWhenAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateWorkerResources
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[Exchange][Worker][SQS] ${EnvironmentType} SayWhen Not Processing"
      AlarmActions:
        - !If [CreateProductionResources, !Ref OpsFatalMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      InsufficientDataActions:
        - !If [CreateProductionResources, !Ref OpsFatalMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      OKActions:
        - !If [CreateProductionResources, !Ref OpsFatalMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      AlarmDescription: SayWhen is very behind
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 12
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Period: 300
      Statistic: Average
      Threshold: 50
      TreatMissingData: notBreaching
      Dimensions:
        - Name: QueueName
          Value: !Sub Prx3${EnvironmentType}SayWhen
  SayWhenWorkerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
  SayWhenWorkerTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Cpu: !Ref ContainerCpu
          Environment:
            - Name: APP_NAME
              Value: !Ref AppName
            - Name: APP_ENV
              Value: !Ref EnvironmentTypeAbbreviation
            - Name: AWS_SECRETS_BASE
              Value: !Ref SecretsBase
            - Name: AWS_SECRETS_VERSION
              Value: !Ref SecretsVersion
            - Name: AWS_DEFAULT_REGION
              Value: !Ref AWS::Region
            - Name: SAY_WHEN_THREAD
              Value: "true"
            - Name: MEMCACHED_PORT_11211_TCP_ADDR
              Value: !Ref SharedMemcachedEndpointAddress
            - Name: MEMCACHED_PORT_11211_TCP_PORT
              Value: !Ref SharedMemcachedEndpointPort
          Essential: true
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${EcrRegion}.amazonaws.com/${AppName}.prx.org:${EcrImageTag}
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref SayWhenWorkerLogGroup
              awslogs-region: !Ref AWS::Region
          Memory: !Ref ContainerMemory
          MemoryReservation: !If [HasMemoryReservation, !Ref ContainerMemoryReservation, !Ref "AWS::NoValue"]
          Name: !Sub ${AppName}-saywhen-worker
          Command:
            - worker
      Tags:
        - Key: Project
          Value: !Ref AppName
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
  SayWhenWorkerService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      Tags:
        - Key: Project
          Value: !Ref AppName
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
      TaskDefinition: !Ref SayWhenWorkerTaskDefinition

Outputs:
  WorkerTaskDefinitionArn:
    Description: Arn for the worker task definition
    Value: !If [CreateWorkerResources, !Ref WorkerTaskDefinition, ""]
  WorkerTaskDefinitionName:
    Description: Name of the worker task definition
    Value: !Sub ${AppName}-worker
  WorkerServiceName:
    Description: Name of the worker service
    Value: !If [CreateWorkerResources, !GetAtt WorkerService.Name, ""]
  WorkerLogGroupName:
    Description: Name of the worker log group
    Value: !If [CreateWorkerResources, !Ref WorkerLogGroup, ""]
  HostedZoneDNSName:
    Description: Convenience domain name for the ALB in a hosted zone
    Value: !Sub |
      ${AppName}.${EnvironmentTypeAbbreviation}-${VPC}.prx.tech.
