# stacks/dovetail.prx.org.yml
AWSTemplateFormatVersion: "2010-09-09"
Description: dovetail.prx.org application running in Docker
Conditions:
  CreateProductionResources: !Equals [!Ref EnvironmentType, Production]
  IsProduction: !Equals [!Ref EnvironmentType, Production]
Parameters:
  # VPC ########################################################################
  VPC:
    Type: "AWS::EC2::VPC::Id"
  VPCSubnet1:
    Type: "AWS::EC2::Subnet::Id"
  VPCSubnet2:
    Type: "AWS::EC2::Subnet::Id"
  VPCSubnet3:
    Type: "AWS::EC2::Subnet::Id"
  VPCCertificateArn:
    Type: String
  # ECS Cluster ################################################################
  ECSCluster:
    Type: String
  ECSServiceIAMRole:
    Type: String
  # Misc #######################################################################
  OpsWarnMessagesSnsTopicArn:
    Type: String
  OpsErrorMessagesSnsTopicArn:
    Type: String
  EnvironmentType:
    Type: String
  EnvironmentTypeAbbreviation:
    Type: String
  EcrRegion:
    Type: String
  SecretsBase:
    Type: String
  ContainerMemory:
    Type: String
  ContainerMemoryReservation:
    Type: String
  ContainerCpu:
    Type: String
  NewRelicApiKeyPrxLite: { Type: String }
  CloudWatchLogGroupTaggerServiceToken: { Type: String }
  # Dovetail ###################################################################
  DovetailEcrImageTag:
    Type: String
  DovetailSecretsVersion:
    Type: String
  MetricsKinesisStream:
    Type: AWS::SSM::Parameter::Value<String>
  DynamodbKinesisStream:
    Type: AWS::SSM::Parameter::Value<String>
  # Dovetail Elixir ############################################################
  DovetailRouterEcrImageTag:
    Type: String
  DovetailRouterSecretsVersion:
    Type: String
  SharedRedisReplicationGroupEndpointAddress:
    Type: String
  SharedRedisReplicationGroupEndpointPort:
    Type: String
Mappings:
  EnvironmentTypeMap:
    Testing:
      DovetailMinCount: 1
      DovetailMaxCount: 1
      DovetailRouterMinCount: 1
      DovetailRouterMaxCount: 1
    Staging:
      DovetailMinCount: 2
      DovetailMaxCount: 4
      DovetailRouterMinCount: 2
      DovetailRouterMaxCount: 4
    Production:
      DovetailMinCount: 7
      DovetailMaxCount: 30
      DovetailRouterMinCount: 4
      DovetailRouterMaxCount: 10
Resources:
  DovetailSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Allow web and SSH traffic to the ALB
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
        - CidrIpv6: ::/0
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
        - CidrIpv6: ::/0
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
        - CidrIpv6: ::/0
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
      Tags:
        - Key: Project
          Value: Dovetail
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: Name
          Value: !Sub Dovetail-${EnvironmentType}-LB-web_ssh
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
  # Load balancer
  DovetailALB:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      IpAddressType: dualstack
      Scheme: internet-facing
      SecurityGroups:
        - !Ref DovetailSecurityGroup
      Subnets:
        - !Ref VPCSubnet1
        - !Ref VPCSubnet2
        - !Ref VPCSubnet3
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:family, Value: Dovetail }
        - { Key: prx:dev:application, Value: Nodejs }
  DovetailALBHTTPListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      LoadBalancerArn: !Ref DovetailALB
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref DovetailApplicationALBTargetGroup
  DovetailALBHTTPListenerRule:
    Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
    Properties:
      Actions:
        - TargetGroupArn: !Ref DovetailApplicationALBTargetGroup
          Type: forward
      Conditions:
        - Field: host-header
          Values:
            - dovetail.*
      ListenerArn: !Ref DovetailALBHTTPListener
      Priority: 10
  DovetailRouterALBHTTPListenerRule:
    Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
    Properties:
      Actions:
        - TargetGroupArn: !Ref DovetailRouterALBTargetGroup
          Type: forward
      Conditions:
        - Field: host-header
          Values:
            - dovetail-router.*
      ListenerArn: !Ref DovetailALBHTTPListener
      Priority: 21
  DovetailRouterPathALBHTTPListenerRule:
    Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
    Properties:
      Actions:
        - TargetGroupArn: !Ref DovetailRouterALBTargetGroup
          Type: forward
      Conditions:
        - Field: path-pattern
          Values:
            - /_/*
      ListenerArn: !Ref DovetailALBHTTPListener
      Priority: 5
  DovetailALBHTTPSListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      Certificates:
        - CertificateArn: !Ref VPCCertificateArn
      LoadBalancerArn: !Ref DovetailALB
      Port: 443
      Protocol: HTTPS
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref DovetailApplicationALBTargetGroup
  DovetailALBHTTPSListenerRule:
    Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
    Properties:
      Actions:
        - TargetGroupArn: !Ref DovetailApplicationALBTargetGroup
          Type: forward
      Conditions:
        - Field: host-header
          Values:
            - dovetail.*
      ListenerArn: !Ref DovetailALBHTTPSListener
      Priority: 10
  DovetailRouterALBHTTPSListenerRule:
    Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
    Properties:
      Actions:
        - TargetGroupArn: !Ref DovetailRouterALBTargetGroup
          Type: forward
      Conditions:
        - Field: host-header
          Values:
            - dovetail-router.*
      ListenerArn: !Ref DovetailALBHTTPSListener
      Priority: 21
  DovetailRouterPathALBHTTPSListenerRule:
    Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
    Properties:
      Actions:
        - TargetGroupArn: !Ref DovetailRouterALBTargetGroup
          Type: forward
      Conditions:
        - Field: path-pattern
          Values:
            - /_/*
      ListenerArn: !Ref DovetailALBHTTPSListener
      Priority: 5
  # Domain
  DovetailWebRecordSetGroup:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      Comment: Record sets for dualstack web traffic to a dovetail instance
      HostedZoneName: prx.tech.
      RecordSets:
        - Type: A
          Name: !Sub dovetail.${EnvironmentTypeAbbreviation}-${VPC}.prx.tech.
          AliasTarget:
            DNSName: !Sub dualstack.${DovetailALB.DNSName}
            HostedZoneId: !GetAtt DovetailALB.CanonicalHostedZoneID
        - Type: AAAA
          Name: !Sub dovetail.${EnvironmentTypeAbbreviation}-${VPC}.prx.tech.
          AliasTarget:
            DNSName: !Sub dualstack.${DovetailALB.DNSName}
            HostedZoneId: !GetAtt DovetailALB.CanonicalHostedZoneID
  DovetailRouterRecordSetGroup:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      Comment: Record sets for dualstack web traffic to a dovetail elixir instance
      HostedZoneName: prx.tech.
      RecordSets:
        - Type: A
          Name: !Sub dovetail-router.${EnvironmentTypeAbbreviation}-${VPC}.prx.tech.
          AliasTarget:
            DNSName: !Sub dualstack.${DovetailALB.DNSName}
            HostedZoneId: !GetAtt DovetailALB.CanonicalHostedZoneID
        - Type: AAAA
          Name: !Sub dovetail-router.${EnvironmentTypeAbbreviation}-${VPC}.prx.tech.
          AliasTarget:
            DNSName: !Sub dualstack.${DovetailALB.DNSName}
            HostedZoneId: !GetAtt DovetailALB.CanonicalHostedZoneID
  # Load balancer alarms
  DovetailALBTarget500Alarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CreateProductionResources
    Properties:
      ActionsEnabled: true
      AlarmName: "[Dovetail][ALB][Error] Target 5XX"
      AlarmActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      InsufficientDataActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      OKActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      AlarmDescription: >
        5XX server errors originating from the dovetail application
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 3
      MetricName: HTTPCode_Target_5XX_Count
      Namespace: AWS/ApplicationELB
      Period: 60
      Statistic: Sum
      Threshold: 1
      TreatMissingData: notBreaching
      Dimensions:
        - Name: LoadBalancer
          Value: !GetAtt DovetailALB.LoadBalancerFullName
  DovetailALB500Alarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CreateProductionResources
    Properties:
      ActionsEnabled: true
      AlarmName: "[Dovetail][ALB][Error] LB 5XX"
      AlarmActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      InsufficientDataActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      OKActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      AlarmDescription: >
        5XX load balancer errors originating from the dovetail load balancer
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 2
      MetricName: HTTPCode_ELB_5XX_Count
      Namespace: AWS/ApplicationELB
      Period: 60
      Statistic: Sum
      Threshold: 5
      TreatMissingData: notBreaching
      Dimensions:
        - Name: LoadBalancer
          Value: !GetAtt DovetailALB.LoadBalancerFullName
  DovetailALBResponseTimeP99Alarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CreateProductionResources
    Properties:
      ActionsEnabled: true
      AlarmName: "[Dovetail][ALB][TargetResponseTime] P99 unusually slow"
      AlarmActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      InsufficientDataActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      OKActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      AlarmDescription: >
        Target response time value for Dovetail load balancer targets at 99th
        percentile higher than expected
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      ExtendedStatistic: p99
      MetricName: TargetResponseTime
      Namespace: AWS/ApplicationELB
      Period: 300
      Threshold: 4
      TreatMissingData: notBreaching
      Dimensions:
        - Name: LoadBalancer
          Value: !GetAtt DovetailALB.LoadBalancerFullName
  DovetailALBResponseTimeP95Alarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CreateProductionResources
    Properties:
      ActionsEnabled: true
      AlarmName: "[Dovetail][ALB][TargetResponseTime] P95 extremely slow"
      AlarmActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      InsufficientDataActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      OKActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      AlarmDescription: >
        Target response time value for Dovetail load balancer targets at 95th
        percentile higher than expected
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      ExtendedStatistic: p95
      MetricName: TargetResponseTime
      Namespace: AWS/ApplicationELB
      Period: 60
      Threshold: 6
      TreatMissingData: notBreaching
      Dimensions:
        - Name: LoadBalancer
          Value: !GetAtt DovetailALB.LoadBalancerFullName
  # Application
  DovetailApplicationALBTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    DependsOn: DovetailALB
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      HealthCheckPath: /ping
      Name: !Sub dovetail-app-${EnvironmentTypeAbbreviation}-${VPC}
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: "20"
      Tags:
        - Key: Project
          Value: Dovetail
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: Name
          Value: !Sub DovetailApp-${EnvironmentType}
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
      VpcId: !Ref VPC
  DovetailApplicationService:
    Type: "AWS::ECS::Service"
    DependsOn:
      - DovetailALBHTTPListener
      - DovetailALBHTTPSListener
    Properties:
      Cluster: !Ref ECSCluster
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 10
      LoadBalancers:
        - ContainerName: "dovetail-express"
          ContainerPort: 8080
          TargetGroupArn: !Ref DovetailApplicationALBTargetGroup
      PlacementStrategies:
        - Type: spread
          Field: instanceId
      Role: !Ref ECSServiceIAMRole
      ServiceName: !Sub ${AWS::StackName}-DovetailApp
      Tags:
        - Key: Project
          Value: Dovetail
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
      TaskDefinition: !Ref DovetailTaskDefinition
  DovetailLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      RetentionInDays: 14
  DovetailLogGroupTags:
    Type: Custom::CloudWatchLogGroupTags
    Properties:
      ServiceToken: !Ref CloudWatchLogGroupTaggerServiceToken
      LogGroupName: !Ref DovetailLogGroup
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:family, Value: Dovetail }
        - { Key: prx:dev:application, Value: Nodejs }

  DovetailTaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      ContainerDefinitions:
        - Cpu: !Ref ContainerCpu
          Environment:
            - Name: APP_NAME
              Value: "dovetail"
            - Name: APP_ENV
              Value: !Ref EnvironmentTypeAbbreviation
            - Name: AWS_SECRETS_BASE
              Value: !Ref SecretsBase
            - Name: AWS_SECRETS_VERSION
              Value: !Ref DovetailSecretsVersion
            - Name: AWS_DEFAULT_REGION
              Value: !Ref AWS::Region
          Essential: true
          Image: !Ref DovetailEcrImageTag
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref DovetailLogGroup
              awslogs-region: !Ref AWS::Region
          Memory: !Ref ContainerMemory
          MemoryReservation: !Ref ContainerMemoryReservation
          Name: "dovetail-express"
          PortMappings:
            - HostPort: 0
              ContainerPort: 8080
      Tags:
        - Key: Project
          Value: Dovetail
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
  # connect dovetail impressions to kinesis
  DovetailSubscriptionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: DovetailSubscriptionKinesisPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "kinesis:DescribeStream"
                  - "kinesis:PutRecord"
                  - "kinesis:PutRecords"
                Resource:
                  - !Ref MetricsKinesisStream
                  - !Ref DynamodbKinesisStream
      Tags:
        - Key: Project
          Value: Dovetail
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
  DovetailKinesisSubscriptionFilter:
    Type: "AWS::Logs::SubscriptionFilter"
    Properties:
      DestinationArn: !Ref MetricsKinesisStream
      FilterPattern: "{$.msg = impression}"
      LogGroupName: !Ref DovetailLogGroup
      RoleArn: !GetAtt DovetailSubscriptionRole.Arn
  DovetailDynamodbKinesisSubscriptionFilter:
    Type: "AWS::Logs::SubscriptionFilter"
    Properties:
      DestinationArn: !Ref DynamodbKinesisStream
      FilterPattern: "{$.msg = impressionbytes}"
      LogGroupName: !Ref DovetailLogGroup
      RoleArn: !GetAtt DovetailSubscriptionRole.Arn
  # Dovetail Elixir
  DovetailRouterALBTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    DependsOn: DovetailALB
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 4
      HealthCheckPath: /
      Name: !Sub dtrouter-${EnvironmentTypeAbbreviation}-${VPC}
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: "20"
      Tags:
        - Key: Project
          Value: Dovetail
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: Name
          Value: !Sub DovetailRouter-${EnvironmentType}
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
      VpcId: !Ref VPC
  DovetailRouterService:
    Type: "AWS::ECS::Service"
    Properties:
      Cluster: !Ref ECSCluster
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 3
      LoadBalancers:
        - ContainerName: "dovetail-router"
          ContainerPort: 4000
          TargetGroupArn: !Ref DovetailRouterALBTargetGroup
      Role: !Ref ECSServiceIAMRole
      Tags:
        - Key: Project
          Value: Dovetail
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
      TaskDefinition: !Ref DovetailRouterTaskDefinition
  DovetailRouterLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      RetentionInDays: 14
  DovetailRouterTaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      ContainerDefinitions:
        - Cpu: !Ref ContainerCpu
          Environment:
            - Name: APP_NAME
              Value: "dovetailrouter"
            - Name: APP_ENV
              Value: !Ref EnvironmentTypeAbbreviation
            - Name: AWS_SECRETS_BASE
              Value: !Ref SecretsBase
            - Name: AWS_SECRETS_VERSION
              Value: !Ref DovetailRouterSecretsVersion
            - Name: AWS_DEFAULT_REGION
              Value: !Ref AWS::Region
            - Name: REDIS_HOST
              Value: !Ref SharedRedisReplicationGroupEndpointAddress
            - Name: REDIS_PORT
              Value: !Ref SharedRedisReplicationGroupEndpointPort
            - Name: REDIS_NAMESPACE
              Value: dovetail
            - Name: REDIS_POOL_SIZE
              Value: "4"
            - Name: PORT
              Value: "4000"
            - Name: REDIRECT_HOST
              Value: !If [IsProduction, dovetail3-cdn.prxu.org, dovetail3-cdn-staging.prxu.org]
            - Name: REDIRECT_TTL
              Value: "86400"
            - Name: AUGURY_HOST
              Value: !If [IsProduction, augury.prx.org, augury.staging.prx.tech]
            - Name: FEEDER_HOST
              Value: !If [IsProduction, feeder.prx.org, feeder.staging.prx.tech]
            - Name: NEWRELIC_APP_NAME
              Value: !If [IsProduction, Dovetail Router Production, Dovetail Router Staging]
            - Name: NEWRELIC_LICENSE_KEY
              Value: !Ref NewRelicApiKeyPrxLite
            - Name: AGENTS_URL
              Value: https://raw.githubusercontent.com/PRX/prx-podagent/master/db/agents.lock.json
          Essential: true
          Image: !Ref DovetailRouterEcrImageTag
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref DovetailRouterLogGroup
              awslogs-region: !Ref AWS::Region
          Memory: !Ref ContainerMemory
          MemoryReservation: !Ref ContainerMemoryReservation
          Name: "dovetail-router"
          PortMappings:
            - HostPort: 0
              ContainerPort: 4000
          Command:
            - web
      Tags:
        - Key: Project
          Value: Dovetail
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
  # Dovetail Elixir Alarms
  DovetailRouterLogDownloadsMetric:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: '{ $.msg = "impression" }'
      LogGroupName: !Ref DovetailRouterLogGroup
      MetricTransformations:
        - MetricName: !Sub "dovetail_router_downloads_${EnvironmentTypeAbbreviation}"
          MetricNamespace: LogMetrics
          MetricValue: "1"
  DovetailRouterLogImpressionsMetric:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: '{ $.msg = "impression" }'
      LogGroupName: !Ref DovetailRouterLogGroup
      MetricTransformations:
        - MetricName: !Sub "dovetail_router_impressions_${EnvironmentTypeAbbreviation}"
          MetricNamespace: LogMetrics
          MetricValue: "$.download.adCount"
  DovetailRouterLogDepressionsMetric:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: '{ $.msg = "depression" }'
      LogGroupName: !Ref DovetailRouterLogGroup
      MetricTransformations:
        - MetricName: !Sub "dovetail_router_depressions_${EnvironmentTypeAbbreviation}"
          MetricNamespace: LogMetrics
          MetricValue: "1"
  DovetailRouterLogRepressionsMetric:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: '{ $.msg = "repression" }'
      LogGroupName: !Ref DovetailRouterLogGroup
      MetricTransformations:
        - MetricName: !Sub "dovetail_router_repressions_${EnvironmentTypeAbbreviation}"
          MetricNamespace: LogMetrics
          MetricValue: "1"
  DovetailRouterLogVanillasMetric:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: '{ $.msg = "impression" && $.download.adCount = 0 }'
      LogGroupName: !Ref DovetailRouterLogGroup
      MetricTransformations:
        - MetricName: !Sub "dovetail_router_vanillas_${EnvironmentTypeAbbreviation}"
          MetricNamespace: LogMetrics
          MetricValue: "1"
  DovetailRouterLogWarnsMetric:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: '{ $.level = "warn" }'
      LogGroupName: !Ref DovetailRouterLogGroup
      MetricTransformations:
        - MetricName: !Sub "dovetail_router_warns_${EnvironmentTypeAbbreviation}"
          MetricNamespace: LogMetrics
          MetricValue: "1"
  DovetailRouterLogErrorsMetric:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: '{ $.level = "error" }'
      LogGroupName: !Ref DovetailRouterLogGroup
      MetricTransformations:
        - MetricName: !Sub "dovetail_router_errors_${EnvironmentTypeAbbreviation}"
          MetricNamespace: LogMetrics
          MetricValue: "1"
  DovetailRouterLogErrorsAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmName: !Sub "[DovetailRouter][LogErrors] ${EnvironmentType}"
      AlarmActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      InsufficientDataActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      OKActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      AlarmDescription: Logged errors on the dovetail router application
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      MetricName: !Sub "dovetail_router_errors_${EnvironmentTypeAbbreviation}"
      Namespace: LogMetrics
      Period: 60
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching
  DovetailRouter500Alarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmName: !Sub "[DovetailRouter][ALB][Error] ${EnvironmentType} Target 5XX"
      AlarmActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      InsufficientDataActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      OKActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      AlarmDescription: 5XX responses from the dovetail router target group
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      MetricName: HTTPCode_Target_5XX_Count
      Namespace: AWS/ApplicationELB
      Period: 60
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching
      Dimensions:
        - Name: LoadBalancer
          Value: !GetAtt DovetailALB.LoadBalancerFullName
        - Name: TargetGroup
          Value: !GetAtt DovetailRouterALBTargetGroup.TargetGroupFullName
  # connect dovetail-router impressions to ddb kinesis
  DovetailRouterSubscriptionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: DovetailRouterSubscriptionKinesisPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "kinesis:DescribeStream"
                  - "kinesis:PutRecord"
                  - "kinesis:PutRecords"
                Resource:
                  - !Ref DynamodbKinesisStream
      Tags:
        - Key: Project
          Value: Dovetail
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
  DovetailRouterDynamodbKinesisSubscriptionFilter:
    Type: "AWS::Logs::SubscriptionFilter"
    Properties:
      DestinationArn: !Ref DynamodbKinesisStream
      FilterPattern: "{$.msg = impression}"
      LogGroupName: !Ref DovetailRouterLogGroup
      RoleArn: !GetAtt DovetailRouterSubscriptionRole.Arn
  # Autoscaling
  DovetailAutoScalingIamRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "application-autoscaling.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceAutoscaleRole"
      Tags:
        - Key: Project
          Value: Dovetail
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId
  DovetailScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MinCapacity: !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, DovetailMinCount]
      MaxCapacity: !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, DovetailMaxCount]
      ResourceId: !Join ["/", ["service", !Ref ECSCluster, !GetAtt DovetailApplicationService.Name]]
      RoleARN: !GetAtt DovetailAutoScalingIamRole.Arn
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs
  DovetailScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: RequestCountScaling
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref DovetailScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ALBRequestCountPerTarget
          ResourceLabel: !Join ["/", [!GetAtt DovetailALB.LoadBalancerFullName, !GetAtt DovetailApplicationALBTargetGroup.TargetGroupFullName]]
        ScaleInCooldown: 300
        ScaleOutCooldown: 60
        TargetValue: 250
  # Dovetail Elixir Autoscaling
  DovetailRouterScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MinCapacity: !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, DovetailRouterMinCount]
      MaxCapacity: !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, DovetailRouterMaxCount]
      ResourceId: !Join ["/", ["service", !Ref ECSCluster, !GetAtt DovetailRouterService.Name]]
      RoleARN: !GetAtt DovetailAutoScalingIamRole.Arn
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs
  DovetailRouterScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: RequestCountScaling
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref DovetailRouterScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ALBRequestCountPerTarget
          ResourceLabel: !Join ["/", [!GetAtt DovetailALB.LoadBalancerFullName, !GetAtt DovetailRouterALBTargetGroup.TargetGroupFullName]]
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        TargetValue: 800
Outputs:
  HostedZoneDNSName:
    Description: Convenience domain name for the ALB in a hosted zone
    Value: !Sub |
      dovetail.${EnvironmentTypeAbbreviation}-${VPC}.prx.tech.
