# stacks/web-alb-application.yml
AWSTemplateFormatVersion: "2010-09-09"
Description: >-
  Docker web application with optional worker, with its own ALB

Conditions:
  CreateWorkerResources: !Equals [!Ref CreateWorker, true]
  CreateProductionResources: !Equals [!Ref EnvironmentType, Production]
  HasMemoryReservation: !Not [!Equals [!Ref ContainerMemoryReservation, ""]]
  IsStaging: !Equals [!Ref EnvironmentType, Staging]

Parameters:
  # VPC ########################################################################
  VPC:
    Type: AWS::EC2::VPC::Id
  VPCSubnet1:
    Type: AWS::EC2::Subnet::Id
  VPCSubnet2:
    Type: AWS::EC2::Subnet::Id
  VPCSubnet3:
    Type: AWS::EC2::Subnet::Id
  VPCCertificateArn:
    Type: String
  # ECS Cluster ################################################################
  ECSCluster:
    Type: String
  ECSServiceIAMRole:
    Type: String
  # Misc #######################################################################
  OpsWarnMessagesSnsTopicArn:
    Type: String
  OpsErrorMessagesSnsTopicArn:
    Type: String
  EnvironmentType:
    Type: String
  EnvironmentTypeAbbreviation:
    Type: String
  SecretsBase:
    Type: String
  EcrRegion:
    Type: String
  EcrImageTag:
    Type: String
  CreateWorker:
    Type: String
  DesiredWebs:
    Type: String
    Default: 2
  DesiredWorkers:
    Type: String
    Default: 1
  DesiredWebsProduction:
    Type: String
    Default: 2
  DesiredWorkersProduction:
    Type: String
    Default: 1
  SecretsInstanceDecryptPolicyArn:
    Type: String
  SecretsInstanceAccessPolicyArn:
    Type: String
  # App ENV #################################################################
  AppName:
    Type: String # castle, crier, cms, feeder
  SecretsVersion:
    Type: String
  ContainerPort:
    Type: String
    Default: 3000
  ContainerMemory:
    Type: String
    Default: 500
  ContainerMemoryReservation:
    Type: String
    Default: ""
  ContainerCpu:
    Type: String
    Default: 128
  HealthCheckPath:
    Type: String
    Default: /api/v1
  SharedRdsPostgresqlEndpoint:
    Type: String
  SharedAuroraPostgresqlEndpoint:
    Type: String
Resources:
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Allow web and SSH traffic to the ALB
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
        - CidrIpv6: ::/0
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
        - CidrIpv6: ::/0
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
        - CidrIpv6: ::/0
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
      Tags:
        - Key: Project
          Value: !Ref AppName
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: Name
          Value: !Sub ${AppName}-${EnvironmentType}-LB-web_ssh
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: dualstack
      Scheme: internet-facing
      SecurityGroups:
        - !Ref ALBSecurityGroup
      Subnets:
        - !Ref VPCSubnet1
        - !Ref VPCSubnet2
        - !Ref VPCSubnet3
      Tags:
        - Key: Project
          Value: !Ref AppName
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: Name
          Value: !Sub ${AppName}-${EnvironmentType}
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
  ALBHTTPListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBTargetGroup
  ALBHTTPSListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Certificates:
        - CertificateArn: !Ref VPCCertificateArn
      LoadBalancerArn: !Ref ALB
      Port: 443
      Protocol: HTTPS
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBTargetGroup
  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn: ALB
    Properties:
      HealthCheckIntervalSeconds: 15
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      UnhealthyThresholdCount: 3
      HealthCheckPath: !Ref HealthCheckPath
      Name: !Sub ${AppName}-${EnvironmentTypeAbbreviation}-${VPC}
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: "30"
      Tags:
        - Key: Project
          Value: !Ref AppName
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: Name
          Value: !Sub ${AppName}-${EnvironmentType}
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
      VpcId: !Ref VPC

  # CloudWatch Alarms
  ALBTarget500Alarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateProductionResources
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[${AppName}][ALB][Error] Target 5XX"
      AlarmActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      InsufficientDataActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      OKActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      AlarmDescription: !Sub |
        5XX server errors originating from the ${AppName} application
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 2
      MetricName: HTTPCode_Target_5XX_Count
      Namespace: AWS/ApplicationELB
      Period: 60
      Statistic: Sum
      Threshold: 1
      TreatMissingData: notBreaching
      Dimensions:
        - Name: LoadBalancer
          Value: !GetAtt ALB.LoadBalancerFullName
  ALB500Alarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateProductionResources
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[${AppName}][ALB][Error] LB 5XX"
      AlarmActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      InsufficientDataActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      OKActions:
        - !Ref OpsErrorMessagesSnsTopicArn
      AlarmDescription: !Sub |
        5XX load balancer errors originating from the ${AppName} load balancer
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 3
      MetricName: HTTPCode_ELB_5XX_Count
      Namespace: AWS/ApplicationELB
      Period: 60
      Statistic: Sum
      Threshold: 2
      TreatMissingData: notBreaching
      Dimensions:
        - Name: LoadBalancer
          Value: !GetAtt ALB.LoadBalancerFullName
  ALBResponseTimeP95Alarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateProductionResources
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[${AppName}][ALB][TargetResponseTime] P95 extremely slow"
      AlarmActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      InsufficientDataActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      OKActions:
        - !Ref OpsWarnMessagesSnsTopicArn
      AlarmDescription: !Sub |
        Target response time value for ${AppName} load balancer targets at 95th
        percentile higher than expected
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 2
      ExtendedStatistic: p95
      MetricName: TargetResponseTime
      Namespace: AWS/ApplicationELB
      Period: 300
      Threshold: 0.2
      TreatMissingData: notBreaching
      Dimensions:
        - Name: LoadBalancer
          Value: !GetAtt ALB.LoadBalancerFullName

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
      ManagedPolicyArns:
        - !Ref SecretsInstanceDecryptPolicyArn
        - !Ref SecretsInstanceAccessPolicyArn
      Policies:
        - PolicyName: SqsFullApplicationAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - sqs:*
                Resource:
                  - !Sub arn:${AWS::Partition}:sqs:${AWS::Region}:${AWS::AccountId}:*_feeder_*
        - PolicyName: SnsFullApplicationAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - sns:*
                Resource:
                  - !Sub arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:*_announce_feed_*
                  - !Sub arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:*_announce_story_*
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource:
                  - "*"
        - PolicyName: S3FeedBucketAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:AbortMultipartUpload
                  # - s3:CreateBucket
                  - s3:Get*
                  - s3:ListAllMyBuckets
                  - s3:ListBucket
                  - s3:ListBucketMultipartUploads
                  - s3:ListBucketVersions
                  - s3:ListMultipartUploadParts
                  # - s3:PutBucketAcl
                  # - s3:PutBucketCORS
                  # - s3:PutBucketLogging
                  # - s3:PutBucketNotification
                  # - s3:PutBucketPolicy
                  # - s3:PutBucketRequestPayment
                  # - s3:PutBucketTagging
                  # - s3:PutBucketVersioning
                  # - s3:PutBucketWebsite
                  # - s3:PutLifecycleConfiguration
                  - s3:PutObject
                  - s3:PutObjectAcl
                  - s3:PutObjectVersionAcl
                  # - s3:RestoreObject
                Resource:
                  Fn::If:
                    - CreateProductionResources
                    - ["arn:aws:s3:::prx-feed/*", "arn:aws:s3:::prx-feed"]
                    - ["arn:aws:s3:::staging-prx-feed/*", "arn:aws:s3:::staging-prx-feed"]
      Tags:
        - Key: Project
          Value: !Ref AppName
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: "prx:cloudformation:stack-name"
          Value: !Ref AWS::StackName
        - Key: "prx:cloudformation:stack-id"
          Value: !Ref AWS::StackId

  # ECS Service - Web
  WebLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
  WebTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Cpu: !Ref ContainerCpu
          Environment:
            - Name: APP_NAME
              Value: !Ref AppName
            - Name: APP_ENV
              Value: !Ref EnvironmentTypeAbbreviation
            - Name: AWS_SECRETS_BASE
              Value: !Ref SecretsBase
            - Name: AWS_SECRETS_VERSION
              Value: !Ref SecretsVersion
            - Name: AWS_DEFAULT_REGION
              Value: !Ref AWS::Region
            - Name: AWS_REGION
              Value: !Ref AWS::Region
            - Name: AWS_ACCOUNT_ID
              Value: !Ref AWS::AccountId
            - Name: DB_PORT_5432_TCP_ADDR
              Value: !If [IsStaging, !Ref SharedAuroraPostgresqlEndpoint, !Ref SharedRdsPostgresqlEndpoint]
            - Name: DB_PORT_5432_TCP_PORT
              Value: !If [IsStaging, "3306", "5432"]
          Essential: true
          Image: !Ref EcrImageTag
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref WebLogGroup
              awslogs-region: !Ref AWS::Region
          Memory: !Ref ContainerMemory
          MemoryReservation: !If [HasMemoryReservation, !Ref ContainerMemoryReservation, !Ref "AWS::NoValue"]
          Name: !Sub ${AppName}-web
          PortMappings:
            - HostPort: 0
              ContainerPort: !Ref ContainerPort
          Command:
            - web
      Tags:
        - Key: Project
          Value: !Ref AppName
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
      TaskRoleArn: !GetAtt TaskRole.Arn
  WebService:
    Type: AWS::ECS::Service
    DependsOn:
      - ALBHTTPListener
      - ALBHTTPSListener
    Properties:
      Cluster: !Ref ECSCluster
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: !If [CreateProductionResources, !Ref DesiredWebsProduction, !Ref DesiredWebs]
      LoadBalancers:
        - ContainerName: !Sub ${AppName}-web
          ContainerPort: !Ref ContainerPort
          TargetGroupArn: !Ref ALBTargetGroup
      Role: !Ref ECSServiceIAMRole
      Tags:
        - Key: Project
          Value: !Ref AppName
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
      TaskDefinition: !Ref WebTaskDefinition

  # ECS Service - Worker
  WorkerLogGroup:
    Condition: CreateWorkerResources
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
  WorkerTaskDefinition:
    Condition: CreateWorkerResources
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Cpu: !Ref ContainerCpu
          Environment:
            - Name: APP_NAME
              Value: !Ref AppName
            - Name: APP_ENV
              Value: !Ref EnvironmentTypeAbbreviation
            - Name: AWS_SECRETS_BASE
              Value: !Ref SecretsBase
            - Name: AWS_SECRETS_VERSION
              Value: !Ref SecretsVersion
            - Name: AWS_DEFAULT_REGION
              Value: !Ref AWS::Region
            - Name: AWS_REGION
              Value: !Ref AWS::Region
            - Name: AWS_ACCOUNT_ID
              Value: !Ref AWS::AccountId
            - Name: DB_PORT_5432_TCP_ADDR
              Value: !If [IsStaging, !Ref SharedAuroraPostgresqlEndpoint, !Ref SharedRdsPostgresqlEndpoint]
            - Name: DB_PORT_5432_TCP_PORT
              Value: !If [IsStaging, "3306", "5432"]
          Essential: true
          Image: !Ref EcrImageTag
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref WorkerLogGroup
              awslogs-region: !Ref AWS::Region
          Memory: !Ref ContainerMemory
          MemoryReservation: !If [HasMemoryReservation, !Ref ContainerMemoryReservation, !Ref "AWS::NoValue"]
          Name: !Sub ${AppName}-worker
          Command:
            - worker
      Tags:
        - Key: Project
          Value: !Ref AppName
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
      TaskRoleArn: !GetAtt TaskRole.Arn
  WorkerService:
    Condition: CreateWorkerResources
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: !If [CreateProductionResources, !Ref DesiredWorkersProduction, !Ref DesiredWorkers]
      Tags:
        - Key: Project
          Value: !Ref AppName
        - Key: Environment
          Value: !Ref EnvironmentType
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
      TaskDefinition: !Ref WorkerTaskDefinition

  # Route 53
  WebRecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      Comment: Record sets for dualstack web traffic to a web app instance
      HostedZoneName: prx.tech.
      RecordSets:
        - Type: A
          Name: !Sub ${AppName}.${EnvironmentTypeAbbreviation}-${VPC}.prx.tech.
          AliasTarget:
            DNSName: !Sub dualstack.${ALB.DNSName}
            HostedZoneId: !GetAtt ALB.CanonicalHostedZoneID
        - Type: AAAA
          Name: !Sub ${AppName}.${EnvironmentTypeAbbreviation}-${VPC}.prx.tech.
          AliasTarget:
            DNSName: !Sub dualstack.${ALB.DNSName}
            HostedZoneId: !GetAtt ALB.CanonicalHostedZoneID

Outputs:
  HostedZoneDNSName:
    Description: Convenience domain name for the ALB in a hosted zone
    Value: !Sub |
      ${AppName}.${EnvironmentTypeAbbreviation}-${VPC}.prx.tech.
