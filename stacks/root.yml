# stacks/root.yml
# Generally this template is used to launch stacks from the bootstrapping
# CodePipeline. Primarily is is simply a wrapper around individial app- and
# service-specific templates, which get nested into this template and are
# launched when this one is. The CodePiple also passes in a template
# configuration file, which includes parameter values for this and all nested
# templates. This root template MUST define all parameters that are included in
# the config file. It can then pass along select values to nested stacks that
# require them.
AWSTemplateFormatVersion: "2010-09-09"

Description: >-
  Launches stacks for a number of applications and services that are maintained
  in separate templates.

Parameters:
  # Optional
  VpcPeeringStatus:
    Type: String
    Description: tktk
    AllowedValues:
      - Complete
      - Incomplete
    Default: Complete # TODO Default should be Incomplete
  # Required
  AwsOrganizationId:
    Type: String
  AsgKeyPairName:
    Description: >
      The EC2 key pair used for instances in the Auto Scaling
      group (region-specific)
    Type: AWS::EC2::KeyPair::KeyName
  EcrRegion:
    Type: String
  EnvironmentType:
    Type: String
    AllowedValues:
      - Staging
      - Production
  # Application Specific
  AuguryEcrImageTag:
    Type: String
  AugurySecretsVersion:
    Type: String
  RemixEcrImageTag:
    Type: String
  RemixSecretsVersion:
    Type: String
  NetworksEcrImageTag:
    Type: String
  NetworksSecretsVersion:
    Type: String
  MetricsEcrImageTag:
    Type: String
  MetricsSecretsVersion:
    Type: String
  StyleguideEcrImageTag:
    Type: String
  StyleguideSecretsVersion:
    Type: String
  CastleEcrImageTag:
    Type: String
  CastleSecretsVersion:
    Type: String
  CmsEcrImageTag:
    Type: String
  CmsSecretsVersion:
    Type: String
  CourierEcrImageTag:
    Type: String
  CourierSecretsVersion:
    Type: String
  DovetailEcrImageTag:
    Type: String
  DovetailSecretsVersion:
    Type: String
  DovetailRouterEcrImageTag:
    Type: String
  DovetailrouterSecretsVersion:
    Type: String
  ExchangeEcrImageTag:
    Type: String
  ExchangeSecretsVersion:
    Type: String
  FeederEcrImageTag:
    Type: String
  FeederSecretsVersion:
    Type: String
  IdEcrImageTag:
    Type: String
  IdSecretsVersion:
    Type: String
  PlayEcrImageTag:
    Type: String
  PlaySecretsVersion:
    Type: String
  PublishEcrImageTag:
    Type: String
  PublishSecretsVersion:
    Type: String
  GroveEcrImageTag:
    Type: String
  GroveSecretsVersion:
    Type: String
  IframelyEcrImageTag:
    Type: String
  IframelySecretsVersion:
    Type: String
  RadiotopiaTowerLambdaCodeS3ObjectVersion:
    Type: String
  PixelPrxOrgCodeS3ObjectVersion:
    Type: String
  UploadLambdaCodeS3ObjectVersion:
    Type: String
  AnalyticsIngestLambdaCodeS3ObjectVersion:
    Type: String
  DovetailStitchLambdaCodeS3ObjectVersion:
    Type: String
  DovetailBytesLambdaCodeS3ObjectVersion:
    Type: String
  DovetailCountsLambdaCodeS3ObjectVersion:
    Type: String
  DovetailTrafficLambdaCodeS3ObjectVersion:
    Type: String
  DovetailCdnArrangerCodeS3ObjectVersion:
    Type: String
  ProxyPrxOrgCodeS3ObjectVersion:
    Type: String
  BetaPrxOrgArchiveS3ObjectVersion:
    Type: String
  BacksawArchiveS3ObjectVersion:
    Type: String
  # Parameter Overrides from the CodePipeline action
  InfrastructureStorageStackName:
    Type: String
  NotificationsStackName:
    Type: String
  SecretsStackName:
    Type: String
  InfrastructureGitCommit:
    Type: String
  PipelineExecutionNonce:
    Type: String

Conditions:
  IsStaging: !Equals [!Ref EnvironmentType, Staging]
  HasVpcPeeringComplete: !Equals [!Ref VpcPeeringStatus, Complete]

Mappings:
  EnvironmentTypeMap:
    Testing:
      abbreviation: test
    Beta:
      abbreviation: beta
    Staging:
      abbreviation: stag
    Production:
      abbreviation: prod
  ECSReservationMap:
    Staging:
      BackendCpu: 128
      BackendMemory: 1000
      BackendMemoryReservation: 500
      FrontendCpu: 64
      FrontendMemory: 200
      DovetailCpu: 128
      DovetailMemory: 400
    Production:
      BackendCpu: 200
      BackendMemory: 2000
      BackendMemoryReservation: 1000
      FrontendCpu: 100
      FrontendMemory: 400
      DovetailCpu: 700
      DovetailMemory: 1000
  # Each app should be given a listener rule priority prefix between 1 and 500.
  # In nested stacks, listener rule priorities are created by combining the
  # prefix with exactly two more digits. This allows each app to have up to 99
  # rules per listener.
  #
  # Higher-traffic apps should be given a higher priority (lower number) to
  # reduce the number of rules evaluations needed for more common requests.
  #
  # The final rule priority values must be between 1 and 50000.
  ALBListenerRulePriorityMap:
    Play:
      prefix: 12
    Exchange:
      prefix: 13
    Cms:
      prefix: 15
    Id:
      prefix: 24
    Castle:
      prefix: 26
    Remix:
      prefix: 29
    Publish:
      prefix: 31
    Metrics:
      prefix: 36
    Grove:
      prefix: 40
    Crier:
      prefix: 42
    StripeProxy:
      prefix: 46
    Courier:
      prefix: 50
    Augury:
      prefix: 55
    Styleguide:
      prefix: 65
    Networks:
      prefix: 70
    Iframely:
      prefix: 73

Resources:
  CustomResourcesStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - Fn::ImportValue: !Sub ${NotificationsStackName}-CloudFormationNotificationSnsTopic
      Parameters:
        StorageStackName: !Ref InfrastructureStorageStackName
        EnvironmentType: !Ref EnvironmentType
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Infrastructure }
      TemplateURL:
        Fn::Sub:
          - https://${SourceBucketName}.s3.${AWS::Region}.amazonaws.com/${InfrastructureGitCommit}/stacks/custom-resources.yml
          - SourceBucketName:
              Fn::ImportValue: !Sub ${InfrastructureStorageStackName}-InfrastructureSourceBucket
      TimeoutInMinutes: 5

  Constants:
    Type: Custom::Echo
    Properties:
      ServiceToken: !GetAtt CustomResourcesStack.Outputs.EchoServiceToken
      RootStackName: !Ref AWS::StackName
      SourceBucketName:
        Fn::ImportValue: !Sub ${InfrastructureStorageStackName}-InfrastructureSourceBucket
      SecretsBaseRegion:
        Fn::ImportValue: !Sub ${SecretsStackName}-SecretsBaseRegion
      CloudFormationNotificationArn:
        Fn::ImportValue: !Sub ${NotificationsStackName}-CloudFormationNotificationSnsTopic
      TemplateUrlBase:
        # This is a URL including the hostname of the source bucket, and the
        # path starting with a Git commit hash for the Infrastructure
        # repository. Some or all of the contents of the repo live under that
        # path.
        # It does not include a trailing slash.
        # e.g., https://prx-infrastructure-us-east-1-source.s3.amazonaws.com/000e4f9a6b3836efbfc722fe7d2fd598b03edfd4
        Fn::Sub:
          - https://${SourceBucketName}.s3.${AWS::Region}.amazonaws.com/${InfrastructureGitCommit}
          - SourceBucketName:
              Fn::ImportValue: !Sub ${InfrastructureStorageStackName}-InfrastructureSourceBucket

  # Root stacks
  StaticSitesRootStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - Fn::ImportValue: !Sub ${NotificationsStackName}-CloudFormationNotificationSnsTopic
      Parameters:
        S3StaticSiteDeployServiceToken: !GetAtt CustomResourcesStack.Outputs.S3StaticSiteDeployServiceToken
        InfrastructureStorageStackName: !Ref InfrastructureStorageStackName
        InfrastructureNotificationsStackName: !Ref NotificationsStackName
        TemplateUrlPrefix: !Join ["", ["https://", "Fn::ImportValue": !Sub "${InfrastructureStorageStackName}-InfrastructureSourceBucket", !Sub ".s3.${AWS::Region}.amazonaws.com/${InfrastructureGitCommit}", "/stacks/static-sites/"]]
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, abbreviation]
        BetaPrxOrgArchiveS3ObjectVersion: !Ref BetaPrxOrgArchiveS3ObjectVersion
        BacksawArchiveS3ObjectVersion: !Ref BacksawArchiveS3ObjectVersion
      Tags:
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
      TemplateURL: !Join ["", ["https://", "Fn::ImportValue": !Sub "${InfrastructureStorageStackName}-InfrastructureSourceBucket", !Sub ".s3.${AWS::Region}.amazonaws.com/${InfrastructureGitCommit}", "/stacks/static-sites.yml"]]
      TimeoutInMinutes: 5
  ServerlessRootStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - Fn::ImportValue: !Sub ${NotificationsStackName}-CloudFormationNotificationSnsTopic
      Parameters:
        InfrastructureStorageStackName: !Ref InfrastructureStorageStackName
        InfrastructureNotificationsStackName: !Ref NotificationsStackName
        VPCSecurityGroup: !GetAtt VPCStack.Outputs.SecurityGroup
        VPCSubnet1: !GetAtt VPCStack.Outputs.Subnet1
        VPCSubnet2: !GetAtt VPCStack.Outputs.Subnet2
        VPCSubnet3: !GetAtt VPCStack.Outputs.Subnet3
        TemplateUrlPrefix: !Join ["", ["https://", "Fn::ImportValue": !Sub "${InfrastructureStorageStackName}-InfrastructureSourceBucket", !Sub ".s3.${AWS::Region}.amazonaws.com/${InfrastructureGitCommit}", "/stacks/serverless/"]]
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, abbreviation]
        CastleRedisPrimaryEndPointAddress: !GetAtt CastleStack.Outputs.RedisPrimaryEndPointAddress
        UploadLambdaCodeS3ObjectVersion: !Ref UploadLambdaCodeS3ObjectVersion
        DovetailBytesLambdaCodeS3ObjectVersion: !Ref DovetailBytesLambdaCodeS3ObjectVersion
        DovetailCountsLambdaCodeS3ObjectVersion: !Ref DovetailCountsLambdaCodeS3ObjectVersion
        DovetailTrafficLambdaCodeS3ObjectVersion: !Ref DovetailTrafficLambdaCodeS3ObjectVersion
        DovetailCdnArrangerCodeS3ObjectVersion: !Ref DovetailCdnArrangerCodeS3ObjectVersion
        AnalyticsIngestLambdaCodeS3ObjectVersion: !Ref AnalyticsIngestLambdaCodeS3ObjectVersion
        RadiotopiaTowerLambdaCodeS3ObjectVersion: !Ref RadiotopiaTowerLambdaCodeS3ObjectVersion
        PixelPrxOrgCodeS3ObjectVersion: !Ref PixelPrxOrgCodeS3ObjectVersion
      Tags:
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
      TemplateURL: !Join ["", ["https://", "Fn::ImportValue": !Sub "${InfrastructureStorageStackName}-InfrastructureSourceBucket", !Sub ".s3.${AWS::Region}.amazonaws.com/${InfrastructureGitCommit}", "/stacks/serverless/root.yml"]]
      TimeoutInMinutes: 5
  ContainerAppsRootStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - Fn::ImportValue: !Sub ${NotificationsStackName}-CloudFormationNotificationSnsTopic
      Parameters:
        InfrastructureNotificationsStackName: !Ref NotificationsStackName
        TemplateUrlPrefix: !Join ["", ["https://", "Fn::ImportValue": !Sub "${InfrastructureStorageStackName}-InfrastructureSourceBucket", !Sub ".s3.${AWS::Region}.amazonaws.com/${InfrastructureGitCommit}", "/stacks/container-apps/"]]
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, abbreviation]
        VPC: !GetAtt VPCStack.Outputs.VPC
        VPCSubnet1: !GetAtt VPCStack.Outputs.Subnet1
        VPCSubnet2: !GetAtt VPCStack.Outputs.Subnet2
        VPCSubnet3: !GetAtt VPCStack.Outputs.Subnet3
        VPCCertificateArn: !GetAtt CertificateStack.Outputs.WildcardCertificateArn
        PlatformALBDNSName: !GetAtt LoadBalancersStack.Outputs.PlatformALBDualstackDNSName
        PlatformALBFullName: !GetAtt LoadBalancersStack.Outputs.PlatformALBFullName
        PlatformALBCanonicalHostedZoneID: !GetAtt LoadBalancersStack.Outputs.PlatformALBCanonicalHostedZoneID
        PlatformALBHTTPListenerArn: !GetAtt LoadBalancersStack.Outputs.PlatformALBHTTPListenerArn
        PlatformALBHTTPSListenerArn: !GetAtt LoadBalancersStack.Outputs.PlatformALBHTTPSListenerArn
        ECSCluster: !GetAtt ECSClusterStack.Outputs.ECSCluster
        ECSClusterArn: !GetAtt ECSClusterStack.Outputs.ECSClusterArn
        ECSInstanceIAMRoleArn: !GetAtt ECSClusterStack.Outputs.ECSInstanceIAMRoleArn
        ECSServiceAutoscaleIAMRoleArn: !GetAtt ECSClusterStack.Outputs.ECSServiceAutoscaleIAMRoleArn
        ECSServiceIAMRole: !GetAtt ECSClusterStack.Outputs.ECSServiceIAMRole
        EcrRegion: !Ref EcrRegion
        SharedMemcachedEndpointAddress: !GetAtt SharedMemcachedStack.Outputs.CacheEndpointAddress
        SharedMemcachedEndpointPort: !GetAtt SharedMemcachedStack.Outputs.CacheEndpointPort
        AmazonSesSmtpCredentialsGeneratorServiceToken: !GetAtt CustomResourcesStack.Outputs.AmazonSesSmtpCredentialsGeneratorServiceToken
        UploadSigningEndpointUrl: !GetAtt ServerlessRootStack.Outputs.UploadSigningEndpointUrl
        UploadSigningAccessKeyId: !GetAtt ServerlessRootStack.Outputs.UploadSigningAccessKeyId
        SecretsBase:
          Fn::ImportValue: !Sub ${SecretsStackName}-SecretsBaseRegion
        SecretsInstanceDecryptPolicyArn:
          Fn::ImportValue: !Sub ${SecretsStackName}-SecretsInstanceDecryptPolicyArn
        SecretsInstanceAccessPolicyArn:
          Fn::ImportValue: !Sub ${SecretsStackName}-SecretsInstanceAccessPolicyArn
        ContainerMemory: !FindInMap [ECSReservationMap, !Ref EnvironmentType, BackendMemory]
        ContainerMemoryReservation: !FindInMap [ECSReservationMap, !Ref EnvironmentType, BackendMemoryReservation]
        ContainerCpu: !FindInMap [ECSReservationMap, !Ref EnvironmentType, BackendCpu]
        # Exchange
        ExchangePlatformALBListenerPriorityPrefix: !FindInMap [ALBListenerRulePriorityMap, Exchange, prefix]
        ExchangeEcrImageTag: !Ref ExchangeEcrImageTag
        ExchangeSecretsVersion: !Ref ExchangeSecretsVersion
        # Cms
        CmsPlatformALBListenerPriorityPrefix: !FindInMap [ALBListenerRulePriorityMap, Cms, prefix]
        CmsEcrImageTag: !Ref CmsEcrImageTag
        CmsSecretsVersion: !Ref CmsSecretsVersion
        # Courier
        CourierPlatformALBListenerPriorityPrefix: !FindInMap [ALBListenerRulePriorityMap, Courier, prefix]
        CourierEcrImageTag: !Ref CourierEcrImageTag
        CourierSecretsVersion: !Ref CourierSecretsVersion
        # Augury
        AuguryPlatformALBListenerPriorityPrefix: !FindInMap [ALBListenerRulePriorityMap, Augury, prefix]
        AuguryEcrImageTag: !Ref AuguryEcrImageTag
        AugurySecretsVersion: !Ref AugurySecretsVersion
        # Styleguide
        StyleguidePlatformALBListenerPriorityPrefix: !FindInMap [ALBListenerRulePriorityMap, Styleguide, prefix]
        StyleguideEcrImageTag: !Ref StyleguideEcrImageTag
        StyleguideSecretsVersion: !Ref StyleguideSecretsVersion
        # Remix
        RemixPlatformALBListenerPriorityPrefix: !FindInMap [ALBListenerRulePriorityMap, Remix, prefix]
        RemixEcrImageTag: !Ref RemixEcrImageTag
        RemixSecretsVersion: !Ref RemixSecretsVersion
        # Networks
        NetworksPlatformALBListenerPriorityPrefix: !FindInMap [ALBListenerRulePriorityMap, Networks, prefix]
        NetworksEcrImageTag: !Ref NetworksEcrImageTag
        NetworksSecretsVersion: !Ref NetworksSecretsVersion
        # Grove
        GrovePlatformALBListenerPriorityPrefix: !FindInMap [ALBListenerRulePriorityMap, Grove, prefix]
        GroveEcrImageTag: !Ref GroveEcrImageTag
        GroveSecretsVersion: !Ref GroveSecretsVersion
        # Iframely
        IframelyPlatformALBListenerPriorityPrefix: !FindInMap [ALBListenerRulePriorityMap, Iframely, prefix]
        IframelyEcrImageTag: !Ref IframelyEcrImageTag
        IframelySecretsVersion: !Ref IframelySecretsVersion
      Tags:
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
      TemplateURL: !Join ["", ["https://", "Fn::ImportValue": !Sub "${InfrastructureStorageStackName}-InfrastructureSourceBucket", !Sub ".s3.${AWS::Region}.amazonaws.com/${InfrastructureGitCommit}", "/stacks/container-apps/root.yml"]]
      TimeoutInMinutes: 5
  # App and shared resource stacks
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - Fn::ImportValue: !Sub ${NotificationsStackName}-CloudFormationNotificationSnsTopic
      Parameters:
        EnvironmentType: !Ref EnvironmentType
        AwsOrganizationId: !Ref AwsOrganizationId
      Tags:
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
      TemplateURL: !Join ["", ["https://", "Fn::ImportValue": !Sub "${InfrastructureStorageStackName}-InfrastructureSourceBucket", !Sub ".s3.${AWS::Region}.amazonaws.com/${InfrastructureGitCommit}", "/stacks/vpc.yml"]]
      TimeoutInMinutes: 5
  CertificateStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - Fn::ImportValue: !Sub ${NotificationsStackName}-CloudFormationNotificationSnsTopic
      Parameters:
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, abbreviation]
        VPC: !GetAtt VPCStack.Outputs.VPC
      Tags:
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
      TemplateURL: !Join ["", ["https://", "Fn::ImportValue": !Sub "${InfrastructureStorageStackName}-InfrastructureSourceBucket", !Sub ".s3.${AWS::Region}.amazonaws.com/${InfrastructureGitCommit}", "/stacks/certificate.yml"]]
      TimeoutInMinutes: 5
  ECSClusterStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - Fn::ImportValue: !Sub "${NotificationsStackName}-CloudFormationNotificationSnsTopic"
      Parameters:
        InfrastructureStorageStackName: !Ref InfrastructureStorageStackName
        NotificationsStackName: !Ref NotificationsStackName
        KeyPairName: !Ref AsgKeyPairName
        EnvironmentType: !Ref EnvironmentType
        VPC: !GetAtt VPCStack.Outputs.VPC
        VPCSubnet1: !GetAtt VPCStack.Outputs.Subnet1
        VPCSubnet2: !GetAtt VPCStack.Outputs.Subnet2
        VPCSubnet3: !GetAtt VPCStack.Outputs.Subnet3
        VPCSubnet1AZ: !GetAtt VPCStack.Outputs.Subnet1AvailabilityZone
        VPCSubnet2AZ: !GetAtt VPCStack.Outputs.Subnet2AvailabilityZone
        VPCSubnet3AZ: !GetAtt VPCStack.Outputs.Subnet3AvailabilityZone
        OpsWarnMessagesSnsTopicArn:
          Fn::ImportValue: !Sub ${NotificationsStackName}-OpsWarnMessagesSnsTopicArn
        OpsErrorMessagesSnsTopicArn:
          Fn::ImportValue: !Sub ${NotificationsStackName}-OpsErrorMessagesSnsTopicArn
        SlackMessageRelaySnsTopicArn:
          Fn::ImportValue: !Sub ${NotificationsStackName}-SlackMessageRelaySnsTopicArn
        SecretsInstanceDecryptPolicyArn:
          Fn::ImportValue: !Sub ${SecretsStackName}-SecretsInstanceDecryptPolicyArn
        SecretsInstanceAccessPolicyArn:
          Fn::ImportValue: !Sub ${SecretsStackName}-SecretsInstanceAccessPolicyArn
      Tags:
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
      TemplateURL: !Join ["", ["https://", "Fn::ImportValue": !Sub "${InfrastructureStorageStackName}-InfrastructureSourceBucket", !Sub ".s3.${AWS::Region}.amazonaws.com/${InfrastructureGitCommit}", "/stacks/ecs.yml"]]
      TimeoutInMinutes: 5
  LoadBalancersStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - Fn::ImportValue: !Sub ${NotificationsStackName}-CloudFormationNotificationSnsTopic
      Parameters:
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, abbreviation]
        VPC: !GetAtt VPCStack.Outputs.VPC
        VPCSubnet1: !GetAtt VPCStack.Outputs.Subnet1
        VPCSubnet2: !GetAtt VPCStack.Outputs.Subnet2
        VPCSubnet3: !GetAtt VPCStack.Outputs.Subnet3
        VPCCertificateArn: !GetAtt CertificateStack.Outputs.WildcardCertificateArn
        OpsWarnMessagesSnsTopicArn:
          Fn::ImportValue: !Sub ${NotificationsStackName}-OpsWarnMessagesSnsTopicArn
        OpsErrorMessagesSnsTopicArn:
          Fn::ImportValue: !Sub ${NotificationsStackName}-OpsErrorMessagesSnsTopicArn
      Tags:
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
      TemplateURL: !Join ["", ["https://", "Fn::ImportValue": !Sub "${InfrastructureStorageStackName}-InfrastructureSourceBucket", !Sub ".s3.${AWS::Region}.amazonaws.com/${InfrastructureGitCommit}", "/stacks/load-balancers.yml"]]
      TimeoutInMinutes: 5
  PublishStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - Fn::ImportValue: !Sub ${NotificationsStackName}-CloudFormationNotificationSnsTopic
      Parameters:
        VPC: !GetAtt VPCStack.Outputs.VPC
        PlatformALBDNSName: !GetAtt LoadBalancersStack.Outputs.PlatformALBDualstackDNSName
        PlatformALBFullName: !GetAtt LoadBalancersStack.Outputs.PlatformALBFullName
        PlatformALBCanonicalHostedZoneID: !GetAtt LoadBalancersStack.Outputs.PlatformALBCanonicalHostedZoneID
        PlatformALBHTTPListenerArn: !GetAtt LoadBalancersStack.Outputs.PlatformALBHTTPListenerArn
        PlatformALBHTTPSListenerArn: !GetAtt LoadBalancersStack.Outputs.PlatformALBHTTPSListenerArn
        PlatformALBListenerPriorityPrefix: !FindInMap [ALBListenerRulePriorityMap, Publish, prefix]
        ECSCluster: !GetAtt ECSClusterStack.Outputs.ECSCluster
        ECSServiceIAMRole: !GetAtt ECSClusterStack.Outputs.ECSServiceIAMRole
        UploadSigningUserName: !GetAtt ServerlessRootStack.Outputs.UploadSigningUserName
        UploadSigningEndpointUrl: !GetAtt ServerlessRootStack.Outputs.UploadSigningEndpointUrl
        UploadSigningAccessKeyId: !GetAtt ServerlessRootStack.Outputs.UploadSigningAccessKeyId
        OpsErrorMessagesSnsTopicArn:
          Fn::ImportValue: !Sub ${NotificationsStackName}-OpsErrorMessagesSnsTopicArn
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, abbreviation]
        EcrRegion: !Ref EcrRegion
        SecretsBase:
          Fn::ImportValue: !Sub ${SecretsStackName}-SecretsBaseRegion
        PublishEcrImageTag: !Ref PublishEcrImageTag
        PublishSecretsVersion: !Ref PublishSecretsVersion
        ContainerMemory: !FindInMap [ECSReservationMap, !Ref EnvironmentType, FrontendMemory]
        ContainerCpu: !FindInMap [ECSReservationMap, !Ref EnvironmentType, FrontendCpu]
      Tags:
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
      TemplateURL: !Join ["", ["https://", "Fn::ImportValue": !Sub "${InfrastructureStorageStackName}-InfrastructureSourceBucket", !Sub ".s3.${AWS::Region}.amazonaws.com/${InfrastructureGitCommit}", "/stacks/container-apps/publish.prx.org.yml"]]
      TimeoutInMinutes: 5
  CastleStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - Fn::ImportValue: !Sub ${NotificationsStackName}-CloudFormationNotificationSnsTopic
      Parameters:
        VPC: !GetAtt VPCStack.Outputs.VPC
        VPCSubnet1: !GetAtt VPCStack.Outputs.Subnet1
        VPCSubnet2: !GetAtt VPCStack.Outputs.Subnet2
        VPCSubnet3: !GetAtt VPCStack.Outputs.Subnet3
        VPCSecurityGroup: !GetAtt VPCStack.Outputs.SecurityGroup
        PlatformALBDNSName: !GetAtt LoadBalancersStack.Outputs.PlatformALBDualstackDNSName
        PlatformALBFullName: !GetAtt LoadBalancersStack.Outputs.PlatformALBFullName
        PlatformALBCanonicalHostedZoneID: !GetAtt LoadBalancersStack.Outputs.PlatformALBCanonicalHostedZoneID
        PlatformALBHTTPListenerArn: !GetAtt LoadBalancersStack.Outputs.PlatformALBHTTPListenerArn
        PlatformALBHTTPSListenerArn: !GetAtt LoadBalancersStack.Outputs.PlatformALBHTTPSListenerArn
        PlatformALBListenerPriorityPrefix: !FindInMap [ALBListenerRulePriorityMap, Castle, prefix]
        ECSCluster: !GetAtt ECSClusterStack.Outputs.ECSCluster
        ECSServiceIAMRole: !GetAtt ECSClusterStack.Outputs.ECSServiceIAMRole
        RedisSecurityGroupSourceSecurityGroupId: !GetAtt ECSClusterStack.Outputs.ECSInstanceOutboundSecurityGroupId
        OpsWarnMessagesSnsTopicArn:
          Fn::ImportValue: !Sub ${NotificationsStackName}-OpsWarnMessagesSnsTopicArn
        OpsErrorMessagesSnsTopicArn:
          Fn::ImportValue: !Sub ${NotificationsStackName}-OpsErrorMessagesSnsTopicArn
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, abbreviation]
        EcrRegion: !Ref EcrRegion
        SecretsBase:
          Fn::ImportValue: !Sub ${SecretsStackName}-SecretsBaseRegion
        CastleEcrImageTag: !Ref CastleEcrImageTag
        CastleSecretsVersion: !Ref CastleSecretsVersion
        ContainerMemory: !FindInMap [ECSReservationMap, !Ref EnvironmentType, BackendMemory]
        ContainerMemoryReservation: !FindInMap [ECSReservationMap, !Ref EnvironmentType, BackendMemoryReservation]
        ContainerCpu: !FindInMap [ECSReservationMap, !Ref EnvironmentType, BackendCpu]
      Tags:
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
      TemplateURL: !Join ["", ["https://", "Fn::ImportValue": !Sub "${InfrastructureStorageStackName}-InfrastructureSourceBucket", !Sub ".s3.${AWS::Region}.amazonaws.com/${InfrastructureGitCommit}", "/stacks/container-apps/castle.prx.org.yml"]]
      TimeoutInMinutes: 5
  PlayStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - Fn::ImportValue: !Sub ${NotificationsStackName}-CloudFormationNotificationSnsTopic
      Parameters:
        VPC: !GetAtt VPCStack.Outputs.VPC
        PlatformALBDNSName: !GetAtt LoadBalancersStack.Outputs.PlatformALBDualstackDNSName
        PlatformALBFullName: !GetAtt LoadBalancersStack.Outputs.PlatformALBFullName
        PlatformALBCanonicalHostedZoneID: !GetAtt LoadBalancersStack.Outputs.PlatformALBCanonicalHostedZoneID
        PlatformALBHTTPSListenerArn: !GetAtt LoadBalancersStack.Outputs.PlatformALBHTTPSListenerArn
        PlatformALBListenerPriorityPrefix: !FindInMap [ALBListenerRulePriorityMap, Play, prefix]
        ECSCluster: !GetAtt ECSClusterStack.Outputs.ECSCluster
        ECSServiceIAMRole: !GetAtt ECSClusterStack.Outputs.ECSServiceIAMRole
        OpsErrorMessagesSnsTopicArn:
          Fn::ImportValue: !Sub ${NotificationsStackName}-OpsErrorMessagesSnsTopicArn
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, abbreviation]
        EcrRegion: !Ref EcrRegion
        SecretsBase:
          Fn::ImportValue: !Sub ${SecretsStackName}-SecretsBaseRegion
        PlayEcrImageTag: !Ref PlayEcrImageTag
        PlaySecretsVersion: !Ref PlaySecretsVersion
        ContainerMemory: !FindInMap [ECSReservationMap, !Ref EnvironmentType, FrontendMemory]
        ContainerCpu: !FindInMap [ECSReservationMap, !Ref EnvironmentType, FrontendCpu]
      Tags:
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
      TemplateURL: !Join ["", ["https://", "Fn::ImportValue": !Sub "${InfrastructureStorageStackName}-InfrastructureSourceBucket", !Sub ".s3.${AWS::Region}.amazonaws.com/${InfrastructureGitCommit}", "/stacks/container-apps/play.prx.org.yml"]]
      TimeoutInMinutes: 5
  FeederStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - Fn::ImportValue: !Sub ${NotificationsStackName}-CloudFormationNotificationSnsTopic
      Parameters:
        VPC: !GetAtt VPCStack.Outputs.VPC
        VPCSubnet1: !GetAtt VPCStack.Outputs.Subnet1
        VPCSubnet2: !GetAtt VPCStack.Outputs.Subnet2
        VPCSubnet3: !GetAtt VPCStack.Outputs.Subnet3
        VPCCertificateArn: !GetAtt CertificateStack.Outputs.WildcardCertificateArn # TODO Give it a separate cert
        ECSCluster: !GetAtt ECSClusterStack.Outputs.ECSCluster
        ECSServiceIAMRole: !GetAtt ECSClusterStack.Outputs.ECSServiceIAMRole
        OpsWarnMessagesSnsTopicArn:
          Fn::ImportValue: !Sub ${NotificationsStackName}-OpsWarnMessagesSnsTopicArn
        OpsErrorMessagesSnsTopicArn:
          Fn::ImportValue: !Sub ${NotificationsStackName}-OpsErrorMessagesSnsTopicArn
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, abbreviation]
        SecretsBase:
          Fn::ImportValue: !Sub ${SecretsStackName}-SecretsBaseRegion
        EcrRegion: !Ref EcrRegion
        EcrImageTag: !Ref FeederEcrImageTag
        SecretsVersion: !Ref FeederSecretsVersion
        AppName: feeder
        CreateWorker: "true"
        DesiredWebsProduction: "6"
        DesiredWorkersProduction: "1"
        SecretsInstanceDecryptPolicyArn:
          Fn::ImportValue: !Sub ${SecretsStackName}-SecretsInstanceDecryptPolicyArn
        SecretsInstanceAccessPolicyArn:
          Fn::ImportValue: !Sub ${SecretsStackName}-SecretsInstanceAccessPolicyArn
        ContainerPort: "3000"
        ContainerMemory: !FindInMap [ECSReservationMap, !Ref EnvironmentType, BackendMemory]
        ContainerMemoryReservation: !FindInMap [ECSReservationMap, !Ref EnvironmentType, BackendMemoryReservation]
        ContainerCpu: !FindInMap [ECSReservationMap, !Ref EnvironmentType, BackendCpu]
        HealthCheckPath: "/api/v1"
      Tags:
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
      TemplateURL: !Join ["", ["https://", "Fn::ImportValue": !Sub "${InfrastructureStorageStackName}-InfrastructureSourceBucket", !Sub ".s3.${AWS::Region}.amazonaws.com/${InfrastructureGitCommit}", "/stacks/container-apps/feeder.prx.org.yml"]]
      TimeoutInMinutes: 5
  DovetailStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - Fn::ImportValue: !Sub ${NotificationsStackName}-CloudFormationNotificationSnsTopic
      Parameters:
        VPC: !GetAtt VPCStack.Outputs.VPC
        VPCSubnet1: !GetAtt VPCStack.Outputs.Subnet1
        VPCSubnet2: !GetAtt VPCStack.Outputs.Subnet2
        VPCSubnet3: !GetAtt VPCStack.Outputs.Subnet3
        VPCCertificateArn: !GetAtt CertificateStack.Outputs.WildcardCertificateArn # TODO Give it a separate cert
        ECSCluster: !GetAtt ECSClusterStack.Outputs.ECSCluster
        ECSServiceIAMRole: !GetAtt ECSClusterStack.Outputs.ECSServiceIAMRole
        DynamodbKinesisStream: !Join ["", ["/prx/", !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, abbreviation], "/analytics-ingest-lambda/DYNAMODB_KINESIS_STREAM"]]
        OpsWarnMessagesSnsTopicArn:
          Fn::ImportValue: !Sub ${NotificationsStackName}-OpsWarnMessagesSnsTopicArn
        OpsErrorMessagesSnsTopicArn:
          Fn::ImportValue: !Sub ${NotificationsStackName}-OpsErrorMessagesSnsTopicArn
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, abbreviation]
        EcrRegion: !Ref EcrRegion
        SecretsBase:
          Fn::ImportValue: !Sub ${SecretsStackName}-SecretsBaseRegion
        DovetailEcrImageTag: !Ref DovetailEcrImageTag
        DovetailSecretsVersion: !Ref DovetailSecretsVersion
        DovetailRouterEcrImageTag: !Ref DovetailRouterEcrImageTag
        DovetailRouterSecretsVersion: !Ref DovetailrouterSecretsVersion
        ContainerMemory: !FindInMap [ECSReservationMap, !Ref EnvironmentType, DovetailMemory]
        ContainerCpu: !FindInMap [ECSReservationMap, !Ref EnvironmentType, DovetailCpu]
      Tags:
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
      TemplateURL: !Join ["", ["https://", "Fn::ImportValue": !Sub "${InfrastructureStorageStackName}-InfrastructureSourceBucket", !Sub ".s3.${AWS::Region}.amazonaws.com/${InfrastructureGitCommit}", "/stacks/container-apps/dovetail.prx.org.yml"]]
      TimeoutInMinutes: 5
  IdStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - Fn::ImportValue: !Sub ${NotificationsStackName}-CloudFormationNotificationSnsTopic
      Parameters:
        VPC: !GetAtt VPCStack.Outputs.VPC
        PlatformALBDNSName: !GetAtt LoadBalancersStack.Outputs.PlatformALBDualstackDNSName
        PlatformALBFullName: !GetAtt LoadBalancersStack.Outputs.PlatformALBFullName
        PlatformALBCanonicalHostedZoneID: !GetAtt LoadBalancersStack.Outputs.PlatformALBCanonicalHostedZoneID
        PlatformALBHTTPSListenerArn: !GetAtt LoadBalancersStack.Outputs.PlatformALBHTTPSListenerArn
        PlatformALBListenerPriorityPrefix: !FindInMap [ALBListenerRulePriorityMap, Id, prefix]
        ECSCluster: !GetAtt ECSClusterStack.Outputs.ECSCluster
        ECSServiceIAMRole: !GetAtt ECSClusterStack.Outputs.ECSServiceIAMRole
        OpsErrorMessagesSnsTopicArn:
          Fn::ImportValue: !Sub ${NotificationsStackName}-OpsErrorMessagesSnsTopicArn
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, abbreviation]
        SecretsBase:
          Fn::ImportValue: !Sub ${SecretsStackName}-SecretsBaseRegion
        EcrRegion: !Ref EcrRegion
        EcrImageTag: !Ref IdEcrImageTag
        SecretsVersion: !Ref IdSecretsVersion
        ContainerMemory: !FindInMap [ECSReservationMap, !Ref EnvironmentType, BackendMemory]
        ContainerMemoryReservation: !FindInMap [ECSReservationMap, !Ref EnvironmentType, BackendMemoryReservation]
        ContainerCpu: !FindInMap [ECSReservationMap, !Ref EnvironmentType, BackendCpu]
        AmazonSesSmtpCredentialsGeneratorServiceToken: !GetAtt CustomResourcesStack.Outputs.AmazonSesSmtpCredentialsGeneratorServiceToken
      Tags:
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
      TemplateURL: !Join ["", ["https://", "Fn::ImportValue": !Sub "${InfrastructureStorageStackName}-InfrastructureSourceBucket", !Sub ".s3.${AWS::Region}.amazonaws.com/${InfrastructureGitCommit}", "/stacks/container-apps/id.prx.org.yml"]]
      TimeoutInMinutes: 5
  MetricsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - Fn::ImportValue: !Sub ${NotificationsStackName}-CloudFormationNotificationSnsTopic
      Parameters:
        VPC: !GetAtt VPCStack.Outputs.VPC
        PlatformALBDNSName: !GetAtt LoadBalancersStack.Outputs.PlatformALBDualstackDNSName
        PlatformALBFullName: !GetAtt LoadBalancersStack.Outputs.PlatformALBFullName
        PlatformALBCanonicalHostedZoneID: !GetAtt LoadBalancersStack.Outputs.PlatformALBCanonicalHostedZoneID
        PlatformALBHTTPSListenerArn: !GetAtt LoadBalancersStack.Outputs.PlatformALBHTTPSListenerArn
        PlatformALBListenerPriorityPrefix: !FindInMap [ALBListenerRulePriorityMap, Metrics, prefix]
        ECSCluster: !GetAtt ECSClusterStack.Outputs.ECSCluster
        OpsErrorMessagesSnsTopicArn:
          Fn::ImportValue: !Sub ${NotificationsStackName}-OpsErrorMessagesSnsTopicArn
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, abbreviation]
        EcrRegion: !Ref EcrRegion
        SecretsBase:
          Fn::ImportValue: !Sub ${SecretsStackName}-SecretsBaseRegion
        MetricsEcrImageTag: !Ref MetricsEcrImageTag
        MetricsSecretsVersion: !Ref MetricsSecretsVersion
        ContainerMemory: !FindInMap [ECSReservationMap, !Ref EnvironmentType, FrontendMemory]
        ContainerCpu: !FindInMap [ECSReservationMap, !Ref EnvironmentType, FrontendCpu]
      Tags:
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
      TemplateURL: !Join ["", ["https://", "Fn::ImportValue": !Sub "${InfrastructureStorageStackName}-InfrastructureSourceBucket", !Sub ".s3.${AWS::Region}.amazonaws.com/${InfrastructureGitCommit}", "/stacks/container-apps/metrics.prx.org.yml"]]
      TimeoutInMinutes: 5
  DovetailStitchLambdaStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - Fn::ImportValue: !Sub ${NotificationsStackName}-CloudFormationNotificationSnsTopic
      Parameters:
        EnvironmentType: !Ref EnvironmentType
        CodeS3Bucket:
          Fn::ImportValue: !Sub ${InfrastructureStorageStackName}-InfrastructureApplicationCodeBucket
        CodeS3ObjectVersion: !Ref DovetailStitchLambdaCodeS3ObjectVersion
        PorterSnsArn: !Join ["", ["/prx/", !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, abbreviation], "/dovetail-stitch-lambda/PORTER_SNS_ARN"]]
      Tags:
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
      TemplateURL: !Join ["", ["https://", "Fn::ImportValue": !Sub "${InfrastructureStorageStackName}-InfrastructureSourceBucket", !Sub ".s3.${AWS::Region}.amazonaws.com/${InfrastructureGitCommit}", "/stacks/dovetail-stitch-lambda.yml"]]
      TimeoutInMinutes: 5
  ProxyPrxOrgStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - Fn::ImportValue: !Sub ${NotificationsStackName}-CloudFormationNotificationSnsTopic
      Parameters:
        OpsWarnMessagesSnsTopicArn:
          Fn::ImportValue: !Sub ${NotificationsStackName}-OpsWarnMessagesSnsTopicArn
        OpsErrorMessagesSnsTopicArn:
          Fn::ImportValue: !Sub ${NotificationsStackName}-OpsErrorMessagesSnsTopicArn
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, abbreviation]
        CodeS3Bucket:
          Fn::ImportValue: !Sub ${InfrastructureStorageStackName}-InfrastructureApplicationCodeBucket
        CodeS3ObjectVersion: !Ref ProxyPrxOrgCodeS3ObjectVersion
        RootStackName: !GetAtt Constants.RootStackName
      Tags:
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
      TemplateURL: !Join ["", ["https://", "Fn::ImportValue": !Sub "${InfrastructureStorageStackName}-InfrastructureSourceBucket", !Sub ".s3.${AWS::Region}.amazonaws.com/${InfrastructureGitCommit}", "/stacks/serverless/proxy.prx.org.yml"]]
      TimeoutInMinutes: 5
  SharedMemcachedStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - Fn::ImportValue: !Sub ${NotificationsStackName}-CloudFormationNotificationSnsTopic
      Parameters:
        VPC: !GetAtt VPCStack.Outputs.VPC
        VPCSubnet1: !GetAtt VPCStack.Outputs.Subnet1
        VPCSubnet2: !GetAtt VPCStack.Outputs.Subnet2
        VPCSubnet3: !GetAtt VPCStack.Outputs.Subnet3
        OpsWarnMessagesSnsTopicArn:
          Fn::ImportValue: !Sub ${NotificationsStackName}-OpsWarnMessagesSnsTopicArn
        OpsErrorMessagesSnsTopicArn:
          Fn::ImportValue: !Sub ${NotificationsStackName}-OpsErrorMessagesSnsTopicArn
        EnvironmentType: !Ref EnvironmentType
        SourceSecurityGroupId1: !GetAtt ECSClusterStack.Outputs.ECSInstanceOutboundSecurityGroupId
      Tags:
        - Key: prx:cloudformation:stack-name
          Value: !Ref AWS::StackName
        - Key: prx:cloudformation:stack-id
          Value: !Ref AWS::StackId
      TemplateURL: !Join ["", ["https://", "Fn::ImportValue": !Sub "${InfrastructureStorageStackName}-InfrastructureSourceBucket", !Sub ".s3.${AWS::Region}.amazonaws.com/${InfrastructureGitCommit}", "/stacks/shared-memcached.yml"]]
      TimeoutInMinutes: 40

  SharedVpcStack:
    Type: AWS::CloudFormation::Stack
    Condition: IsStaging # TODO
    Properties:
      NotificationARNs:
        - !GetAtt Constants.CloudFormationNotificationArn
      Parameters:
        AvailabilityZoneSelectorServiceToken: !GetAtt CustomResourcesStack.Outputs.AvailabilityZoneSelectorServiceToken
        EnvironmentType: !Ref EnvironmentType
        RootStackName: !GetAtt Constants.RootStackName
        TemplateUrlPrefix: !Sub ${Constants.TemplateUrlBase}/stacks/shared-vpc
        CloudFormationNotificationArn: !GetAtt Constants.CloudFormationNotificationArn
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${Constants.TemplateUrlBase}/stacks/shared-vpc.yml
      TimeoutInMinutes: 20

  SharedAlbStack:
    Type: AWS::CloudFormation::Stack
    Condition: IsStaging # TODO
    Properties:
      NotificationARNs:
        - !GetAtt Constants.CloudFormationNotificationArn
      Parameters:
        EnvironmentType: !Ref EnvironmentType
        RootStackName: !GetAtt Constants.RootStackName
        EnvironmentTypeAbbreviation: !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, abbreviation]
        VpcId: !GetAtt SharedVpcStack.Outputs.VpcId
        VpcPublicSubnet1Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet1Id
        VpcPublicSubnet2Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet2Id
        VpcPublicSubnet3Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet3Id
        NotificationsStackName: !Ref NotificationsStackName
        EchoServiceToken: !GetAtt CustomResourcesStack.Outputs.EchoServiceToken
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${Constants.TemplateUrlBase}/stacks/shared-alb.yml
      TimeoutInMinutes: 20
  SharedEcsClusterStack:
    Type: AWS::CloudFormation::Stack
    Condition: IsStaging # TODO
    Properties:
      NotificationARNs:
        - !GetAtt Constants.CloudFormationNotificationArn
      Parameters:
        EnvironmentType: !Ref EnvironmentType
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${Constants.TemplateUrlBase}/stacks/shared-ecs-cluster.yml
      TimeoutInMinutes: 20
  SharedEcsAsgStack:
    Type: AWS::CloudFormation::Stack
    Condition: IsStaging # TODO
    Properties:
      NotificationARNs:
        - !GetAtt Constants.CloudFormationNotificationArn
      Parameters:
        EnvironmentType: !Ref EnvironmentType
        RootStackName: !GetAtt Constants.RootStackName
        KeyPairName: !Ref AsgKeyPairName
        VpcId: !GetAtt SharedVpcStack.Outputs.VpcId
        VpcPublicSubnet1Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet1Id
        VpcPublicSubnet2Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet2Id
        VpcPublicSubnet3Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet3Id
        EcsClusterName: !GetAtt SharedEcsClusterStack.Outputs.EcsClusterName
        LoadBalancerSecurityGroupId: !GetAtt SharedAlbStack.Outputs.LoadBalancerSecurityGroupId
        EcsLaunchEndpointsAccessSecurityGroupId: !GetAtt SharedVpcStack.Outputs.EcsLaunchEndpointsAccessSecurityGroupId
        KmsEndpointAccessSecurityGroupId: !GetAtt SharedVpcStack.Outputs.KmsEndpointAccessSecurityGroupId
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${Constants.TemplateUrlBase}/stacks/shared-ecs-asg.yml
      TimeoutInMinutes: 20

  PrivateSharedMemcachedStack:
    Type: AWS::CloudFormation::Stack
    Condition: IsStaging # TODO
    Properties:
      NotificationARNs:
        - Fn::ImportValue: !Sub ${NotificationsStackName}-CloudFormationNotificationSnsTopic
      Parameters:
        VPC: !GetAtt SharedVpcStack.Outputs.VpcId
        VPCSubnet1: !GetAtt SharedVpcStack.Outputs.PrivateSubnet1Id
        VPCSubnet2: !GetAtt SharedVpcStack.Outputs.PrivateSubnet2Id
        VPCSubnet3: !GetAtt SharedVpcStack.Outputs.PrivateSubnet3Id
        OpsWarnMessagesSnsTopicArn:
          Fn::ImportValue: !Sub ${NotificationsStackName}-OpsWarnMessagesSnsTopicArn
        OpsErrorMessagesSnsTopicArn:
          Fn::ImportValue: !Sub ${NotificationsStackName}-OpsErrorMessagesSnsTopicArn
        EnvironmentType: !Ref EnvironmentType
        SourceSecurityGroupId1: !GetAtt SharedEcsAsgStack.Outputs.InstanceSecurityGroupId
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${Constants.TemplateUrlBase}/stacks/shared-memcached.yml
      TimeoutInMinutes: 40

  ProvisionedStack:
    Type: AWS::CloudFormation::Stack
    Condition: IsStaging # TODO
    # Condition: HasVpcPeeringComplete # TODO
    Properties:
      NotificationARNs:
        - !GetAtt Constants.CloudFormationNotificationArn
      Parameters:
        PublishEcrImageTag: !Ref PublishEcrImageTag
        PublishSecretsVersion: !Ref PublishSecretsVersion
        PublishSharedAlbListenerRulePriorityPrefix: !FindInMap [ALBListenerRulePriorityMap, Publish, prefix]

        MetricsEcrImageTag: !Ref MetricsEcrImageTag
        MetricsSecretsVersion: !Ref MetricsSecretsVersion
        MetricsSharedAlbListenerRulePriorityPrefix: !FindInMap [ALBListenerRulePriorityMap, Metrics, prefix]

        IframelyEcrImageTag: !Ref IframelyEcrImageTag
        IframelySecretsVersion: !Ref IframelySecretsVersion
        IframelySharedAlbListenerRulePriorityPrefix: !FindInMap [ALBListenerRulePriorityMap, Iframely, prefix]

        PlayEcrImageTag: !Ref PlayEcrImageTag
        PlaySecretsVersion: !Ref PlaySecretsVersion
        PlaySharedAlbListenerRulePriorityPrefix: !FindInMap [ALBListenerRulePriorityMap, Play, prefix]

        GroveEcrImageTag: !Ref GroveEcrImageTag
        GroveSecretsVersion: !Ref GroveSecretsVersion
        GroveSharedAlbListenerRulePriorityPrefix: !FindInMap [ALBListenerRulePriorityMap, Grove, prefix]

        StyleguideEcrImageTag: !Ref StyleguideEcrImageTag
        StyleguideSecretsVersion: !Ref StyleguideSecretsVersion
        StyleguideSharedAlbListenerRulePriorityPrefix: !FindInMap [ALBListenerRulePriorityMap, Styleguide, prefix]

        NetworksEcrImageTag: !Ref NetworksEcrImageTag
        NetworksSecretsVersion: !Ref NetworksSecretsVersion
        NetworksSharedAlbListenerRulePriorityPrefix: !FindInMap [ALBListenerRulePriorityMap, Networks, prefix]

        DovetailRouterEcrImageTag: !Ref DovetailRouterEcrImageTag
        DovetailRouterSecretsVersion: !Ref DovetailrouterSecretsVersion
        DovetailLegacyEcrImageTag: !Ref DovetailEcrImageTag
        DovetailLegacySecretsVersion: !Ref DovetailSecretsVersion

        IdEcrImageTag: !Ref IdEcrImageTag
        IdSecretsVersion: !Ref IdSecretsVersion
        IdSharedAlbListenerRulePriorityPrefix: !FindInMap [ALBListenerRulePriorityMap, Id, prefix]

        RemixEcrImageTag: !Ref RemixEcrImageTag
        RemixSecretsVersion: !Ref RemixSecretsVersion
        RemixSharedAlbListenerRulePriorityPrefix: !FindInMap [ALBListenerRulePriorityMap, Remix, prefix]

        ExchangeEcrImageTag: !Ref ExchangeEcrImageTag
        ExchangeSecretsVersion: !Ref ExchangeSecretsVersion
        ExchangeSharedAlbListenerRulePriorityPrefix: !FindInMap [ALBListenerRulePriorityMap, Exchange, prefix]

        CastleEcrImageTag: !Ref CastleEcrImageTag
        CastleSecretsVersion: !Ref CastleSecretsVersion
        CastleSharedAlbListenerRulePriorityPrefix: !FindInMap [ALBListenerRulePriorityMap, Castle, prefix]

        CmsEcrImageTag: !Ref CmsEcrImageTag
        CmsSecretsVersion: !Ref CmsSecretsVersion
        CmsSharedAlbListenerRulePriorityPrefix: !FindInMap [ALBListenerRulePriorityMap, Cms, prefix]

        AuguryEcrImageTag: !Ref AuguryEcrImageTag
        AugurySecretsVersion: !Ref AugurySecretsVersion
        AugurySharedAlbListenerRulePriorityPrefix: !FindInMap [ALBListenerRulePriorityMap, Augury, prefix]

        FeederEcrImageTag: !Ref FeederEcrImageTag
        FeederSecretsVersion: !Ref FeederSecretsVersion

        TemplateUrlPrefix: !Sub ${Constants.TemplateUrlBase}/stacks/provisioned
        CloudFormationNotificationArn: !GetAtt Constants.CloudFormationNotificationArn
        AlbFullName: !GetAtt SharedAlbStack.Outputs.AlbFullName
        AlbHttpsListenerArn: !GetAtt SharedAlbStack.Outputs.HttpsListenerArn
        EcsClusterArn: !GetAtt SharedEcsClusterStack.Outputs.EcsClusterArn
        EcsClusterName: !GetAtt SharedEcsClusterStack.Outputs.EcsClusterName
        VpcId: !GetAtt SharedVpcStack.Outputs.VpcId
        VpcCidrBlock: !GetAtt SharedVpcStack.Outputs.VpcCidrBlock
        VpcIpv6CidrBlocks: !GetAtt SharedVpcStack.Outputs.VpcIpv6CidrBlocks
        SecretsBase: !GetAtt Constants.SecretsBaseRegion
        EcrRegion: !Ref EcrRegion
        SecretsStackName: !Ref SecretsStackName
        NotificationsStackName: !Ref NotificationsStackName
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, abbreviation]
        RootStackName: !GetAtt Constants.RootStackName
        UploadSigningUserName: !GetAtt ServerlessRootStack.Outputs.UploadSigningUserName
        UploadSigningEndpointUrl: !GetAtt ServerlessRootStack.Outputs.UploadSigningEndpointUrl
        UploadSigningAccessKeyId: !GetAtt ServerlessRootStack.Outputs.UploadSigningAccessKeyId
        VpcPublicSubnet1Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet1Id
        VpcPublicSubnet2Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet2Id
        VpcPublicSubnet3Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet3Id
        VpcPrivateSubnet1Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet1Id
        VpcPrivateSubnet2Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet2Id
        VpcPrivateSubnet3Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet3Id
        SharedMemcachedEndpointAddress: !GetAtt PrivateSharedMemcachedStack.Outputs.CacheEndpointAddress
        SharedMemcachedEndpointPort: !GetAtt PrivateSharedMemcachedStack.Outputs.CacheEndpointPort
        AmazonSesSmtpCredentialsGeneratorServiceToken: !GetAtt CustomResourcesStack.Outputs.AmazonSesSmtpCredentialsGeneratorServiceToken
        EchoServiceToken: !GetAtt CustomResourcesStack.Outputs.EchoServiceToken
        EcsLaunchEndpointsAccessSecurityGroupId: !GetAtt SharedVpcStack.Outputs.EcsLaunchEndpointsAccessSecurityGroupId
        KmsEndpointAccessSecurityGroupId: !GetAtt SharedVpcStack.Outputs.KmsEndpointAccessSecurityGroupId
        SharedEcsAsgInstanceSecurityGroupId: !GetAtt SharedEcsAsgStack.Outputs.InstanceSecurityGroupId
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${Constants.TemplateUrlBase}/stacks/provisioned.yml
      TimeoutInMinutes: 40

Outputs:
  PipelineExecutionNonce:
    Value: !Ref PipelineExecutionNonce

  VPCCertificateArn:
    Description: The ARN for the wildcard certificate for the VPC
    Value: !GetAtt CertificateStack.Outputs.WildcardCertificateArn
  PlatformALBDNSName:
    Description: The DNS name for the platform application load balancer
    Value: !GetAtt LoadBalancersStack.Outputs.PlatformALBDNSName
  PlatformALBDualstackDNSName:
    Description: >
      The dualstack DNS name for the platform application load balancer
    Value: !GetAtt LoadBalancersStack.Outputs.PlatformALBDualstackDNSName

  SharedAlbVanityDomain:
    Condition: IsStaging # TODO
    Description: >-
      The wildcard domain associated with the shared application load balancer
    Value: !GetAtt SharedAlbStack.Outputs.VanityAlbDomain
  SharedVpcId:
    Condition: IsStaging # TODO
    Description: The resource ID for the shared VPC
    Value: !GetAtt SharedVpcStack.Outputs.VpcId
