# stacks/root.yml
# Generally this template is used to launch stacks from the bootstrapping
# CodePipeline. Primarily is is simply a wrapper around individial app- and
# service-specific templates, which get nested into this template and are
# launched when this one is. The CodePiple also passes in a template
# configuration file, which includes parameter values for this and all nested
# templates. This root template MUST define all parameters that are included in
# the config file. It can then pass along select values to nested stacks that
# require them.
AWSTemplateFormatVersion: "2010-09-09"

Description: >-
  Launches stacks for a number of applications and services that are maintained
  in separate templates. This stack is only intended to be launched once in a
  given region, and launching more than one will likely fail. The stack can
  operate in either Primary or Secondary mode, depending on its current role in
  a multi-region setup.

Parameters:
  # Optional
  SharedAuroraMysqlEndpoint: { Type: AWS::SSM::Parameter::Value<String> }
  SharedAuroraMysqlPort: { Type: String, Default: "3306" }
  SharedAuroraPostgresqlEndpoint: { Type: AWS::SSM::Parameter::Value<String> }
  SharedAuroraPostgresqlPort: { Type: String, Default: "3306" }
  NewRelicApiKeyPrxLite: { Type: AWS::SSM::Parameter::Value<String>, Default: /prx/global/Spire/new-relic-lite-api-key }
  AuthorizedKeys: { Type: AWS::SSM::Parameter::Value<List<String>>, Default: /prx/global/Spire/authorized-keys, NoEcho: true }
  # Required
  SlackMessageRelayTopicArn: { Type: AWS::SSM::Parameter::Value<String>, Default: /prx/global/Spire/slack-message-relay-sns-topic-arn }
  # Parameter Overrides from the CodePipeline action
  StorageStackName: { Type: String }
  InfrastructureGitCommit: { Type: String }
  Nonce: { Type: String }
  TemplateUrlBase: { Type: String }
  EnvironmentType:
    Type: String
    AllowedValues:
      - Staging
      - Production
  EnvironmentTypeAbbreviation:
    Type: String
    AllowedValues:
      - stag
      - prod

Mappings:
  # Each app should be given a listener rule priority prefix between 1 and 500.
  # In app stacks, listener rule priorities are created by combining the
  # prefix with exactly two more digits. This allows each app to have up to 99
  # rules per listener.
  #
  # Higher-traffic apps should be given a higher priority (lower number) to
  # reduce the number of rules evaluations needed for more common requests.
  #
  # The final rule priority values must be between 1 and 50000.
  SharedAlbListenerRulePriorityMap:
    Feeder: { prefix: 7 }
    Play: { prefix: 11 }
    Exchange: { prefix: 13 }
    Augury: { prefix: 17 }
    Cms: { prefix: 20 }
    Id: { prefix: 24 }
    Castle: { prefix: 26 } # Dovetail Castle
    Remix: { prefix: 29 }
    Publish: { prefix: 31 }
    Metrics: { prefix: 36 }
    TheCount: { prefix: 42 }
    TheCastle: { prefix: 50 } # Legacy Castle
    Styleguide: { prefix: 65 }
    Networks: { prefix: 70 }
    Iframely: { prefix: 73 }
    Wfmt: { prefix: 77 }
  SharedVpcCidrBlockMap:
    # must be a /16 private network
    us-east-1:
      Staging: 10.30.0.0/16
      Production: 172.30.0.0/16
    us-west-2:
      Staging: 10.33.0.0/16
      Production: 172.23.0.0/16
  RegionModeMap:
    us-east-1:
      Staging: Primary
      Production: Primary
    us-west-2:
      Staging: Secondary
      Production: Secondary

Conditions:
  IsUsEast1: !Equals [!Ref "AWS::Region", us-east-1]
  HasSharedAuroraMysqlEndpoint: !Not [!Equals [!Ref SharedAuroraMysqlEndpoint, ""]]
  HasSharedAuroraPostgresqlEndpoint: !Not [!Equals [!Ref SharedAuroraPostgresqlEndpoint, ""]]
  HasAllSharedAuroraEndpoints: !And [!Condition HasSharedAuroraMysqlEndpoint, !Condition HasSharedAuroraPostgresqlEndpoint]
  CreateDatabaseDependentResources: !Condition HasAllSharedAuroraEndpoints
  # Application stacks require external MySQL/PostgreSQL databases
  CreateApplicationStacks: !Condition CreateDatabaseDependentResources
  # Dashboard requires that application stacks have been created
  CreateDashboardsStack: !Condition CreateApplicationStacks

Resources:
  Constants:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Parameters:
        EnvironmentType: !Ref EnvironmentType
        RootStackId: !Ref AWS::StackId
        RootStackName: !Ref AWS::StackName
        DeploymentPackageBucketName:
          Fn::ImportValue: !Sub ${StorageStackName}-InfrastructureApplicationCodeBucket
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Infrastructure }
      TemplateURL: !Sub ${TemplateUrlBase}/stacks/constants.yml
      TimeoutInMinutes: 5

  CustomResourcesStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Parameters:
        StorageStackName: !Ref StorageStackName
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !Ref EnvironmentTypeAbbreviation
        RootStackName: !Ref AWS::StackName
        RootStackId: !Ref AWS::StackId
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Infrastructure }
      TemplateURL: !Sub ${TemplateUrlBase}/stacks/custom-resources.yml
      TimeoutInMinutes: 5

  # TODO This is failing in us-west-2; "duplicate key" error
  ResourceGroupsStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Condition: IsUsEast1
    Properties:
      Parameters:
        RootStackName: !Ref AWS::StackName
        RootStackId: !Ref AWS::StackId
        EnvironmentType: !Ref EnvironmentType
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${TemplateUrlBase}/stacks/resource-groups.yml
      TimeoutInMinutes: 10

  SharedGlueDatabaseStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Parameters:
        EnvironmentType: !Ref EnvironmentType
        RootStackName: !Ref AWS::StackName
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${TemplateUrlBase}/stacks/shared-glue-database.yml
      TimeoutInMinutes: 10

  SharedAnnounceStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Parameters:
        RootStackName: !Ref AWS::StackName
        RootStackId: !Ref AWS::StackId
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !Ref EnvironmentTypeAbbreviation
        HashStringServiceToken: !GetAtt CustomResourcesStack.Outputs.HashStringServiceToken
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${TemplateUrlBase}/stacks/shared-announce.yml
      TimeoutInMinutes: 10

  SharedDovetailKinesisStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Parameters:
        RootStackName: !Ref AWS::StackName
        RootStackId: !Ref AWS::StackId
        EnvironmentType: !Ref EnvironmentType
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${TemplateUrlBase}/stacks/shared-dovetail-kinesis.yml
      TimeoutInMinutes: 60

  SharedEcsClusterStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Parameters:
        EnvironmentType: !Ref EnvironmentType
        RootStackName: !Ref AWS::StackName
        RootStackId: !Ref AWS::StackName
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${TemplateUrlBase}/stacks/shared-ecs/ecs-cluster.yml
      TimeoutInMinutes: 20

  SharedVpcStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Parameters:
        AvailabilityZoneSelectorServiceToken: !GetAtt CustomResourcesStack.Outputs.AvailabilityZoneSelectorServiceToken
        EnvironmentType: !Ref EnvironmentType
        RootStackName: !Ref AWS::StackName
        RootStackId: !Ref AWS::StackId
        TemplateUrlPrefix: !Sub ${TemplateUrlBase}/stacks/shared-vpc
        CloudWatchLogGroupTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchLogGroupTaggerServiceToken
        Ec2ResourceTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.Ec2ResourceTaggerServiceToken
        SharedVpcCidrBlock: !FindInMap [SharedVpcCidrBlockMap, !Ref "AWS::Region", !Ref EnvironmentType]
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${TemplateUrlBase}/stacks/shared-vpc.yml
      TimeoutInMinutes: 20

  # Requires VPC
  SharedResourceShareStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Parameters:
        EnvironmentType: !Ref EnvironmentType
        RootStackName: !Ref AWS::StackName
        RootStackId: !Ref AWS::StackId
        VpcPrivateSubnet1: !GetAtt SharedVpcStack.Outputs.PrivateSubnet1Id
        VpcPrivateSubnet2: !GetAtt SharedVpcStack.Outputs.PrivateSubnet2Id
        VpcPrivateSubnet3: !GetAtt SharedVpcStack.Outputs.PrivateSubnet3Id
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${TemplateUrlBase}/stacks/shared-resource-share.yml
      TimeoutInMinutes: 20

  # Requires VPC
  SharedDatabaseSecurityGroupsStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Parameters:
        EnvironmentType: !Ref EnvironmentType
        RootStackName: !Ref AWS::StackName
        RootStackId: !Ref AWS::StackName
        VpcId: !GetAtt SharedVpcStack.Outputs.VpcId
        SharedVpcCidrBlock: !GetAtt SharedVpcStack.Outputs.VpcCidrBlock
        SharedAuroraMysqlPort: !Ref SharedAuroraMysqlPort
        SharedAuroraPostgresqlPort: !Ref SharedAuroraPostgresqlPort
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${TemplateUrlBase}/stacks/shared-db-sg.yml
      TimeoutInMinutes: 20

  # Requires VPC and shared Glue DB
  SharedAlbStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Parameters:
        EnvironmentType: !Ref EnvironmentType
        RootStackName: !Ref AWS::StackName
        RootStackId: !Ref AWS::StackName
        EnvironmentTypeAbbreviation: !Ref EnvironmentTypeAbbreviation
        VpcId: !GetAtt SharedVpcStack.Outputs.VpcId
        VpcPublicSubnet1Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet1Id
        VpcPublicSubnet2Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet2Id
        VpcPublicSubnet3Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet3Id
        CloudWatchAlarmTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchAlarmTaggerServiceToken
        SharedGlueDatabaseName: !GetAtt SharedGlueDatabaseStack.Outputs.SharedGlueDatabaseName
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${TemplateUrlBase}/stacks/shared-alb.yml
      TimeoutInMinutes: 40

  # Requires VPC and ALB
  SharedEcsAsgSecurityGroupStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Parameters:
        EnvironmentType: !Ref EnvironmentType
        RootStackName: !Ref AWS::StackName
        RootStackId: !Ref AWS::StackName
        VpcId: !GetAtt SharedVpcStack.Outputs.VpcId
        LoadBalancerSecurityGroupId: !GetAtt SharedAlbStack.Outputs.LoadBalancerSecurityGroupId
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${TemplateUrlBase}/stacks/shared-ecs/asg-sg.yml
      TimeoutInMinutes: 20
  # Requires VPC, ALB, and more
  SharedEcsAsgStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Parameters:
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !Ref EnvironmentTypeAbbreviation
        RegionMode: !FindInMap [RegionModeMap, !Ref "AWS::Region", !Ref EnvironmentType]
        RootStackName: !Ref AWS::StackName
        RootStackId: !Ref AWS::StackName
        SlackMessageRelaySnsTopicArn: !Ref SlackMessageRelayTopicArn
        CloudWatchLogGroupTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchLogGroupTaggerServiceToken
        AuthorizedKeys: !Join [",", !Ref AuthorizedKeys]
        VpcPublicSubnet1Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet1Id
        VpcPublicSubnet2Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet2Id
        VpcPublicSubnet3Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet3Id
        EcsClusterName: !GetAtt SharedEcsClusterStack.Outputs.EcsClusterName
        SharedEcsAsgInstanceSecurityGroupId: !GetAtt SharedEcsAsgSecurityGroupStack.Outputs.InstanceSecurityGroupId
        LoadBalancerSecurityGroupId: !GetAtt SharedAlbStack.Outputs.LoadBalancerSecurityGroupId
        SharedMysqlClientSecurityGroupId: !GetAtt SharedDatabaseSecurityGroupsStack.Outputs.SharedMysqlClientSecurityGroupId
        SharedPostgresqlClientSecurityGroupId: !GetAtt SharedDatabaseSecurityGroupsStack.Outputs.SharedPostgresqlClientSecurityGroupId
        SharedRedisClientSecurityGroupId: !GetAtt SharedRedisSecurityGroupStack.Outputs.ClientSecurityGroupId
        EcsLaunchEndpointsAccessSecurityGroupId: !GetAtt SharedVpcStack.Outputs.EcsLaunchEndpointsAccessSecurityGroupId
        KmsEndpointAccessSecurityGroupId: !GetAtt SharedVpcStack.Outputs.KmsEndpointAccessSecurityGroupId
        SharedRedisReplicationGroupEndpointAddress: !GetAtt SharedRedisStack.Outputs.ReplicationGroupEndpointAddress
        SharedRedisReplicationGroupEndpointPort: !GetAtt SharedRedisStack.Outputs.ReplicationGroupEndpointPort
        CloudWatchAlarmTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchAlarmTaggerServiceToken
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${TemplateUrlBase}/stacks/shared-ecs/asg.yml
      TimeoutInMinutes: 1440

  # Requires VPC and ECS ASG SG
  SharedMemcachedStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Parameters:
        VpcId: !GetAtt SharedVpcStack.Outputs.VpcId
        VpcPrivateSubnet1Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet1Id
        VpcPrivateSubnet2Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet2Id
        VpcPrivateSubnet3Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet3Id
        RootStackId: !Ref AWS::StackId
        RootStackName: !Ref AWS::StackName
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !Ref EnvironmentTypeAbbreviation
        CloudWatchAlarmTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchAlarmTaggerServiceToken
        SourceSecurityGroupId1: !GetAtt SharedEcsAsgSecurityGroupStack.Outputs.InstanceSecurityGroupId
        StagingInstanceType: cache.t4g.micro
        ProductionInstanceType: cache.t4g.small
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${TemplateUrlBase}/stacks/shared-memcached.yml
      TimeoutInMinutes: 40

  # Requires VPC
  SharedRedisSecurityGroupStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Parameters:
        EnvironmentType: !Ref EnvironmentType
        RootStackName: !Ref AWS::StackName
        RootStackId: !Ref AWS::StackName
        VpcId: !GetAtt SharedVpcStack.Outputs.VpcId
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${TemplateUrlBase}/stacks/shared-redis/security-groups.yml
      TimeoutInMinutes: 20
  # Requires VPC and Redis SG
  SharedRedisStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Parameters:
        RootStackName: !Ref AWS::StackName
        RootStackId: !Ref AWS::StackId
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !Ref EnvironmentTypeAbbreviation
        VpcPrivateSubnet1Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet1Id
        VpcPrivateSubnet2Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet2Id
        VpcPrivateSubnet3Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet3Id
        CloudWatchAlarmTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchAlarmTaggerServiceToken
        SharedRedisClusterSecurityGroupId: !GetAtt SharedRedisSecurityGroupStack.Outputs.ClusterSecurityGroupId
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${TemplateUrlBase}/stacks/shared-redis/cluster.yml
      TimeoutInMinutes: 60

  # Requires everything above, AND external MySQL/PostgreSQL databases
  Apps100AStack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateApplicationStacks
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Parameters:
        TemplateUrlPrefix: !Sub ${TemplateUrlBase}/stacks/apps
        AlbFullName: !GetAtt SharedAlbStack.Outputs.AlbFullName
        AlbHttpsListenerArn: !GetAtt SharedAlbStack.Outputs.HttpsListenerArn
        EcsClusterArn: !GetAtt SharedEcsClusterStack.Outputs.EcsClusterArn
        VpcId: !GetAtt SharedVpcStack.Outputs.VpcId
        NewRelicApiKeyPrxLite: !Ref NewRelicApiKeyPrxLite
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !Ref EnvironmentTypeAbbreviation
        EnvironmentTypeLowercase: !GetAtt Constants.Outputs.EnvironmentTypeLowercase
        RegionMode: !FindInMap [RegionModeMap, !Ref "AWS::Region", !Ref EnvironmentType]
        RootStackName: !Ref AWS::StackName
        RootStackId: !Ref AWS::StackId
        VpcPrivateSubnet1Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet1Id
        VpcPrivateSubnet2Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet2Id
        VpcPrivateSubnet3Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet3Id
        KinesisStreamsEndpointAccessSecurityGroupId: !GetAtt SharedVpcStack.Outputs.KinesisStreamsEndpointAccessSecurityGroupId
        StsEndpointAccessSecurityGroupId: !GetAtt SharedVpcStack.Outputs.StsEndpointAccessSecurityGroupId
        SharedMemcachedEndpointAddress: !GetAtt SharedMemcachedStack.Outputs.CacheEndpointAddress
        SharedRedisClientSecurityGroupId: !GetAtt SharedRedisSecurityGroupStack.Outputs.ClientSecurityGroupId
        SharedRedisReplicationGroupEndpointAddress: !GetAtt SharedRedisStack.Outputs.ReplicationGroupEndpointAddress
        SharedRedisReplicationGroupEndpointPort: !GetAtt SharedRedisStack.Outputs.ReplicationGroupEndpointPort
        AmazonSesSmtpCredentialsGeneratorServiceToken: !GetAtt CustomResourcesStack.Outputs.AmazonSesSmtpCredentialsGeneratorServiceToken
        CloudWatchAlarmTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchAlarmTaggerServiceToken
        CloudWatchLogGroupTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchLogGroupTaggerServiceToken
        SharedEcsAsgInstanceSecurityGroupId: !GetAtt SharedEcsAsgSecurityGroupStack.Outputs.InstanceSecurityGroupId
        DeploymentPackageBucketName: !GetAtt Constants.Outputs.DeploymentPackageBucketName
        BetaHostname: !GetAtt Constants.Outputs.BetaHostname
        CmsHostname: !GetAtt Constants.Outputs.CmsHostname
        ExchangeHostname: !GetAtt Constants.Outputs.ExchangeHostname
        FeederHostname: !GetAtt Constants.Outputs.FeederHostname
        IdHostname: !GetAtt Constants.Outputs.IdHostname
        MetaHostname: !GetAtt Constants.Outputs.MetaHostname
        TheWorldSearchHostname: !GetAtt Constants.Outputs.TheWorldSearchHostname
        TheWorldSearchInternalHostname: !GetAtt Constants.Outputs.TheWorldSearchInternalHostname
        SharedAuroraMysqlEndpoint: !Ref SharedAuroraMysqlEndpoint
        SharedAuroraMysqlPort: !Ref SharedAuroraMysqlPort
        AnnounceResourcePrefix: !GetAtt SharedAnnounceStack.Outputs.ResourcePrefix
        PorterJobExecutionSnsTopicArn: !Sub /prx/${EnvironmentTypeAbbreviation}/Spire/${AWS::Region}/porter-job-execution-topic-arn
        DovetailCdnLogsKinesisStreamArn: !GetAtt SharedDovetailKinesisStack.Outputs.DovetailCdnLogsKinesisStreamArn
        DovetailCountedKinesisStreamArn: !GetAtt SharedDovetailKinesisStack.Outputs.DovetailCountedKinesisStreamArn

        # App-specific parameters

        CmsSharedAlbListenerRulePriorityPrefix: !FindInMap [SharedAlbListenerRulePriorityMap, Cms, prefix]

        IdSharedAlbListenerRulePriorityPrefix: !FindInMap [SharedAlbListenerRulePriorityMap, Id, prefix]

        IframelySharedAlbListenerRulePriorityPrefix: !FindInMap [SharedAlbListenerRulePriorityMap, Iframely, prefix]

        PlaySharedAlbListenerRulePriorityPrefix: !FindInMap [SharedAlbListenerRulePriorityMap, Play, prefix]

        StyleguideSharedAlbListenerRulePriorityPrefix: !FindInMap [SharedAlbListenerRulePriorityMap, Styleguide, prefix]

      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${TemplateUrlBase}/stacks/apps-100A.yml
      TimeoutInMinutes: 40
  Apps200AStack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateApplicationStacks
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Parameters:
        TemplateUrlPrefix: !Sub ${TemplateUrlBase}/stacks/apps
        SlackMessageRelaySnsTopicArn: !Ref SlackMessageRelayTopicArn
        AlbFullName: !GetAtt SharedAlbStack.Outputs.AlbFullName
        AlbHttpsListenerArn: !GetAtt SharedAlbStack.Outputs.HttpsListenerArn
        EcsClusterArn: !GetAtt SharedEcsClusterStack.Outputs.EcsClusterArn
        EcsClusterName: !GetAtt SharedEcsClusterStack.Outputs.EcsClusterName
        VpcId: !GetAtt SharedVpcStack.Outputs.VpcId
        VpcCidrBlock: !GetAtt SharedVpcStack.Outputs.VpcCidrBlock
        VpcIpv6CidrBlocks: !GetAtt SharedVpcStack.Outputs.VpcIpv6CidrBlocks
        NewRelicApiKeyPrxLite: !Ref NewRelicApiKeyPrxLite
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !Ref EnvironmentTypeAbbreviation
        EnvironmentTypeLowercase: !GetAtt Constants.Outputs.EnvironmentTypeLowercase
        RegionMode: !FindInMap [RegionModeMap, !Ref "AWS::Region", !Ref EnvironmentType]
        RootStackName: !Ref AWS::StackName
        RootStackId: !Ref AWS::StackId
        VpcPublicSubnet1Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet1Id
        VpcPublicSubnet2Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet2Id
        VpcPublicSubnet3Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet3Id
        VpcPrivateSubnet1Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet1Id
        VpcPrivateSubnet2Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet2Id
        VpcPrivateSubnet3Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet3Id
        SharedMemcachedEndpointAddress: !GetAtt SharedMemcachedStack.Outputs.CacheEndpointAddress
        SharedMemcachedEndpointPort: !GetAtt SharedMemcachedStack.Outputs.CacheEndpointPort
        SharedRedisReplicationGroupEndpointAddress: !GetAtt SharedRedisStack.Outputs.ReplicationGroupEndpointAddress
        SharedRedisReplicationGroupEndpointPort: !GetAtt SharedRedisStack.Outputs.ReplicationGroupEndpointPort
        AmazonSesSmtpCredentialsGeneratorServiceToken: !GetAtt CustomResourcesStack.Outputs.AmazonSesSmtpCredentialsGeneratorServiceToken
        EchoServiceToken: !GetAtt CustomResourcesStack.Outputs.EchoServiceToken
        CloudWatchAlarmTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchAlarmTaggerServiceToken
        CloudWatchLogGroupTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchLogGroupTaggerServiceToken
        TransferServerIpFinderServiceToken: !GetAtt CustomResourcesStack.Outputs.TransferServerIpFinderServiceToken
        EcsLaunchEndpointsAccessSecurityGroupId: !GetAtt SharedVpcStack.Outputs.EcsLaunchEndpointsAccessSecurityGroupId
        SystemManagerEndpointAccessSecurityGroupId: !GetAtt SharedVpcStack.Outputs.SystemManagerEndpointAccessSecurityGroupId
        KmsEndpointAccessSecurityGroupId: !GetAtt SharedVpcStack.Outputs.KmsEndpointAccessSecurityGroupId
        SharedEcsAsgInstanceSecurityGroupId: !GetAtt SharedEcsAsgSecurityGroupStack.Outputs.InstanceSecurityGroupId
        SharedMysqlClientSecurityGroupId: !GetAtt SharedDatabaseSecurityGroupsStack.Outputs.SharedMysqlClientSecurityGroupId
        S3SigningUserName: !GetAtt Apps100AStack.Outputs.S3SigningUserName
        S3SigningEndpointUrl: !GetAtt Apps100AStack.Outputs.S3SigningEndpointUrl
        S3SigningAccessKeyId: !GetAtt Apps100AStack.Outputs.S3SigningAccessKeyId
        DovetailCdnArrangerFunctionArn: !GetAtt Apps100AStack.Outputs.DovetailCdnArrangerFunctionArn
        DovetailCdnArrangerWorkspaceBucketArn: !GetAtt Apps100AStack.Outputs.DovetailCdnArrangerWorkspaceBucketArn
        S3StaticSiteDeployServiceToken: !GetAtt CustomResourcesStack.Outputs.S3StaticSiteDeployServiceToken
        DeploymentPackageBucketName: !GetAtt Constants.Outputs.DeploymentPackageBucketName
        BetaHostname: !GetAtt Constants.Outputs.BetaHostname
        CastleHostname: !GetAtt Constants.Outputs.CastleHostname
        TheCastleHostname: !GetAtt Constants.Outputs.TheCastleHostname
        CmsHostname: !GetAtt Constants.Outputs.CmsHostname
        TheCountHostname: !GetAtt Constants.Outputs.TheCountHostname
        DovetailRouterHostname: !GetAtt Constants.Outputs.DovetailRouterHostname
        ExchangeHostname: !GetAtt Constants.Outputs.ExchangeHostname
        ExchangeApiHostname: !GetAtt Constants.Outputs.ExchangeApiHostname
        ExchangeTransferHostname: !GetAtt Constants.Outputs.ExchangeTransferHostname
        FeederHostname: !GetAtt Constants.Outputs.FeederHostname
        FeederAuthProxyHostname: !GetAtt Constants.Outputs.FeederAuthProxyHostname
        FeederAuthProxyInternalHostname: !GetAtt Constants.Outputs.FeederAuthProxyInternalHostname
        FixerHostname: !GetAtt Constants.Outputs.FixerHostname
        IdHostname: !GetAtt Constants.Outputs.IdHostname
        MetricsHostname: !GetAtt Constants.Outputs.MetricsHostname
        NetworksHostname: !GetAtt Constants.Outputs.NetworksHostname
        PlayHostname: !GetAtt Constants.Outputs.PlayHostname
        PublicFeedsHostname: !GetAtt Constants.Outputs.PublicFeedsHostname
        RemixHostname: !GetAtt Constants.Outputs.RemixHostname
        SharedAuroraMysqlEndpoint: !Ref SharedAuroraMysqlEndpoint
        SharedAuroraMysqlPort: !Ref SharedAuroraMysqlPort
        SharedAuroraPostgresqlEndpoint: !Ref SharedAuroraPostgresqlEndpoint
        SharedAuroraPostgresqlPort: !Ref SharedAuroraPostgresqlPort
        AnnounceResourcePrefix: !GetAtt SharedAnnounceStack.Outputs.ResourcePrefix
        PorterJobExecutionSnsTopicArn: !Sub /prx/${EnvironmentTypeAbbreviation}/Spire/${AWS::Region}/porter-job-execution-topic-arn

        # App-specific parameters

        CastleSharedAlbListenerRulePriorityPrefix: !FindInMap [SharedAlbListenerRulePriorityMap, Castle, prefix]

        ExchangeSharedAlbListenerRulePriorityPrefix: !FindInMap [SharedAlbListenerRulePriorityMap, Exchange, prefix]

        FeederSharedAlbListenerRulePriorityPrefix: !FindInMap [SharedAlbListenerRulePriorityMap, Feeder, prefix]

        NetworksSharedAlbListenerRulePriorityPrefix: !FindInMap [SharedAlbListenerRulePriorityMap, Networks, prefix]

        PublishSharedAlbListenerRulePriorityPrefix: !FindInMap [SharedAlbListenerRulePriorityMap, Publish, prefix]

        RemixSharedAlbListenerRulePriorityPrefix: !FindInMap [SharedAlbListenerRulePriorityMap, Remix, prefix]
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${TemplateUrlBase}/stacks/apps-200A.yml
      TimeoutInMinutes: 40
  Apps300AStack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateApplicationStacks
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Parameters:
        TemplateUrlPrefix: !Sub ${TemplateUrlBase}/stacks/apps
        AlbFullName: !GetAtt SharedAlbStack.Outputs.AlbFullName
        AlbHttpsListenerArn: !GetAtt SharedAlbStack.Outputs.HttpsListenerArn
        EcsClusterArn: !GetAtt SharedEcsClusterStack.Outputs.EcsClusterArn
        EcsClusterName: !GetAtt SharedEcsClusterStack.Outputs.EcsClusterName
        VpcId: !GetAtt SharedVpcStack.Outputs.VpcId
        NewRelicApiKeyPrxLite: !Ref NewRelicApiKeyPrxLite
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !Ref EnvironmentTypeAbbreviation
        EnvironmentTypeLowercase: !GetAtt Constants.Outputs.EnvironmentTypeLowercase
        RegionMode: !FindInMap [RegionModeMap, !Ref "AWS::Region", !Ref EnvironmentType]
        RootStackName: !Ref AWS::StackName
        RootStackId: !Ref AWS::StackId
        VpcPublicSubnet1Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet1Id
        VpcPublicSubnet2Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet2Id
        VpcPublicSubnet3Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet3Id
        EcsLaunchEndpointsAccessSecurityGroupId: !GetAtt SharedVpcStack.Outputs.EcsLaunchEndpointsAccessSecurityGroupId
        KmsEndpointAccessSecurityGroupId: !GetAtt SharedVpcStack.Outputs.KmsEndpointAccessSecurityGroupId
        DeploymentPackageBucketName: !GetAtt Constants.Outputs.DeploymentPackageBucketName
        EchoServiceToken: !GetAtt CustomResourcesStack.Outputs.EchoServiceToken
        CloudWatchAlarmTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchAlarmTaggerServiceToken
        CloudWatchLogGroupTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchLogGroupTaggerServiceToken
        SharedEcsAsgInstanceSecurityGroupId: !GetAtt SharedEcsAsgSecurityGroupStack.Outputs.InstanceSecurityGroupId
        SharedRedisReplicationGroupEndpointAddress: !GetAtt SharedRedisStack.Outputs.ReplicationGroupEndpointAddress
        SharedRedisReplicationGroupEndpointPort: !GetAtt SharedRedisStack.Outputs.ReplicationGroupEndpointPort
        SharedAuroraPostgresqlEndpoint: !Ref SharedAuroraPostgresqlEndpoint
        SharedAuroraPostgresqlPort: !Ref SharedAuroraPostgresqlPort
        SharedPostgresqlClientSecurityGroupId: !GetAtt SharedDatabaseSecurityGroupsStack.Outputs.SharedPostgresqlClientSecurityGroupId
        CastlePostgresInstanceEndpointAddress: !GetAtt Apps200AStack.Outputs.CastlePostgresInstanceEndpointAddress
        CastlePostgresInstanceEndpointPort: !GetAtt Apps200AStack.Outputs.CastlePostgresInstanceEndpointPort
        CastlePostgresClientSecurityGroupId: !GetAtt Apps200AStack.Outputs.CastlePostgresClientSecurityGroupId
        CastleHostname: !GetAtt Constants.Outputs.CastleHostname
        TheCountHostname: !GetAtt Constants.Outputs.TheCountHostname
        CorporateHostname: !GetAtt Constants.Outputs.CorporateHostname
        ExchangeHostname: !GetAtt Constants.Outputs.ExchangeHostname
        IdHostname: !GetAtt Constants.Outputs.IdHostname
        AdFilesHostname: !GetAtt Constants.Outputs.AdFilesHostname
        AuguryHostname: !GetAtt Constants.Outputs.AuguryHostname
        FeederHostname: !GetAtt Constants.Outputs.FeederHostname
        CmsHostname: !GetAtt Constants.Outputs.CmsHostname
        DovetailCdnHostname: !GetAtt Constants.Outputs.DovetailCdnHostname
        DovetailRouterHostname: !GetAtt Constants.Outputs.DovetailRouterHostname
        SharedGlueDatabaseName: !GetAtt SharedGlueDatabaseStack.Outputs.SharedGlueDatabaseName
        DovetailCountedKinesisStreamArn: !GetAtt SharedDovetailKinesisStack.Outputs.DovetailCountedKinesisStreamArn
        DovetailCountedKinesisStreamName: !GetAtt SharedDovetailKinesisStack.Outputs.DovetailCountedKinesisStreamName
        DovetailVerifiedMetricsKinesisStreamArn: !GetAtt SharedDovetailKinesisStack.Outputs.DovetailVerifiedMetricsKinesisStreamArn
        DovetailVerifiedMetricsKinesisStreamName: !GetAtt SharedDovetailKinesisStack.Outputs.DovetailVerifiedMetricsKinesisStreamName

        # App-specific parameters

        AugurySharedAlbListenerRulePriorityPrefix: !FindInMap [SharedAlbListenerRulePriorityMap, Augury, prefix]

        MetricsSharedAlbListenerRulePriorityPrefix: !FindInMap [SharedAlbListenerRulePriorityMap, Metrics, prefix]
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${TemplateUrlBase}/stacks/apps-300A.yml
      TimeoutInMinutes: 40
  Apps400AStack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateApplicationStacks
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Parameters:
        TemplateUrlPrefix: !Sub ${TemplateUrlBase}/stacks/apps
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !Ref EnvironmentTypeAbbreviation
        EnvironmentTypeLowercase: !GetAtt Constants.Outputs.EnvironmentTypeLowercase
        RegionMode: !FindInMap [RegionModeMap, !Ref "AWS::Region", !Ref EnvironmentType]
        RootStackName: !Ref AWS::StackName
        RootStackId: !Ref AWS::StackId
        VpcId: !GetAtt SharedVpcStack.Outputs.VpcId
        DeploymentPackageBucketName: !GetAtt Constants.Outputs.DeploymentPackageBucketName
        CloudWatchAlarmTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchAlarmTaggerServiceToken
        CloudWatchLogGroupTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchLogGroupTaggerServiceToken
        TheCountLogsFileSystemId: !GetAtt Apps300AStack.Outputs.TheCountLogsFileSystemId
        EcsClusterArn: !GetAtt SharedEcsClusterStack.Outputs.EcsClusterArn
        AlbFullName: !GetAtt SharedAlbStack.Outputs.AlbFullName
        AlbHttpsListenerArn: !GetAtt SharedAlbStack.Outputs.HttpsListenerArn
        AlbInsecureHttpListenerArn: !GetAtt SharedAlbStack.Outputs.InsecureHttpListenerArn
        NewRelicApiKeyPrxLite: !Ref NewRelicApiKeyPrxLite
        SharedAuroraMysqlEndpoint: !Ref SharedAuroraMysqlEndpoint
        SharedAuroraMysqlPort: !Ref SharedAuroraMysqlPort
        SharedAuroraPostgresqlEndpoint: !Ref SharedAuroraPostgresqlEndpoint
        SharedAuroraPostgresqlPort: !Ref SharedAuroraPostgresqlPort
        AnnounceResourcePrefix: !GetAtt SharedAnnounceStack.Outputs.ResourcePrefix
        PorterJobExecutionSnsTopicArn: !Sub /prx/${EnvironmentTypeAbbreviation}/Spire/${AWS::Region}/porter-job-execution-topic-arn
        ExchangeHostname: !GetAtt Constants.Outputs.ExchangeHostname
        S3SigningEndpointUrl: !GetAtt Apps100AStack.Outputs.S3SigningEndpointUrl
        S3SigningAccessKeyId: !GetAtt Apps100AStack.Outputs.S3SigningAccessKeyId
        AmazonSesSmtpCredentialsGeneratorServiceToken: !GetAtt CustomResourcesStack.Outputs.AmazonSesSmtpCredentialsGeneratorServiceToken

        # App-specific parameters

        TheCastleSharedAlbListenerRulePriorityPrefix: !FindInMap [SharedAlbListenerRulePriorityMap, TheCastle, prefix]

        WfmtSharedAlbListenerRulePriorityPrefix: !FindInMap [SharedAlbListenerRulePriorityMap, Wfmt, prefix]
        WfmtHostname: !GetAtt Constants.Outputs.WfmtHostname
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${TemplateUrlBase}/stacks/apps-400A.yml
      TimeoutInMinutes: 40

  # Requires VPC, Redis and DB SGs
  JumpServerStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Parameters:
        AuthorizedKeys: !Join [",", !Ref AuthorizedKeys]
        EnvironmentType: !Ref EnvironmentType
        RootStackName: !Ref AWS::StackName
        RootStackId: !Ref AWS::StackId
        CastlePostgresClientSecurityGroupId: !If [CreateApplicationStacks, !GetAtt Apps200AStack.Outputs.CastlePostgresClientSecurityGroupId, ""]
        CastlePostgresInstanceEndpointAddress: !If [CreateApplicationStacks, !GetAtt Apps200AStack.Outputs.CastlePostgresInstanceEndpointAddress, ""]
        CastlePostgresInstanceEndpointPort: !If [CreateApplicationStacks, !GetAtt Apps200AStack.Outputs.CastlePostgresInstanceEndpointPort, ""]
        SharedAuroraMysqlEndpoint: !Ref SharedAuroraMysqlEndpoint
        SharedAuroraMysqlPort: !Ref SharedAuroraMysqlPort
        SharedAuroraPostgresqlEndpoint: !Ref SharedAuroraPostgresqlEndpoint
        SharedAuroraPostgresqlPort: !Ref SharedAuroraPostgresqlPort
        SharedEcsClusterName: !GetAtt SharedEcsClusterStack.Outputs.EcsClusterName
        SharedMysqlClientSecurityGroupId: !GetAtt SharedDatabaseSecurityGroupsStack.Outputs.SharedMysqlClientSecurityGroupId
        SharedPostgresqlClientSecurityGroupId: !GetAtt SharedDatabaseSecurityGroupsStack.Outputs.SharedPostgresqlClientSecurityGroupId
        SharedRedisClientSecurityGroupId: !GetAtt SharedRedisSecurityGroupStack.Outputs.ClientSecurityGroupId
        SharedRedisReplicationGroupEndpointAddress: !GetAtt SharedRedisStack.Outputs.ReplicationGroupEndpointAddress
        SharedRedisReplicationGroupEndpointPort: !GetAtt SharedRedisStack.Outputs.ReplicationGroupEndpointPort
        VpcId: !GetAtt SharedVpcStack.Outputs.VpcId
        VpcPublicSubnet1Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet1Id
        Temp: !Sub /prx/${EnvironmentTypeAbbreviation}/Spire/${AWS::Region}/porter-state-machine-arn
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${TemplateUrlBase}/stacks/jump-server.yml
      TimeoutInMinutes: 10

  # Assumed to require all possible requirements
  DashboardsStack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateDashboardsStack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Parameters:
        EnvironmentType: !Ref EnvironmentType

        RootStackName: !Ref AWS::StackName
        RootStackId: !Ref AWS::StackName

        InfrastructureGitCommit: !Ref InfrastructureGitCommit

        SharedEcsClusterName: !GetAtt SharedEcsClusterStack.Outputs.EcsClusterName

        SharedVpcId: !GetAtt SharedVpcStack.Outputs.VpcId
        SharedVpcCidrBlock: !GetAtt SharedVpcStack.Outputs.VpcCidrBlock

        SharedEcsAsgName: !GetAtt SharedEcsAsgStack.Outputs.AsgName

        SharedAlbName: !GetAtt SharedAlbStack.Outputs.AlbName
        SharedAlbFullName: !GetAtt SharedAlbStack.Outputs.AlbFullName

        SharedMemcachedCacheName: !GetAtt SharedMemcachedStack.Outputs.CacheName
        SharedRedisReplicationGroupName: !GetAtt SharedRedisStack.Outputs.ReplicationGroupName

        # TODO
        StackResourceGroupName: !If
          - IsUsEast1
          - !GetAtt ResourceGroupsStack.Outputs.StackResourceGroupName
          - TKTKTKTK
        StackLogGroupsGroupName: !If
          - IsUsEast1
          - !GetAtt ResourceGroupsStack.Outputs.StackLogGroupsGroupName
          - TKTKTKTK

        SharedVpcFlowLogsLogGroupName: !GetAtt SharedVpcStack.Outputs.FlowLogsLogGroupName

        AuguryTargetGroupFullName: !GetAtt Apps300AStack.Outputs.AuguryTargetGroupFullName

        WfmtTargetGroupFullName: !GetAtt Apps400AStack.Outputs.WfmtTargetGroupFullName

        BetaDeployBucketRegionalDomainName: !GetAtt Apps200AStack.Outputs.BetaDeployBucketRegionalDomainName

        CastlePostgresInstanceId: !GetAtt Apps200AStack.Outputs.CastlePostgresInstanceId
        CastleTargetGroupFullName: !GetAtt Apps200AStack.Outputs.CastleTargetGroupFullName

        CmsElasticsearchDomainName: !GetAtt Apps100AStack.Outputs.CmsElasticsearchDomainName
        CmsTargetGroupFullName: !GetAtt Apps100AStack.Outputs.CmsTargetGroupFullName

        DovetailAlbName: !GetAtt Apps300AStack.Outputs.DovetailAlbName
        DovetailAlbFullName: !GetAtt Apps300AStack.Outputs.DovetailAlbFullName
        DovetailTargetGroupFullName: !GetAtt Apps300AStack.Outputs.DovetailTargetGroupFullName

        ExchangeWebTargetGroupFullName: !GetAtt Apps200AStack.Outputs.ExchangeWebTargetGroupFullName
        ExchangeFtpServerId: !GetAtt Apps200AStack.Outputs.ExchangeFtpServerId
        ExchangeFtpServerPublicIp: !GetAtt Apps200AStack.Outputs.ExchangeFtpServerPublicIp
        ExchangeFtpServerPublicIpAllocationId: !GetAtt Apps200AStack.Outputs.ExchangeFtpServerPublicIpAllocationId
        ExchangeFtpServerNlbName: !GetAtt Apps200AStack.Outputs.ExchangeFtpServerNlbName

        FeederAuthProxyApiId: !GetAtt Apps200AStack.Outputs.FeederAuthProxyApiId
        FeederWebTargetGroupFullName: !GetAtt Apps200AStack.Outputs.FeederWebTargetGroupFullName

        IdTargetGroupFullName: !GetAtt Apps100AStack.Outputs.IdTargetGroupFullName

        IframelyTargetGroupFullName: !GetAtt Apps100AStack.Outputs.IframelyTargetGroupFullName

        MetricsTargetGroupFullName: !GetAtt Apps300AStack.Outputs.MetricsTargetGroupFullName

        NetworksPublicWebTargetGroupFullName: !GetAtt Apps200AStack.Outputs.NetworksPublicWebTargetGroupFullName

        PlayProxyTargetGroupFullName: !GetAtt Apps100AStack.Outputs.PlayProxyTargetGroupFullName
        PlayWebTargetGroupFullName: !GetAtt Apps100AStack.Outputs.PlayWebTargetGroupFullName

        ProxyApiDefaultEndpoint: !GetAtt Apps300AStack.Outputs.ProxyApiDefaultEndpoint
        ProxyApiId: !GetAtt Apps300AStack.Outputs.ProxyApiId

        PublishTargetGroupFullName: !GetAtt Apps200AStack.Outputs.PublishTargetGroupFullName

        RemixTargetGroupFullName: !GetAtt Apps200AStack.Outputs.RemixTargetGroupFullName

        S3SigningApiId: !GetAtt Apps100AStack.Outputs.S3SigningApiId

        TheCastleTargetGroupFullName: !GetAtt Apps400AStack.Outputs.TheCastleTargetGroupFullName

        TheCountApiId: !GetAtt Apps300AStack.Outputs.TheCountApiId

        TheWorldSearchApiId: !GetAtt Apps100AStack.Outputs.TheWorldSearchApiId
        TheWorldSearchApiEndpoint: !GetAtt Apps100AStack.Outputs.TheWorldSearchApiEndpoint
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${TemplateUrlBase}/stacks/dashboards.yml
      TimeoutInMinutes: 10

Outputs:
  Nonce:
    Value: !Ref Nonce

  EnvironmentType:
    Value: !Ref EnvironmentType
  RegionMode:
    Value: !FindInMap [RegionModeMap, !Ref "AWS::Region", !Ref EnvironmentType]

  ApplicationStacksState:
    Value: !If [CreateApplicationStacks, Created, tktktk]

  SharedVpcId:
    Description: The resource ID for the shared VPC
    Value: !GetAtt SharedVpcStack.Outputs.VpcId

  SharedVpcPublicSubnet1Id:
    Description: The resource ID for public subnet 1
    Value: !GetAtt SharedVpcStack.Outputs.PublicSubnet1Id
  SharedVpcPublicSubnet2Id:
    Description: The resource ID for public subnet 2
    Value: !GetAtt SharedVpcStack.Outputs.PublicSubnet2Id
  SharedVpcPublicSubnet3Id:
    Description: The resource ID for public subnet 3
    Value: !GetAtt SharedVpcStack.Outputs.PublicSubnet3Id

  SharedVpcPrivateSubnet1Id:
    Description: The resource ID for private subnet 1
    Value: !GetAtt SharedVpcStack.Outputs.PrivateSubnet1Id
  SharedVpcPrivateSubnet2Id:
    Description: The resource ID for private subnet 2
    Value: !GetAtt SharedVpcStack.Outputs.PrivateSubnet2Id
  SharedVpcPrivateSubnet3Id:
    Description: The resource ID for private subnet 3
    Value: !GetAtt SharedVpcStack.Outputs.PrivateSubnet3Id

  SharedEcsClusterName:
    Value: !GetAtt SharedEcsClusterStack.Outputs.EcsClusterName

  SharedMysqlClientSecurityGroupId:
    Value: !GetAtt SharedDatabaseSecurityGroupsStack.Outputs.SharedMysqlClientSecurityGroupId
  SharedPostgresqlClientSecurityGroupId:
    Value: !GetAtt SharedDatabaseSecurityGroupsStack.Outputs.SharedPostgresqlClientSecurityGroupId

  SharedAuroraMysqlEndpoint:
    Condition: HasSharedAuroraMysqlEndpoint
    Value: !Ref SharedAuroraMysqlEndpoint
  SharedAuroraMysqlPort:
    Value: !Ref SharedAuroraMysqlPort

  SharedAuroraPostgresqlEndpoint:
    Condition: HasSharedAuroraPostgresqlEndpoint
    Value: !Ref SharedAuroraPostgresqlEndpoint
  SharedAuroraPostgresqlPort:
    Value: !Ref SharedAuroraPostgresqlPort

  TheWorldSearchApiEndpoint:
    Condition: CreateApplicationStacks
    Value: !GetAtt Apps100AStack.Outputs.TheWorldSearchApiEndpoint

  AuguryHostname: { Value: !GetAtt Constants.Outputs.AuguryHostname }
  TheCastleHostname: { Value: !GetAtt Constants.Outputs.TheCastleHostname }
  TheCountHostname: { Value: !GetAtt Constants.Outputs.TheCountHostname }
  CmsHostname: { Value: !GetAtt Constants.Outputs.CmsHostname }
  CorporateHostname: { Value: !GetAtt Constants.Outputs.CorporateHostname }
  DovetailCdnHostname: { Value: !GetAtt Constants.Outputs.DovetailCdnHostname }
  DovetailRouterHostname: { Value: !GetAtt Constants.Outputs.DovetailRouterHostname }
  ExchangeHostname: { Value: !GetAtt Constants.Outputs.ExchangeHostname }
  FeederHostname: { Value: !GetAtt Constants.Outputs.FeederHostname }
  FeederAuthProxyHostname: { Value: !GetAtt Constants.Outputs.FeederAuthProxyHostname }
  IdHostname: { Value: !GetAtt Constants.Outputs.IdHostname }
  MetricsHostname: { Value: !GetAtt Constants.Outputs.MetricsHostname }
  NetworksHostname: { Value: !GetAtt Constants.Outputs.NetworksHostname }
  PlayHostname: { Value: !GetAtt Constants.Outputs.PlayHostname }
  PublishHostname: { Value: !GetAtt Constants.Outputs.PublishHostname }
  RemixHostname: { Value: !GetAtt Constants.Outputs.RemixHostname }
  S3SigningHostname: { Value: !If [CreateApplicationStacks, !GetAtt Apps100AStack.Outputs.S3SigningDomain, ""] }
  TheWorldSearchHostname: { Value: !GetAtt Constants.Outputs.TheWorldSearchHostname }
