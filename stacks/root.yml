# stacks/root.yml
# Generally this template is used to launch stacks from the bootstrapping
# CodePipeline. Primarily is is simply a wrapper around individial app- and
# service-specific templates, which get nested into this template and are
# launched when this one is. The CodePiple also passes in a template
# configuration file, which includes parameter values for this and all nested
# templates. This root template MUST define all parameters that are included in
# the config file. It can then pass along select values to nested stacks that
# require them.
AWSTemplateFormatVersion: "2010-09-09"

Description: >-
  Launches stacks for a number of applications and services that are maintained
  in separate templates. This stack is only intended to be launched once in a
  given region, and launching more than one will likely fail. The stack can
  operate in either Primary or Secondary mode, depending on its current role in
  a multi-region setup.

Parameters:
  # Optional
  SharedAuroraMysqlEndpoint: { Type: String, Default: "" }
  SharedAuroraMysqlPort: { Type: String, Default: "3306" }
  SharedAuroraPostgresqlEndpoint: { Type: String, Default: "" }
  SharedAuroraPostgresqlPort: { Type: String, Default: "3306" }
  NewRelicApiKeyPrxLite: { Type: String, Default: "" }
  CastlePostgresUsername: { Type: String, Default: "" }
  CastlePostgresUserPassword: { Type: String, Default: "", NoEcho: true }
  AuthorizedKeys: { Type: CommaDelimitedList, Default: "", NoEcho: true }
  # Required
  AsgKeyPairName:
    Description: >
      The EC2 key pair used for instances in the Auto Scaling
      group (region-specific)
    Type: AWS::EC2::KeyPair::KeyName
  EnvironmentType:
    Type: String
    AllowedValues:
      - Staging
      - Production
  RegionMode:
    Type: String
    AllowedValues:
      - Primary
      - Secondary
  SharedVpcCidrBlock:
    Type: String
    AllowedPattern: ^(10|172|192).[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}\/16$
    ConstraintDescription: >-
      must be a /16 private network
  CloudFormationNotificationsSnsTopicArn: { Type: String }
  PorterJobExecutionSnsTopicArn: { Type: String }
  SharedResourceSharePrincipals: { Type: CommaDelimitedList }
  FeedsS3BucketArn: { Type: String }
  MediajointS3BucketArn: { Type: String }
  NetworksS3BucketArn: { Type: String }
  WfmtServicesS3BucketArn: { Type: String }
  AdFilesS3BucketArn: { Type: String }
  RemixS3BucketArn: { Type: String }
  TransferS3BucketArn: { Type: String }
  # Application Specific
  AuguryEcrImageTag: { Type: String, Default: "" }
  AugurySecretsVersion: { Type: String, Default: "" }
  RemixEcrImageTag: { Type: String, Default: "" }
  RemixSecretsVersion: { Type: String, Default: "" }
  NetworksEcrImageTag: { Type: String, Default: "" }
  NetworksSecretsVersion: { Type: String, Default: "" }
  MetricsEcrImageTag: { Type: String, Default: "" }
  MetricsSecretsVersion: { Type: String, Default: "" }
  StyleguideEcrImageTag: { Type: String, Default: "" }
  StyleguideSecretsVersion: { Type: String, Default: "" }
  CastleEcrImageTag: { Type: String, Default: "" }
  CastleSecretsVersion: { Type: String, Default: "" }
  CmsEcrImageTag: { Type: String, Default: "" }
  CmsSecretsVersion: { Type: String, Default: "" }
  DovetailRouterEcrImageTag: { Type: String, Default: "" }
  DovetailrouterSecretsVersion: { Type: String, Default: "" }
  ExchangeEcrImageTag: { Type: String, Default: "" }
  ExchangeSecretsVersion: { Type: String, Default: "" }
  FeederEcrImageTag: { Type: String, Default: "" }
  FeederSecretsVersion: { Type: String, Default: "" }
  IdEcrImageTag: { Type: String, Default: "" }
  IdSecretsVersion: { Type: String, Default: "" }
  PlayEcrImageTag: { Type: String, Default: "" }
  PlaySecretsVersion: { Type: String, Default: "" }
  PlayProxyEcrImageTag: { Type: String, Default: "" }
  PublishEcrImageTag: { Type: String, Default: "" }
  PublishSecretsVersion: { Type: String, Default: "" }
  IframelyEcrImageTag: { Type: String, Default: "" }
  IframelySecretsVersion: { Type: String, Default: "" }
  RadiotopiaTowerLambdaCodeS3ObjectKey: { Type: String, Default: "" }
  UploadLambdaCodeS3ObjectKey: { Type: String, Default: "" }
  AnalyticsIngestLambdaCodeS3ObjectKey: { Type: String, Default: "" }
  DovetailCountsLambdaCodeS3ObjectKey: { Type: String, Default: "" }
  DovetailTrafficLambdaCodeS3ObjectKey: { Type: String, Default: "" }
  DovetailCdnArrangerCodeS3ObjectKey: { Type: String, Default: "" }
  DovetailCdnArrangerCloudFrontOai: { Type: String, Default: "" }
  DovetailCdnOriginRequestCodeS3ObjectKey: { Type: String, Default: "" }
  ProxyPrxOrgCodeS3ObjectKey: { Type: String, Default: "" }
  BetaPrxOrgArchiveS3ObjectKey: { Type: String, Default: "" }
  BetaPrxOrgCloudFrontOai: { Type: String, Default: "" }
  BacksawArchiveS3ObjectKey: { Type: String, Default: "" }
  BacksawCloudFrontOai: { Type: String, Default: "" }
  TheWorldSearchCodeS3ObjectKey: { Type: String, Default: "" }
  TheWorldSearchGoogleCustomSearchEngineId: { Type: String, Default: "" }
  TheWorldSearchGoogleCustomSearchApiKey: { Type: String, Default: "" }
  TheCountLambdaCodeS3ObjectKey: { Type: String, Default: "" }
  TheCastleEcrImageTag: { Type: String, Default: "" }
  ThecastleSecretsVersion: { Type: String, Default: "" }
  DovetailMetricsExportCodeS3ObjectKey: { Type: String, Default: "" }
  # Parameter Overrides from the CodePipeline action
  InfrastructureStorageStackName: { Type: String }
  SecretsStackName: { Type: String }
  InfrastructureGitCommit: { Type: String }
  PipelineExecutionNonce: { Type: String }
  SlackMessageRelaySnsTopicArn: { Type: String }

Conditions:
  IsProduction: !Equals [!Ref EnvironmentType, Production]
  IsStaging: !Equals [!Ref EnvironmentType, Staging]
  IsUsEast1: !Equals [!Ref "AWS::Region", us-east-1]
  IsUsWest2: !Equals [!Ref "AWS::Region", us-west-2]
  HasSharedAuroraMysqlEndpoint: !Not [!Equals [!Ref SharedAuroraMysqlEndpoint, ""]]
  HasSharedAuroraPostgresqlEndpoint: !Not [!Equals [!Ref SharedAuroraPostgresqlEndpoint, ""]]
  HasAllSharedAuroraEndpoints: !And [!Condition HasSharedAuroraMysqlEndpoint, !Condition HasSharedAuroraPostgresqlEndpoint]
  CreateDatabaseDependentResources: !Condition HasAllSharedAuroraEndpoints
  # Application stacks require external MySQL/PostgreSQL databases
  CreateApplicationStacks: !Condition CreateDatabaseDependentResources
  # Dashboard requires that application stacks have been created
  CreateDashboardsStack: !Condition CreateApplicationStacks
  # TODO: temporary stack for us-west-2 dovetail
  CreateTemporaryDovetailStack: !And [!Condition IsStaging, !Condition IsUsWest2]

Mappings:
  EnvironmentTypeMap:
    Testing:
      abbreviation: test
      lowercase: testing
    Beta:
      abbreviation: beta
      lowercase: beta
    Staging:
      abbreviation: stag
      lowercase: staging
    Production:
      abbreviation: prod
      lowercase: production
  # Each app should be given a listener rule priority prefix between 1 and 500.
  # In app stacks, listener rule priorities are created by combining the
  # prefix with exactly two more digits. This allows each app to have up to 99
  # rules per listener.
  #
  # Higher-traffic apps should be given a higher priority (lower number) to
  # reduce the number of rules evaluations needed for more common requests.
  #
  # The final rule priority values must be between 1 and 50000.
  SharedAlbListenerRulePriorityMap:
    Feeder: { prefix: 7 }
    Play: { prefix: 11 }
    Exchange: { prefix: 13 }
    Augury: { prefix: 17 }
    Cms: { prefix: 20 }
    Id: { prefix: 24 }
    Castle: { prefix: 26 } # Dovetail Castle
    Remix: { prefix: 29 }
    Publish: { prefix: 31 }
    Metrics: { prefix: 36 }
    TheCount: { prefix: 42 }
    TheCastle: { prefix: 50 } # Legacy Castle
    Styleguide: { prefix: 65 }
    Networks: { prefix: 70 }
    Iframely: { prefix: 73 }

Resources:
  CustomResourcesStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !Ref CloudFormationNotificationsSnsTopicArn
      Parameters:
        StorageStackName: !Ref InfrastructureStorageStackName
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, abbreviation]
        RootStackName: !Ref AWS::StackName
        RootStackId: !Ref AWS::StackId
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Infrastructure }
      TemplateURL:
        Fn::Sub:
          - https://${SourceBucketName}.s3.${AWS::Region}.amazonaws.com/${InfrastructureGitCommit}/stacks/custom-resources.yml
          - SourceBucketName:
              Fn::ImportValue: !Sub ${InfrastructureStorageStackName}-InfrastructureSourceBucket
      TimeoutInMinutes: 5

  Constants:
    Type: Custom::Echo
    Properties:
      ServiceToken: !GetAtt CustomResourcesStack.Outputs.EchoServiceToken
      RootStackName: !Ref AWS::StackName
      RootStackId: !Ref AWS::StackId
      EnvironmentTypeAbbreviation: !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, abbreviation]
      EnvironmentTypeLowercase: !FindInMap [EnvironmentTypeMap, !Ref EnvironmentType, lowercase]
      SourceBucketName:
        Fn::ImportValue: !Sub ${InfrastructureStorageStackName}-InfrastructureSourceBucket
      DeploymentPackageBucketName:
        Fn::ImportValue: !Sub ${InfrastructureStorageStackName}-InfrastructureApplicationCodeBucket
      SecretsBaseRegion:
        Fn::ImportValue: !Sub ${SecretsStackName}-SecretsBaseRegion
      TemplateUrlBase:
        # This is a URL including the hostname of the source bucket, and the
        # path starting with a Git commit hash for the Infrastructure
        # repository. Some or all of the contents of the repo live under that
        # path.
        # It does not include a trailing slash.
        # e.g., https://prx-infrastructure-us-east-1-source.s3.us-east-1.amazonaws.com/000e4f9a6b3836efbfc722fe7d2fd598b03edfd4
        Fn::Sub:
          - https://${SourceBucketName}.s3.${AWS::Region}.amazonaws.com/${InfrastructureGitCommit}
          - SourceBucketName:
              Fn::ImportValue: !Sub ${InfrastructureStorageStackName}-InfrastructureSourceBucket
      # Public application hostnames
      AuguryHostname: !If [IsProduction, augury.prx.org, augury.staging.prx.tech]
      BetaHostname: !If [IsProduction, beta.prx.org, beta.staging.prx.tech]
      CastleHostname: !If [IsProduction, castle.prx.tech, castle.staging.prx.tech]
      CmsHostname: !If [IsProduction, cms.prx.org, cms.staging.prx.tech]
      CorporateHostname: corporate.prx.tech
      DovetailCdnHostname: !If [IsProduction, dovetail3-cdn.prxu.org, dovetail3-cdn-staging.prxu.org]
      DovetailRouterHostname: !If [IsProduction, dovetail.prxu.org, dovetail.staging.prxu.org]
      ExchangeHostname: !If [IsProduction, exchange.prx.org, exchange.staging.prx.tech]
      FeederHostname: !If [IsProduction, feeder.prx.org, feeder.staging.prx.tech]
      FeederAuthProxyHostname: !If [IsProduction, p.prxu.org, p.staging.prxu.org]
      IdHostname: !If [IsProduction, id.prx.org, id.staging.prx.tech]
      MetricsHostname: !If [IsProduction, metrics.prx.org, metrics.staging.prx.tech]
      NetworksHostname: !If [IsProduction, networks.prx.org, networks.staging.prx.tech]
      PlayHostname: !If [IsProduction, play.prx.org, play.staging.prx.tech]
      PublishHostname: !If [IsProduction, publish.prx.org, publish.staging.prx.tech]
      RemixHostname: !If [IsProduction, www.prx.mx, remix.staging.prx.tech]
      TheCastleHostname: !If [IsProduction, thecastle.prx.org, thecastle.staging.prx.tech]
      TheCountHostname: !If [IsProduction, count.prx.org, thecount.staging.prx.tech] # TODO Update prod to thecount.prx.org
      TheWorldSearchHostname: !If [IsProduction, search.theworld.org, search.staging.theworld.org]
      # Internal application hostname
      FeederAuthProxyInternalHostname: !If [IsProduction, p.u.prx.tech, p.staging.u.prx.tech]
      TheWorldSearchInternalHostname: !If [IsProduction, search.theworld.prx.tech, search.staging.theworld.prx.tech]
      # Asset hostnames
      AdFilesHostname: a.prxu.org
      MetaHostname: meta.prx.org
      PublicFeedsHostname: !If [IsProduction, f.prxu.org, f-staging.prxu.org]

  # TODO This is failing in us-west-2; "duplicate key" error
  ResourceGroupsStack:
    Type: AWS::CloudFormation::Stack
    Condition: IsUsEast1
    Properties:
      NotificationARNs:
        - !Ref CloudFormationNotificationsSnsTopicArn
      Parameters:
        RootStackName: !GetAtt Constants.RootStackName
        RootStackId: !GetAtt Constants.RootStackId
        EnvironmentType: !Ref EnvironmentType
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !GetAtt Constants.RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !GetAtt Constants.RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${Constants.TemplateUrlBase}/stacks/resource-groups.yml
      TimeoutInMinutes: 10

  SharedGlueDatabaseStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !Ref CloudFormationNotificationsSnsTopicArn
      Parameters:
        EnvironmentType: !Ref EnvironmentType
        RootStackName: !GetAtt Constants.RootStackName
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !GetAtt Constants.RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !GetAtt Constants.RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${Constants.TemplateUrlBase}/stacks/shared-glue-database.yml
      TimeoutInMinutes: 10

  SharedAnnounceStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !Ref CloudFormationNotificationsSnsTopicArn
      Parameters:
        RootStackName: !GetAtt Constants.RootStackName
        RootStackId: !GetAtt Constants.RootStackId
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !GetAtt Constants.EnvironmentTypeAbbreviation
        HashStringServiceToken: !GetAtt CustomResourcesStack.Outputs.HashStringServiceToken
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !GetAtt Constants.RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !GetAtt Constants.RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${Constants.TemplateUrlBase}/stacks/shared-announce.yml
      TimeoutInMinutes: 10

  SharedDovetailKinesisStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !Ref CloudFormationNotificationsSnsTopicArn
      Parameters:
        RootStackName: !GetAtt Constants.RootStackName
        RootStackId: !GetAtt Constants.RootStackId
        EnvironmentType: !Ref EnvironmentType
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !GetAtt Constants.RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !GetAtt Constants.RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${Constants.TemplateUrlBase}/stacks/shared-dovetail-kinesis.yml
      TimeoutInMinutes: 60

  SharedEcsClusterStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !Ref CloudFormationNotificationsSnsTopicArn
      Parameters:
        EnvironmentType: !Ref EnvironmentType
        RootStackName: !GetAtt Constants.RootStackName
        RootStackId: !GetAtt Constants.RootStackName
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !GetAtt Constants.RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !GetAtt Constants.RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${Constants.TemplateUrlBase}/stacks/shared-ecs/ecs-cluster.yml
      TimeoutInMinutes: 20

  SharedVpcStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !Ref CloudFormationNotificationsSnsTopicArn
      Parameters:
        AvailabilityZoneSelectorServiceToken: !GetAtt CustomResourcesStack.Outputs.AvailabilityZoneSelectorServiceToken
        EnvironmentType: !Ref EnvironmentType
        RootStackName: !GetAtt Constants.RootStackName
        RootStackId: !GetAtt Constants.RootStackId
        TemplateUrlPrefix: !Sub ${Constants.TemplateUrlBase}/stacks/shared-vpc
        CloudFormationNotificationArn: !Ref CloudFormationNotificationsSnsTopicArn
        CloudWatchLogGroupTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchLogGroupTaggerServiceToken
        Ec2ResourceTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.Ec2ResourceTaggerServiceToken
        SharedVpcCidrBlock: !Ref SharedVpcCidrBlock
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !GetAtt Constants.RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !GetAtt Constants.RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${Constants.TemplateUrlBase}/stacks/shared-vpc.yml
      TimeoutInMinutes: 20

  # Requires VPC
  SharedResourceShareStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !Ref CloudFormationNotificationsSnsTopicArn
      Parameters:
        EnvironmentType: !Ref EnvironmentType
        RootStackName: !GetAtt Constants.RootStackName
        RootStackId: !GetAtt Constants.RootStackId
        SharedResourceSharePrincipals: !Join [",", !Ref SharedResourceSharePrincipals]
        VpcPrivateSubnet1: !GetAtt SharedVpcStack.Outputs.PrivateSubnet1Id
        VpcPrivateSubnet2: !GetAtt SharedVpcStack.Outputs.PrivateSubnet2Id
        VpcPrivateSubnet3: !GetAtt SharedVpcStack.Outputs.PrivateSubnet3Id
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !GetAtt Constants.RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !GetAtt Constants.RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${Constants.TemplateUrlBase}/stacks/shared-resource-share.yml
      TimeoutInMinutes: 20

  # Requires VPC
  SharedDatabaseSecurityGroupsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !Ref CloudFormationNotificationsSnsTopicArn
      Parameters:
        EnvironmentType: !Ref EnvironmentType
        RootStackName: !GetAtt Constants.RootStackName
        RootStackId: !GetAtt Constants.RootStackName
        VpcId: !GetAtt SharedVpcStack.Outputs.VpcId
        SharedVpcCidrBlock: !Ref SharedVpcCidrBlock
        SharedAuroraMysqlPort: !Ref SharedAuroraMysqlPort
        SharedAuroraPostgresqlPort: !Ref SharedAuroraPostgresqlPort
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !GetAtt Constants.RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !GetAtt Constants.RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${Constants.TemplateUrlBase}/stacks/shared-db-sg.yml
      TimeoutInMinutes: 20

  # Requires VPC and shared Glue DB
  SharedAlbStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !Ref CloudFormationNotificationsSnsTopicArn
      Parameters:
        EnvironmentType: !Ref EnvironmentType
        RootStackName: !GetAtt Constants.RootStackName
        RootStackId: !GetAtt Constants.RootStackName
        EnvironmentTypeAbbreviation: !GetAtt Constants.EnvironmentTypeAbbreviation
        VpcId: !GetAtt SharedVpcStack.Outputs.VpcId
        VpcPublicSubnet1Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet1Id
        VpcPublicSubnet2Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet2Id
        VpcPublicSubnet3Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet3Id
        CloudWatchAlarmTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchAlarmTaggerServiceToken
        SharedGlueDatabaseName: !GetAtt SharedGlueDatabaseStack.Outputs.SharedGlueDatabaseName
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !GetAtt Constants.RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !GetAtt Constants.RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${Constants.TemplateUrlBase}/stacks/shared-alb.yml
      TimeoutInMinutes: 40

  # Requires VPC and ALB
  SharedEcsAsgSecurityGroupStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !Ref CloudFormationNotificationsSnsTopicArn
      Parameters:
        EnvironmentType: !Ref EnvironmentType
        RootStackName: !GetAtt Constants.RootStackName
        RootStackId: !GetAtt Constants.RootStackName
        VpcId: !GetAtt SharedVpcStack.Outputs.VpcId
        LoadBalancerSecurityGroupId: !GetAtt SharedAlbStack.Outputs.LoadBalancerSecurityGroupId
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !GetAtt Constants.RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !GetAtt Constants.RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${Constants.TemplateUrlBase}/stacks/shared-ecs/asg-sg.yml
      TimeoutInMinutes: 20
  # Requires VPC, ALB, and more
  SharedEcsAsgStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !Ref CloudFormationNotificationsSnsTopicArn
      Parameters:
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !GetAtt Constants.EnvironmentTypeAbbreviation
        RegionMode: !Ref RegionMode
        RootStackName: !GetAtt Constants.RootStackName
        RootStackId: !GetAtt Constants.RootStackName
        SlackMessageRelaySnsTopicArn: !Ref SlackMessageRelaySnsTopicArn
        CloudWatchLogGroupTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchLogGroupTaggerServiceToken
        KeyPairName: !Ref AsgKeyPairName
        AuthorizedKeys: !Join [",", !Ref AuthorizedKeys]
        VpcPublicSubnet1Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet1Id
        VpcPublicSubnet2Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet2Id
        VpcPublicSubnet3Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet3Id
        EcsClusterName: !GetAtt SharedEcsClusterStack.Outputs.EcsClusterName
        SharedEcsAsgInstanceSecurityGroupId: !GetAtt SharedEcsAsgSecurityGroupStack.Outputs.InstanceSecurityGroupId
        LoadBalancerSecurityGroupId: !GetAtt SharedAlbStack.Outputs.LoadBalancerSecurityGroupId
        SharedMysqlClientSecurityGroupId: !GetAtt SharedDatabaseSecurityGroupsStack.Outputs.SharedMysqlClientSecurityGroupId
        SharedPostgresqlClientSecurityGroupId: !GetAtt SharedDatabaseSecurityGroupsStack.Outputs.SharedPostgresqlClientSecurityGroupId
        SharedRedisClientSecurityGroupId: !GetAtt SharedRedisSecurityGroupStack.Outputs.ClientSecurityGroupId
        EcsLaunchEndpointsAccessSecurityGroupId: !GetAtt SharedVpcStack.Outputs.EcsLaunchEndpointsAccessSecurityGroupId
        KmsEndpointAccessSecurityGroupId: !GetAtt SharedVpcStack.Outputs.KmsEndpointAccessSecurityGroupId
        SharedRedisReplicationGroupEndpointAddress: !GetAtt SharedRedisStack.Outputs.ReplicationGroupEndpointAddress
        SharedRedisReplicationGroupEndpointPort: !GetAtt SharedRedisStack.Outputs.ReplicationGroupEndpointPort
        CloudWatchAlarmTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchAlarmTaggerServiceToken
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !GetAtt Constants.RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !GetAtt Constants.RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${Constants.TemplateUrlBase}/stacks/shared-ecs/asg.yml
      TimeoutInMinutes: 1440

  # Requires VPC and ECS ASG SG
  SharedMemcachedStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !Ref CloudFormationNotificationsSnsTopicArn
      Parameters:
        VpcId: !GetAtt SharedVpcStack.Outputs.VpcId
        VpcPrivateSubnet1Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet1Id
        VpcPrivateSubnet2Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet2Id
        VpcPrivateSubnet3Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet3Id
        RootStackId: !GetAtt Constants.RootStackId
        RootStackName: !GetAtt Constants.RootStackName
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !GetAtt Constants.EnvironmentTypeAbbreviation
        CloudWatchAlarmTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchAlarmTaggerServiceToken
        SourceSecurityGroupId1: !GetAtt SharedEcsAsgSecurityGroupStack.Outputs.InstanceSecurityGroupId
        StagingInstanceType: cache.t4g.micro
        ProductionInstanceType: cache.t4g.small
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !GetAtt Constants.RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !GetAtt Constants.RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${Constants.TemplateUrlBase}/stacks/shared-memcached.yml
      TimeoutInMinutes: 40

  # Requires VPC
  SharedRedisSecurityGroupStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !Ref CloudFormationNotificationsSnsTopicArn
      Parameters:
        EnvironmentType: !Ref EnvironmentType
        RootStackName: !GetAtt Constants.RootStackName
        RootStackId: !GetAtt Constants.RootStackName
        VpcId: !GetAtt SharedVpcStack.Outputs.VpcId
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !GetAtt Constants.RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !GetAtt Constants.RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${Constants.TemplateUrlBase}/stacks/shared-redis/security-groups.yml
      TimeoutInMinutes: 20
  # Requires VPC and Redis SG
  SharedRedisStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !Ref CloudFormationNotificationsSnsTopicArn
      Parameters:
        RootStackName: !GetAtt Constants.RootStackName
        RootStackId: !GetAtt Constants.RootStackId
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !GetAtt Constants.EnvironmentTypeAbbreviation
        VpcPrivateSubnet1Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet1Id
        VpcPrivateSubnet2Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet2Id
        VpcPrivateSubnet3Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet3Id
        CloudWatchAlarmTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchAlarmTaggerServiceToken
        SharedRedisClusterSecurityGroupId: !GetAtt SharedRedisSecurityGroupStack.Outputs.ClusterSecurityGroupId
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !GetAtt Constants.RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !GetAtt Constants.RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${Constants.TemplateUrlBase}/stacks/shared-redis/cluster.yml
      TimeoutInMinutes: 60

  # Requires everything above, AND external MySQL/PostgreSQL databases
  Apps100AStack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateApplicationStacks
    Properties:
      NotificationARNs:
        - !Ref CloudFormationNotificationsSnsTopicArn
      Parameters:
        TemplateUrlPrefix: !Sub ${Constants.TemplateUrlBase}/stacks/apps
        CloudFormationNotificationArn: !Ref CloudFormationNotificationsSnsTopicArn
        AlbFullName: !GetAtt SharedAlbStack.Outputs.AlbFullName
        AlbHttpsListenerArn: !GetAtt SharedAlbStack.Outputs.HttpsListenerArn
        EcsClusterArn: !GetAtt SharedEcsClusterStack.Outputs.EcsClusterArn
        VpcId: !GetAtt SharedVpcStack.Outputs.VpcId
        NewRelicApiKeyPrxLite: !Ref NewRelicApiKeyPrxLite
        SecretsBase: !GetAtt Constants.SecretsBaseRegion
        SecretsStackName: !Ref SecretsStackName
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !GetAtt Constants.EnvironmentTypeAbbreviation
        EnvironmentTypeLowercase: !GetAtt Constants.EnvironmentTypeLowercase
        RegionMode: !Ref RegionMode
        RootStackName: !GetAtt Constants.RootStackName
        RootStackId: !GetAtt Constants.RootStackId
        VpcPrivateSubnet1Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet1Id
        VpcPrivateSubnet2Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet2Id
        VpcPrivateSubnet3Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet3Id
        KinesisStreamsEndpointAccessSecurityGroupId: !GetAtt SharedVpcStack.Outputs.KinesisStreamsEndpointAccessSecurityGroupId
        StsEndpointAccessSecurityGroupId: !GetAtt SharedVpcStack.Outputs.StsEndpointAccessSecurityGroupId
        SharedMemcachedEndpointAddress: !GetAtt SharedMemcachedStack.Outputs.CacheEndpointAddress
        SharedRedisClientSecurityGroupId: !GetAtt SharedRedisSecurityGroupStack.Outputs.ClientSecurityGroupId
        SharedRedisReplicationGroupEndpointAddress: !GetAtt SharedRedisStack.Outputs.ReplicationGroupEndpointAddress
        SharedRedisReplicationGroupEndpointPort: !GetAtt SharedRedisStack.Outputs.ReplicationGroupEndpointPort
        AmazonSesSmtpCredentialsGeneratorServiceToken: !GetAtt CustomResourcesStack.Outputs.AmazonSesSmtpCredentialsGeneratorServiceToken
        CloudWatchAlarmTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchAlarmTaggerServiceToken
        CloudWatchLogGroupTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchLogGroupTaggerServiceToken
        SharedEcsAsgInstanceSecurityGroupId: !GetAtt SharedEcsAsgSecurityGroupStack.Outputs.InstanceSecurityGroupId
        DeploymentPackageBucketName: !GetAtt Constants.DeploymentPackageBucketName
        BetaHostname: !GetAtt Constants.BetaHostname
        CmsHostname: !GetAtt Constants.CmsHostname
        DovetailRouterHostname: !GetAtt Constants.DovetailRouterHostname
        ExchangeHostname: !GetAtt Constants.ExchangeHostname
        FeederHostname: !GetAtt Constants.FeederHostname
        IdHostname: !GetAtt Constants.IdHostname
        MetaHostname: !GetAtt Constants.MetaHostname
        TheWorldSearchHostname: !GetAtt Constants.TheWorldSearchHostname
        TheWorldSearchInternalHostname: !GetAtt Constants.TheWorldSearchInternalHostname
        SharedAuroraMysqlEndpoint: !Ref SharedAuroraMysqlEndpoint
        SharedAuroraMysqlPort: !Ref SharedAuroraMysqlPort
        AnnounceResourcePrefix: !GetAtt SharedAnnounceStack.Outputs.ResourcePrefix
        PorterJobExecutionSnsTopicArn: !Ref PorterJobExecutionSnsTopicArn
        FeedsS3BucketArn: !Ref FeedsS3BucketArn
        MediajointS3BucketArn: !Ref MediajointS3BucketArn
        NetworksS3BucketArn: !Ref NetworksS3BucketArn
        WfmtServicesS3BucketArn: !Ref WfmtServicesS3BucketArn
        DovetailCdnLogsKinesisStreamArn: !GetAtt SharedDovetailKinesisStack.Outputs.DovetailCdnLogsKinesisStreamArn
        DovetailCountedKinesisStreamArn: !GetAtt SharedDovetailKinesisStack.Outputs.DovetailCountedKinesisStreamArn

        # App-specific parameters

        CmsEcrImageTag: !Ref CmsEcrImageTag
        CmsSecretsVersion: !Ref CmsSecretsVersion
        CmsSharedAlbListenerRulePriorityPrefix: !FindInMap [SharedAlbListenerRulePriorityMap, Cms, prefix]

        DovetailCdnArrangerLambdaCodeS3ObjectKey: !Ref DovetailCdnArrangerCodeS3ObjectKey
        DovetailCdnArrangerCloudFrontOai: !Ref DovetailCdnArrangerCloudFrontOai

        DovetailCountsLambdaCodeS3ObjectKey: !Ref DovetailCountsLambdaCodeS3ObjectKey

        DovetailTrafficLambdaCodeS3ObjectKey: !Ref DovetailTrafficLambdaCodeS3ObjectKey

        IdEcrImageTag: !Ref IdEcrImageTag
        IdSecretsVersion: !Ref IdSecretsVersion
        IdSharedAlbListenerRulePriorityPrefix: !FindInMap [SharedAlbListenerRulePriorityMap, Id, prefix]

        IframelyEcrImageTag: !Ref IframelyEcrImageTag
        IframelySecretsVersion: !Ref IframelySecretsVersion
        IframelySharedAlbListenerRulePriorityPrefix: !FindInMap [SharedAlbListenerRulePriorityMap, Iframely, prefix]

        PlayEcrImageTag: !Ref PlayEcrImageTag
        PlaySecretsVersion: !Ref PlaySecretsVersion
        PlayProxyEcrImageTag: !Ref PlayProxyEcrImageTag
        PlaySharedAlbListenerRulePriorityPrefix: !FindInMap [SharedAlbListenerRulePriorityMap, Play, prefix]

        RadiotopiaTowerLambdaCodeS3ObjectKey: !Ref RadiotopiaTowerLambdaCodeS3ObjectKey

        S3SigningLambdaCodeS3ObjectKey: !Ref UploadLambdaCodeS3ObjectKey

        StyleguideEcrImageTag: !Ref StyleguideEcrImageTag
        StyleguideSecretsVersion: !Ref StyleguideSecretsVersion
        StyleguideSharedAlbListenerRulePriorityPrefix: !FindInMap [SharedAlbListenerRulePriorityMap, Styleguide, prefix]

        TheWorldSearchGoogleCustomSearchEngineId: !Ref TheWorldSearchGoogleCustomSearchEngineId
        TheWorldSearchGoogleCustomSearchApiKey: !Ref TheWorldSearchGoogleCustomSearchApiKey
        TheWorldSearchCodeS3ObjectKey: !Ref TheWorldSearchCodeS3ObjectKey
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !GetAtt Constants.RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !GetAtt Constants.RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${Constants.TemplateUrlBase}/stacks/apps-100A.yml
      TimeoutInMinutes: 40
  Apps200AStack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateApplicationStacks
    Properties:
      NotificationARNs:
        - !Ref CloudFormationNotificationsSnsTopicArn
      Parameters:
        TemplateUrlPrefix: !Sub ${Constants.TemplateUrlBase}/stacks/apps
        CloudFormationNotificationArn: !Ref CloudFormationNotificationsSnsTopicArn
        SlackMessageRelaySnsTopicArn: !Ref SlackMessageRelaySnsTopicArn
        AlbFullName: !GetAtt SharedAlbStack.Outputs.AlbFullName
        AlbHttpsListenerArn: !GetAtt SharedAlbStack.Outputs.HttpsListenerArn
        EcsClusterArn: !GetAtt SharedEcsClusterStack.Outputs.EcsClusterArn
        EcsClusterName: !GetAtt SharedEcsClusterStack.Outputs.EcsClusterName
        VpcId: !GetAtt SharedVpcStack.Outputs.VpcId
        VpcCidrBlock: !GetAtt SharedVpcStack.Outputs.VpcCidrBlock
        VpcIpv6CidrBlocks: !GetAtt SharedVpcStack.Outputs.VpcIpv6CidrBlocks
        NewRelicApiKeyPrxLite: !Ref NewRelicApiKeyPrxLite
        SecretsBase: !GetAtt Constants.SecretsBaseRegion
        SecretsStackName: !Ref SecretsStackName
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !GetAtt Constants.EnvironmentTypeAbbreviation
        EnvironmentTypeLowercase: !GetAtt Constants.EnvironmentTypeLowercase
        RegionMode: !Ref RegionMode
        RootStackName: !GetAtt Constants.RootStackName
        RootStackId: !GetAtt Constants.RootStackId
        VpcPublicSubnet1Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet1Id
        VpcPublicSubnet2Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet2Id
        VpcPublicSubnet3Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet3Id
        VpcPrivateSubnet1Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet1Id
        VpcPrivateSubnet2Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet2Id
        VpcPrivateSubnet3Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet3Id
        SharedMemcachedEndpointAddress: !GetAtt SharedMemcachedStack.Outputs.CacheEndpointAddress
        SharedMemcachedEndpointPort: !GetAtt SharedMemcachedStack.Outputs.CacheEndpointPort
        SharedRedisReplicationGroupEndpointAddress: !GetAtt SharedRedisStack.Outputs.ReplicationGroupEndpointAddress
        SharedRedisReplicationGroupEndpointPort: !GetAtt SharedRedisStack.Outputs.ReplicationGroupEndpointPort
        AmazonSesSmtpCredentialsGeneratorServiceToken: !GetAtt CustomResourcesStack.Outputs.AmazonSesSmtpCredentialsGeneratorServiceToken
        EchoServiceToken: !GetAtt CustomResourcesStack.Outputs.EchoServiceToken
        CloudWatchAlarmTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchAlarmTaggerServiceToken
        CloudWatchLogGroupTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchLogGroupTaggerServiceToken
        TransferServerIpFinderServiceToken: !GetAtt CustomResourcesStack.Outputs.TransferServerIpFinderServiceToken
        EcsLaunchEndpointsAccessSecurityGroupId: !GetAtt SharedVpcStack.Outputs.EcsLaunchEndpointsAccessSecurityGroupId
        KmsEndpointAccessSecurityGroupId: !GetAtt SharedVpcStack.Outputs.KmsEndpointAccessSecurityGroupId
        SharedEcsAsgInstanceSecurityGroupId: !GetAtt SharedEcsAsgSecurityGroupStack.Outputs.InstanceSecurityGroupId
        SharedMysqlClientSecurityGroupId: !GetAtt SharedDatabaseSecurityGroupsStack.Outputs.SharedMysqlClientSecurityGroupId
        S3SigningUserName: !GetAtt Apps100AStack.Outputs.S3SigningUserName
        S3SigningEndpointUrl: !GetAtt Apps100AStack.Outputs.S3SigningEndpointUrl
        S3SigningAccessKeyId: !GetAtt Apps100AStack.Outputs.S3SigningAccessKeyId
        DovetailCdnArrangerFunctionArn: !GetAtt Apps100AStack.Outputs.DovetailCdnArrangerFunctionArn
        DovetailCdnArrangerWorkspaceBucketArn: !GetAtt Apps100AStack.Outputs.DovetailCdnArrangerWorkspaceBucketArn
        S3StaticSiteDeployServiceToken: !GetAtt CustomResourcesStack.Outputs.S3StaticSiteDeployServiceToken
        DeploymentPackageBucketName: !GetAtt Constants.DeploymentPackageBucketName
        BetaHostname: !GetAtt Constants.BetaHostname
        CastleHostname: !GetAtt Constants.CastleHostname
        TheCastleHostname: !GetAtt Constants.TheCastleHostname
        CmsHostname: !GetAtt Constants.CmsHostname
        TheCountHostname: !GetAtt Constants.TheCountHostname
        DovetailRouterHostname: !GetAtt Constants.DovetailRouterHostname
        ExchangeHostname: !GetAtt Constants.ExchangeHostname
        FeederHostname: !GetAtt Constants.FeederHostname
        FeederAuthProxyHostname: !GetAtt Constants.FeederAuthProxyHostname
        FeederAuthProxyInternalHostname: !GetAtt Constants.FeederAuthProxyInternalHostname
        IdHostname: !GetAtt Constants.IdHostname
        MetricsHostname: !GetAtt Constants.MetricsHostname
        NetworksHostname: !GetAtt Constants.NetworksHostname
        PlayHostname: !GetAtt Constants.PlayHostname
        PublicFeedsHostname: !GetAtt Constants.PublicFeedsHostname
        RemixHostname: !GetAtt Constants.RemixHostname
        SharedAuroraMysqlEndpoint: !Ref SharedAuroraMysqlEndpoint
        SharedAuroraMysqlPort: !Ref SharedAuroraMysqlPort
        SharedAuroraPostgresqlEndpoint: !Ref SharedAuroraPostgresqlEndpoint
        SharedAuroraPostgresqlPort: !Ref SharedAuroraPostgresqlPort
        AnnounceResourcePrefix: !GetAtt SharedAnnounceStack.Outputs.ResourcePrefix
        PorterJobExecutionSnsTopicArn: !Ref PorterJobExecutionSnsTopicArn
        FeedsS3BucketArn: !Ref FeedsS3BucketArn
        MediajointS3BucketArn: !Ref MediajointS3BucketArn
        NetworksS3BucketArn: !Ref NetworksS3BucketArn
        RemixS3BucketArn: !Ref RemixS3BucketArn
        TransferS3BucketArn: !Ref TransferS3BucketArn

        # App-specific parameters

        BetaPrxOrgArchiveS3ObjectKey: !Ref BetaPrxOrgArchiveS3ObjectKey
        BetaPrxOrgCloudFrontOai: !Ref BetaPrxOrgCloudFrontOai

        CastleEcrImageTag: !Ref CastleEcrImageTag
        CastleSecretsVersion: !Ref CastleSecretsVersion
        CastleSharedAlbListenerRulePriorityPrefix: !FindInMap [SharedAlbListenerRulePriorityMap, Castle, prefix]
        CastlePostgresUsername: !Ref CastlePostgresUsername
        CastlePostgresUserPassword: !Ref CastlePostgresUserPassword

        DovetailCdnOriginRequestLambdaCodeS3ObjectKey: !Ref DovetailCdnOriginRequestCodeS3ObjectKey

        ExchangeEcrImageTag: !Ref ExchangeEcrImageTag
        ExchangeSecretsVersion: !Ref ExchangeSecretsVersion
        ExchangeSharedAlbListenerRulePriorityPrefix: !FindInMap [SharedAlbListenerRulePriorityMap, Exchange, prefix]

        FeederEcrImageTag: !Ref FeederEcrImageTag
        FeederSecretsVersion: !Ref FeederSecretsVersion
        FeederSharedAlbListenerRulePriorityPrefix: !FindInMap [SharedAlbListenerRulePriorityMap, Feeder, prefix]

        NetworksEcrImageTag: !Ref NetworksEcrImageTag
        NetworksSecretsVersion: !Ref NetworksSecretsVersion
        NetworksSharedAlbListenerRulePriorityPrefix: !FindInMap [SharedAlbListenerRulePriorityMap, Networks, prefix]

        PublishEcrImageTag: !Ref PublishEcrImageTag
        PublishSecretsVersion: !Ref PublishSecretsVersion
        PublishSharedAlbListenerRulePriorityPrefix: !FindInMap [SharedAlbListenerRulePriorityMap, Publish, prefix]

        RemixEcrImageTag: !Ref RemixEcrImageTag
        RemixSecretsVersion: !Ref RemixSecretsVersion
        RemixSharedAlbListenerRulePriorityPrefix: !FindInMap [SharedAlbListenerRulePriorityMap, Remix, prefix]
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !GetAtt Constants.RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !GetAtt Constants.RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${Constants.TemplateUrlBase}/stacks/apps-200A.yml
      TimeoutInMinutes: 40
  Apps300AStack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateApplicationStacks
    Properties:
      NotificationARNs:
        - !Ref CloudFormationNotificationsSnsTopicArn
      Parameters:
        TemplateUrlPrefix: !Sub ${Constants.TemplateUrlBase}/stacks/apps
        CloudFormationNotificationArn: !Ref CloudFormationNotificationsSnsTopicArn
        AlbFullName: !GetAtt SharedAlbStack.Outputs.AlbFullName
        AlbHttpsListenerArn: !GetAtt SharedAlbStack.Outputs.HttpsListenerArn
        EcsClusterArn: !GetAtt SharedEcsClusterStack.Outputs.EcsClusterArn
        EcsClusterName: !GetAtt SharedEcsClusterStack.Outputs.EcsClusterName
        VpcId: !GetAtt SharedVpcStack.Outputs.VpcId
        SecretsBase: !GetAtt Constants.SecretsBaseRegion
        NewRelicApiKeyPrxLite: !Ref NewRelicApiKeyPrxLite
        SecretsStackName: !Ref SecretsStackName
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !GetAtt Constants.EnvironmentTypeAbbreviation
        EnvironmentTypeLowercase: !GetAtt Constants.EnvironmentTypeLowercase
        RegionMode: !Ref RegionMode
        RootStackName: !GetAtt Constants.RootStackName
        RootStackId: !GetAtt Constants.RootStackId
        VpcPublicSubnet1Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet1Id
        VpcPublicSubnet2Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet2Id
        VpcPublicSubnet3Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet3Id
        VpcPrivateSubnet1Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet1Id
        VpcPrivateSubnet2Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet2Id
        VpcPrivateSubnet3Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet3Id
        EcsLaunchEndpointsAccessSecurityGroupId: !GetAtt SharedVpcStack.Outputs.EcsLaunchEndpointsAccessSecurityGroupId
        KmsEndpointAccessSecurityGroupId: !GetAtt SharedVpcStack.Outputs.KmsEndpointAccessSecurityGroupId
        DeploymentPackageBucketName: !GetAtt Constants.DeploymentPackageBucketName
        EchoServiceToken: !GetAtt CustomResourcesStack.Outputs.EchoServiceToken
        CloudWatchAlarmTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchAlarmTaggerServiceToken
        CloudWatchLogGroupTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchLogGroupTaggerServiceToken
        SharedEcsAsgInstanceSecurityGroupId: !GetAtt SharedEcsAsgSecurityGroupStack.Outputs.InstanceSecurityGroupId
        SharedRedisClientSecurityGroupId: !GetAtt SharedRedisSecurityGroupStack.Outputs.ClientSecurityGroupId
        SharedRedisReplicationGroupEndpointAddress: !GetAtt SharedRedisStack.Outputs.ReplicationGroupEndpointAddress
        SharedRedisReplicationGroupEndpointPort: !GetAtt SharedRedisStack.Outputs.ReplicationGroupEndpointPort
        SharedAuroraPostgresqlEndpoint: !Ref SharedAuroraPostgresqlEndpoint
        SharedAuroraPostgresqlPort: !Ref SharedAuroraPostgresqlPort
        SharedPostgresqlClientSecurityGroupId: !GetAtt SharedDatabaseSecurityGroupsStack.Outputs.SharedPostgresqlClientSecurityGroupId
        CastlePostgresInstanceEndpointAddress: !GetAtt Apps200AStack.Outputs.CastlePostgresInstanceEndpointAddress
        CastlePostgresInstanceEndpointPort: !GetAtt Apps200AStack.Outputs.CastlePostgresInstanceEndpointPort
        CastlePostgresClientSecurityGroupId: !GetAtt Apps200AStack.Outputs.CastlePostgresClientSecurityGroupId
        CastleHostname: !GetAtt Constants.CastleHostname
        TheCountHostname: !GetAtt Constants.TheCountHostname
        CorporateHostname: !GetAtt Constants.CorporateHostname
        ExchangeHostname: !GetAtt Constants.ExchangeHostname
        IdHostname: !GetAtt Constants.IdHostname
        AdFilesHostname: !GetAtt Constants.AdFilesHostname
        AuguryHostname: !GetAtt Constants.AuguryHostname
        FeederHostname: !GetAtt Constants.FeederHostname
        CmsHostname: !GetAtt Constants.CmsHostname
        DovetailCdnHostname: !GetAtt Constants.DovetailCdnHostname
        DovetailRouterHostname: !GetAtt Constants.DovetailRouterHostname
        SharedGlueDatabaseName: !GetAtt SharedGlueDatabaseStack.Outputs.SharedGlueDatabaseName
        AdFilesS3BucketArn: !Ref AdFilesS3BucketArn
        FeedsS3BucketArn: !Ref FeedsS3BucketArn
        DovetailCountedKinesisStreamArn: !GetAtt SharedDovetailKinesisStack.Outputs.DovetailCountedKinesisStreamArn
        DovetailCountedKinesisStreamName: !GetAtt SharedDovetailKinesisStack.Outputs.DovetailCountedKinesisStreamName
        DovetailVerifiedMetricsKinesisStreamArn: !GetAtt SharedDovetailKinesisStack.Outputs.DovetailVerifiedMetricsKinesisStreamArn
        DovetailVerifiedMetricsKinesisStreamName: !GetAtt SharedDovetailKinesisStack.Outputs.DovetailVerifiedMetricsKinesisStreamName

        # App-specific parameters

        AuguryEcrImageTag: !Ref AuguryEcrImageTag
        AugurySecretsVersion: !Ref AugurySecretsVersion
        AugurySharedAlbListenerRulePriorityPrefix: !FindInMap [SharedAlbListenerRulePriorityMap, Augury, prefix]

        DovetailAnalyticsLambdaCodeS3ObjectKey: !Ref AnalyticsIngestLambdaCodeS3ObjectKey

        DovetailRouterEcrImageTag: !Ref DovetailRouterEcrImageTag
        DovetailRouterSecretsVersion: !Ref DovetailrouterSecretsVersion

        MetricsEcrImageTag: !Ref MetricsEcrImageTag
        MetricsSecretsVersion: !Ref MetricsSecretsVersion
        MetricsSharedAlbListenerRulePriorityPrefix: !FindInMap [SharedAlbListenerRulePriorityMap, Metrics, prefix]

        ProxyLambdaCodeS3ObjectKey: !Ref ProxyPrxOrgCodeS3ObjectKey

        TheCountLambdaCodeS3ObjectKey: !Ref TheCountLambdaCodeS3ObjectKey
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !GetAtt Constants.RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !GetAtt Constants.RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${Constants.TemplateUrlBase}/stacks/apps-300A.yml
      TimeoutInMinutes: 40
  Apps400AStack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateApplicationStacks
    Properties:
      NotificationARNs:
        - !Ref CloudFormationNotificationsSnsTopicArn
      Parameters:
        TemplateUrlPrefix: !Sub ${Constants.TemplateUrlBase}/stacks/apps
        CloudFormationNotificationArn: !Ref CloudFormationNotificationsSnsTopicArn
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !GetAtt Constants.EnvironmentTypeAbbreviation
        RegionMode: !Ref RegionMode
        RootStackName: !GetAtt Constants.RootStackName
        RootStackId: !GetAtt Constants.RootStackId
        VpcId: !GetAtt SharedVpcStack.Outputs.VpcId
        DeploymentPackageBucketName: !GetAtt Constants.DeploymentPackageBucketName
        S3StaticSiteDeployServiceToken: !GetAtt CustomResourcesStack.Outputs.S3StaticSiteDeployServiceToken
        CloudWatchAlarmTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchAlarmTaggerServiceToken
        CloudWatchLogGroupTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchLogGroupTaggerServiceToken
        TheCountLogsFileSystemId: !GetAtt Apps300AStack.Outputs.TheCountLogsFileSystemId
        EcsClusterArn: !GetAtt SharedEcsClusterStack.Outputs.EcsClusterArn
        AlbFullName: !GetAtt SharedAlbStack.Outputs.AlbFullName
        AlbHttpsListenerArn: !GetAtt SharedAlbStack.Outputs.HttpsListenerArn
        AlbInsecureHttpListenerArn: !GetAtt SharedAlbStack.Outputs.InsecureHttpListenerArn
        SecretsBase: !GetAtt Constants.SecretsBaseRegion
        NewRelicApiKeyPrxLite: !Ref NewRelicApiKeyPrxLite
        SecretsStackName: !Ref SecretsStackName
        SharedAuroraMysqlEndpoint: !Ref SharedAuroraMysqlEndpoint
        SharedAuroraMysqlPort: !Ref SharedAuroraMysqlPort
        PorterJobExecutionSnsTopicArn: !Ref PorterJobExecutionSnsTopicArn

        # App-specific parameters

        BacksawArchiveS3ObjectKey: !Ref BacksawArchiveS3ObjectKey
        BacksawCloudFrontOai: !Ref BacksawCloudFrontOai

        DovetailMetricsExportCodeS3ObjectKey: !Ref DovetailMetricsExportCodeS3ObjectKey

        TheCastleEcrImageTag: !Ref TheCastleEcrImageTag
        TheCastleSecretsVersion: !Ref ThecastleSecretsVersion
        TheCastleSharedAlbListenerRulePriorityPrefix: !FindInMap [SharedAlbListenerRulePriorityMap, TheCastle, prefix]
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !GetAtt Constants.RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !GetAtt Constants.RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${Constants.TemplateUrlBase}/stacks/apps-400A.yml
      TimeoutInMinutes: 40
  # TODO: temporary. And requires everything above but not MySQL/PostgreSQL
  Apps500AStack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateTemporaryDovetailStack
    Properties:
      NotificationARNs:
        - !Ref CloudFormationNotificationsSnsTopicArn
      Parameters:
        TemplateUrlPrefix: !Sub ${Constants.TemplateUrlBase}/stacks/apps
        CloudFormationNotificationArn: !Ref CloudFormationNotificationsSnsTopicArn
        EcsClusterArn: !GetAtt SharedEcsClusterStack.Outputs.EcsClusterArn
        EcsClusterName: !GetAtt SharedEcsClusterStack.Outputs.EcsClusterName
        EnvironmentType: !Ref EnvironmentType
        EnvironmentTypeAbbreviation: !GetAtt Constants.EnvironmentTypeAbbreviation
        RootStackName: !GetAtt Constants.RootStackName
        RootStackId: !GetAtt Constants.RootStackId
        VpcId: !GetAtt SharedVpcStack.Outputs.VpcId
        NewRelicApiKeyPrxLite: !Ref NewRelicApiKeyPrxLite
        SecretsBase: !GetAtt Constants.SecretsBaseRegion
        SecretsStackName: !Ref SecretsStackName
        VpcPublicSubnet1Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet1Id
        VpcPublicSubnet2Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet2Id
        VpcPublicSubnet3Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet3Id
        VpcPrivateSubnet1Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet1Id
        VpcPrivateSubnet2Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet2Id
        VpcPrivateSubnet3Id: !GetAtt SharedVpcStack.Outputs.PrivateSubnet3Id
        KinesisStreamsEndpointAccessSecurityGroupId: !GetAtt SharedVpcStack.Outputs.KinesisStreamsEndpointAccessSecurityGroupId
        StsEndpointAccessSecurityGroupId: !GetAtt SharedVpcStack.Outputs.StsEndpointAccessSecurityGroupId
        CloudWatchAlarmTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchAlarmTaggerServiceToken
        CloudWatchLogGroupTaggerServiceToken: !GetAtt CustomResourcesStack.Outputs.CloudWatchLogGroupTaggerServiceToken
        SharedEcsAsgInstanceSecurityGroupId: !GetAtt SharedEcsAsgSecurityGroupStack.Outputs.InstanceSecurityGroupId
        DeploymentPackageBucketName: !GetAtt Constants.DeploymentPackageBucketName
        EchoServiceToken: !GetAtt CustomResourcesStack.Outputs.EchoServiceToken
        SharedGlueDatabaseName: !GetAtt SharedGlueDatabaseStack.Outputs.SharedGlueDatabaseName

        SharedRedisClientSecurityGroupId: !GetAtt SharedRedisSecurityGroupStack.Outputs.ClientSecurityGroupId
        SharedRedisReplicationGroupEndpointAddress: !GetAtt SharedRedisStack.Outputs.ReplicationGroupEndpointAddress
        SharedRedisReplicationGroupEndpointPort: !GetAtt SharedRedisStack.Outputs.ReplicationGroupEndpointPort

        DovetailCdnLogsKinesisStreamArn: !GetAtt SharedDovetailKinesisStack.Outputs.DovetailCdnLogsKinesisStreamArn
        DovetailCountedKinesisStreamArn: !GetAtt SharedDovetailKinesisStack.Outputs.DovetailCountedKinesisStreamArn
        DovetailCountedKinesisStreamName: !GetAtt SharedDovetailKinesisStack.Outputs.DovetailCountedKinesisStreamName
        DovetailVerifiedMetricsKinesisStreamArn: !GetAtt SharedDovetailKinesisStack.Outputs.DovetailVerifiedMetricsKinesisStreamArn
        DovetailVerifiedMetricsKinesisStreamName: !GetAtt SharedDovetailKinesisStack.Outputs.DovetailVerifiedMetricsKinesisStreamName

        AuguryHostname: !GetAtt Constants.AuguryHostname
        DovetailCdnHostname: !GetAtt Constants.DovetailCdnHostname
        DovetailRouterHostname: !GetAtt Constants.DovetailRouterHostname
        FeederHostname: !GetAtt Constants.FeederHostname
        FeedsS3BucketArn: !Ref FeedsS3BucketArn

        DovetailAnalyticsLambdaCodeS3ObjectKey: !Ref AnalyticsIngestLambdaCodeS3ObjectKey
        DovetailCdnArrangerLambdaCodeS3ObjectKey: !Ref DovetailCdnArrangerCodeS3ObjectKey
        DovetailCdnArrangerCloudFrontOai: !Ref DovetailCdnArrangerCloudFrontOai
        DovetailCountsLambdaCodeS3ObjectKey: !Ref DovetailCountsLambdaCodeS3ObjectKey
        DovetailRouterEcrImageTag: !Ref DovetailRouterEcrImageTag
        DovetailRouterSecretsVersion: !Ref DovetailrouterSecretsVersion
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !GetAtt Constants.RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !GetAtt Constants.RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${Constants.TemplateUrlBase}/stacks/apps-500A-tmp.yml
      TimeoutInMinutes: 40

  # Requires VPC, Redis and DB SGs
  JumpServerStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !Ref CloudFormationNotificationsSnsTopicArn
      Parameters:
        AuthorizedKeys: !Join [",", !Ref AuthorizedKeys]
        EnvironmentType: !Ref EnvironmentType
        KeyPairName: !Ref AsgKeyPairName
        RootStackName: !GetAtt Constants.RootStackName
        RootStackId: !GetAtt Constants.RootStackId
        CastlePostgresClientSecurityGroupId: !If [CreateApplicationStacks, !GetAtt Apps200AStack.Outputs.CastlePostgresClientSecurityGroupId, ""]
        SharedMysqlClientSecurityGroupId: !GetAtt SharedDatabaseSecurityGroupsStack.Outputs.SharedMysqlClientSecurityGroupId
        SharedPostgresqlClientSecurityGroupId: !GetAtt SharedDatabaseSecurityGroupsStack.Outputs.SharedPostgresqlClientSecurityGroupId
        SharedRedisClientSecurityGroupId: !GetAtt SharedRedisSecurityGroupStack.Outputs.ClientSecurityGroupId
        VpcId: !GetAtt SharedVpcStack.Outputs.VpcId
        VpcPublicSubnet1Id: !GetAtt SharedVpcStack.Outputs.PublicSubnet1Id
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !GetAtt Constants.RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !GetAtt Constants.RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${Constants.TemplateUrlBase}/stacks/jump-server.yml
      TimeoutInMinutes: 10

  # Assumed to require all possible requirements
  DashboardsStack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateDashboardsStack
    Properties:
      NotificationARNs:
        - !Ref CloudFormationNotificationsSnsTopicArn
      Parameters:
        EnvironmentType: !Ref EnvironmentType

        RootStackName: !GetAtt Constants.RootStackName
        RootStackId: !GetAtt Constants.RootStackName

        InfrastructureGitCommit: !Ref InfrastructureGitCommit

        SharedEcsClusterName: !GetAtt SharedEcsClusterStack.Outputs.EcsClusterName

        SharedVpcId: !GetAtt SharedVpcStack.Outputs.VpcId
        SharedVpcCidrBlock: !GetAtt SharedVpcStack.Outputs.VpcCidrBlock

        SharedEcsAsgName: !GetAtt SharedEcsAsgStack.Outputs.AsgName

        SharedAlbName: !GetAtt SharedAlbStack.Outputs.AlbName
        SharedAlbFullName: !GetAtt SharedAlbStack.Outputs.AlbFullName

        SharedMemcachedCacheName: !GetAtt SharedMemcachedStack.Outputs.CacheName
        SharedRedisReplicationGroupName: !GetAtt SharedRedisStack.Outputs.ReplicationGroupName

        # TODO
        StackResourceGroupName: !If
          - IsUsEast1
          - !GetAtt ResourceGroupsStack.Outputs.StackResourceGroupName
          - TKTKTKTK
        StackLogGroupsGroupName: !If
          - IsUsEast1
          - !GetAtt ResourceGroupsStack.Outputs.StackLogGroupsGroupName
          - TKTKTKTK

        SharedVpcFlowLogsLogGroupName: !GetAtt SharedVpcStack.Outputs.FlowLogsLogGroupName

        AuguryTargetGroupFullName: !GetAtt Apps300AStack.Outputs.AuguryTargetGroupFullName

        BacksawDeployBucketRegionalDomainName: !GetAtt Apps400AStack.Outputs.BacksawDeployBucketRegionalDomainName

        BetaDeployBucketRegionalDomainName: !GetAtt Apps200AStack.Outputs.BetaDeployBucketRegionalDomainName

        CastlePostgresInstanceId: !GetAtt Apps200AStack.Outputs.CastlePostgresInstanceId
        CastleTargetGroupFullName: !GetAtt Apps200AStack.Outputs.CastleTargetGroupFullName

        CmsElasticsearchDomainName: !GetAtt Apps100AStack.Outputs.CmsElasticsearchDomainName
        CmsTargetGroupFullName: !GetAtt Apps100AStack.Outputs.CmsTargetGroupFullName

        DovetailAlbName: !GetAtt Apps300AStack.Outputs.DovetailAlbName
        DovetailAlbFullName: !GetAtt Apps300AStack.Outputs.DovetailAlbFullName
        DovetailTargetGroupFullName: !GetAtt Apps300AStack.Outputs.DovetailTargetGroupFullName

        ExchangeWebTargetGroupFullName: !GetAtt Apps200AStack.Outputs.ExchangeWebTargetGroupFullName

        FeederAuthProxyApiId: !GetAtt Apps200AStack.Outputs.FeederAuthProxyApiId
        FeederWebTargetGroupFullName: !GetAtt Apps200AStack.Outputs.FeederWebTargetGroupFullName

        IdTargetGroupFullName: !GetAtt Apps100AStack.Outputs.IdTargetGroupFullName

        IframelyTargetGroupFullName: !GetAtt Apps100AStack.Outputs.IframelyTargetGroupFullName

        MetricsTargetGroupFullName: !GetAtt Apps300AStack.Outputs.MetricsTargetGroupFullName

        NetworksPublicWebTargetGroupFullName: !GetAtt Apps200AStack.Outputs.NetworksPublicWebTargetGroupFullName

        PlayProxyTargetGroupFullName: !GetAtt Apps100AStack.Outputs.PlayProxyTargetGroupFullName
        PlayWebTargetGroupFullName: !GetAtt Apps100AStack.Outputs.PlayWebTargetGroupFullName

        ProxyApiDefaultEndpoint: !GetAtt Apps300AStack.Outputs.ProxyApiDefaultEndpoint
        ProxyApiId: !GetAtt Apps300AStack.Outputs.ProxyApiId

        PublishTargetGroupFullName: !GetAtt Apps200AStack.Outputs.PublishTargetGroupFullName

        RemixTargetGroupFullName: !GetAtt Apps200AStack.Outputs.RemixTargetGroupFullName

        S3SigningApiId: !GetAtt Apps100AStack.Outputs.S3SigningApiId

        TheCastleTargetGroupFullName: !GetAtt Apps400AStack.Outputs.TheCastleTargetGroupFullName

        TheCountApiId: !GetAtt Apps300AStack.Outputs.TheCountApiId

        TheWorldSearchApiId: !GetAtt Apps100AStack.Outputs.TheWorldSearchApiId
        TheWorldSearchApiEndpoint: !GetAtt Apps100AStack.Outputs.TheWorldSearchApiEndpoint
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !GetAtt Constants.RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !GetAtt Constants.RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: Common }
      TemplateURL: !Sub ${Constants.TemplateUrlBase}/stacks/dashboards.yml
      TimeoutInMinutes: 10

Outputs:
  PipelineExecutionNonce:
    Value: !Ref PipelineExecutionNonce

  EnvironmentType:
    Value: !Ref EnvironmentType
  RegionMode:
    Value: !Ref RegionMode

  ApplicationStacksState:
    Value: !If [CreateApplicationStacks, Created, tktktk]

  SharedVpcId:
    Description: The resource ID for the shared VPC
    Value: !GetAtt SharedVpcStack.Outputs.VpcId

  SharedVpcPublicSubnet1Id:
    Description: The resource ID for public subnet 1
    Value: !GetAtt SharedVpcStack.Outputs.PublicSubnet1Id
  SharedVpcPublicSubnet2Id:
    Description: The resource ID for public subnet 2
    Value: !GetAtt SharedVpcStack.Outputs.PublicSubnet2Id
  SharedVpcPublicSubnet3Id:
    Description: The resource ID for public subnet 3
    Value: !GetAtt SharedVpcStack.Outputs.PublicSubnet3Id

  SharedVpcPrivateSubnet1Id:
    Description: The resource ID for private subnet 1
    Value: !GetAtt SharedVpcStack.Outputs.PrivateSubnet1Id
  SharedVpcPrivateSubnet2Id:
    Description: The resource ID for private subnet 2
    Value: !GetAtt SharedVpcStack.Outputs.PrivateSubnet2Id
  SharedVpcPrivateSubnet3Id:
    Description: The resource ID for private subnet 3
    Value: !GetAtt SharedVpcStack.Outputs.PrivateSubnet3Id

  SharedEcsClusterName:
    Value: !GetAtt SharedEcsClusterStack.Outputs.EcsClusterName

  SharedMysqlClientSecurityGroupId:
    Value: !GetAtt SharedDatabaseSecurityGroupsStack.Outputs.SharedMysqlClientSecurityGroupId
  SharedPostgresqlClientSecurityGroupId:
    Value: !GetAtt SharedDatabaseSecurityGroupsStack.Outputs.SharedPostgresqlClientSecurityGroupId

  SharedAuroraMysqlEndpoint:
    Condition: HasSharedAuroraMysqlEndpoint
    Value: !Ref SharedAuroraMysqlEndpoint
  SharedAuroraMysqlPort:
    Value: !Ref SharedAuroraMysqlPort

  SharedAuroraPostgresqlEndpoint:
    Condition: HasSharedAuroraPostgresqlEndpoint
    Value: !Ref SharedAuroraPostgresqlEndpoint
  SharedAuroraPostgresqlPort:
    Value: !Ref SharedAuroraPostgresqlPort

  TheWorldSearchApiEndpoint:
    Condition: CreateApplicationStacks
    Value: !GetAtt Apps100AStack.Outputs.TheWorldSearchApiEndpoint

  AuguryHostname: { Value: !GetAtt Constants.AuguryHostname }
  TheCastleHostname: { Value: !GetAtt Constants.TheCastleHostname }
  TheCountHostname: { Value: !GetAtt Constants.TheCountHostname }
  CmsHostname: { Value: !GetAtt Constants.CmsHostname }
  CorporateHostname: { Value: !GetAtt Constants.CorporateHostname }
  DovetailCdnHostname: { Value: !GetAtt Constants.DovetailCdnHostname }
  DovetailRouterHostname: { Value: !GetAtt Constants.DovetailRouterHostname }
  ExchangeHostname: { Value: !GetAtt Constants.ExchangeHostname }
  FeederHostname: { Value: !GetAtt Constants.FeederHostname }
  FeederAuthProxyHostname: { Value: !GetAtt Constants.FeederAuthProxyHostname }
  IdHostname: { Value: !GetAtt Constants.IdHostname }
  MetricsHostname: { Value: !GetAtt Constants.MetricsHostname }
  NetworksHostname: { Value: !GetAtt Constants.NetworksHostname }
  PlayHostname: { Value: !GetAtt Constants.PlayHostname }
  PublishHostname: { Value: !GetAtt Constants.PublishHostname }
  RemixHostname: { Value: !GetAtt Constants.RemixHostname }
  S3SigningHostname: { Value: !If [CreateApplicationStacks, !GetAtt Apps100AStack.Outputs.S3SigningDomain, ""] }
  TheWorldSearchHostname: { Value: !GetAtt Constants.TheWorldSearchHostname }
