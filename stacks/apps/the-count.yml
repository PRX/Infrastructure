# stacks/apps/theworld-search.yml
# 300A
AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Description: >-
  Creates an API Gateway and Lambda function for The Count

Conditions:
  IsProduction: !Equals [!Ref EnvironmentType, Production]

Parameters:
  EnvironmentType: { Type: String }
  EnvironmentTypeAbbreviation: { Type: String }
  RootStackName: { Type: String }
  RootStackId: { Type: String }
  CloudWatchAlarmTaggerServiceToken: { Type: String }
  CloudWatchLogGroupTaggerServiceToken: { Type: String }
  CodeS3Bucket: { Type: String }
  # CodeS3ObjectKey: { Type: String }
  CountHostname: { Type: String }

Resources:
  # ExternalCertificate:
  #   Type: AWS::CertificateManager::Certificate
  #   Properties:
  #     DomainName: !Ref CountHostname
  #     Tags:
  #       - { Key: Name, Value: !Sub "${RootStackName}_the-count" }
  #       - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
  #       - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
  #       - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
  #       - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
  #       - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
  #       - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
  #       - { Key: prx:dev:application, Value: The Count }
  #     ValidationMethod: DNS

  # API
  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration:
        AllowHeaders:
          - Content-Type
          - X-Amz-Date
          - Authorization
          - X-Api-Key
          - X-Amz-Security-Token
        AllowMethods:
          - GET
          - OPTIONS
        AllowOrigins:
          - "*"
      Description: !Sub >-
        ${EnvironmentType} The Count
      Tags:
        prx:meta:tagging-version: "2021-04-07"
        prx:cloudformation:stack-name: !Ref AWS::StackName
        prx:cloudformation:stack-id: !Ref AWS::StackId
        prx:cloudformation:root-stack-name: !Ref RootStackName
        prx:cloudformation:root-stack-id: !Ref RootStackId
        prx:ops:environment: !Ref EnvironmentType
        prx:dev:application: The Count

  # EndpointFunction:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     CodeUri:
  #       Bucket: !Ref CodeS3Bucket
  #       Key: !Ref CodeS3ObjectKey
  #     Description: The Count
  #     Events:
  #       ApiRequest:
  #         Properties:
  #           ApiId: !Ref HttpApi
  #           Method: get
  #           Path: /query
  #         Type: HttpApi
  #     Handler: index.handler
  #     MemorySize: 192
  #     Runtime: nodejs14.x
  #     Tags:
  #       prx:meta:tagging-version: "2021-04-07"
  #       prx:cloudformation:stack-name: !Ref AWS::StackName
  #       prx:cloudformation:stack-id: !Ref AWS::StackId
  #       prx:cloudformation:root-stack-name: !Ref RootStackName
  #       prx:cloudformation:root-stack-id: !Ref RootStackId
  #       prx:ops:environment: !Ref EnvironmentType
  #       prx:dev:application: The Count
  #     Timeout: 16

  # EndpointFunctionLogGroup:
  #   Type: AWS::Logs::LogGroup
  #   Properties:
  #     LogGroupName: !Sub /aws/lambda/${EndpointFunction}
  #     RetentionInDays: 14
  # EndpointFunctionLogGroupTags:
  #   Type: Custom::CloudWatchLogGroupTags
  #   Properties:
  #     ServiceToken: !Ref CloudWatchLogGroupTaggerServiceToken
  #     LogGroupName: !Ref EndpointFunctionLogGroup
  #     Tags:
  #       - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
  #       - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
  #       - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
  #       - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
  #       - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
  #       - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
  #       - { Key: prx:dev:application, Value: The Count }
