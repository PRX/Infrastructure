# stacks/apps/cms.yml
AWSTemplateFormatVersion: "2010-09-09"

Description: >-
  Creates an ECS service for the public CMS web server, along with target
  group and listener rule for the shared ALB. Also creates an ECS service for
  the CMS workers, as well as an Elasticsearch domain used by CMS.

Parameters:
  kWebContainerName:
    Type: String
    Default: cms-web
  kWorkerContainerName:
    Type: String
    Default: cms-worker
  kApplicationPort:
    Type: Number
    Default: 3000
  #######
  AlbFullName: { Type: String }
  AlbHttpsListenerArn: { Type: String }
  EcsClusterArn: { Type: String }
  EnvironmentType: { Type: String }
  EnvironmentTypeAbbreviation: { Type: String }
  RegionMode: { Type: String }
  RootStackName: { Type: String }
  RootStackId: { Type: String }
  VpcId: { Type: AWS::EC2::VPC::Id }
  CloudWatchAlarmTaggerServiceToken: { Type: String }
  SecretsBase: { Type: String }
  EcrImageTag: { Type: String }
  SecretsVersion: { Type: String }
  AlbListenerRulePriorityPrefix: { Type: String }
  SecretsStackName: { Type: String }
  SharedMemcachedEndpointAddress: { Type: String }
  VpcPrivateSubnet1Id: { Type: AWS::EC2::Subnet::Id }
  VpcPrivateSubnet2Id: { Type: AWS::EC2::Subnet::Id }
  SharedEcsAsgInstanceSecurityGroupId: { Type: AWS::EC2::SecurityGroup::Id }
  SharedRdsMysqlEndpoint: { Type: String }
  SharedAuroraMysqlEndpoint: { Type: String }
  SharedAuroraMysqlPort: { Type: String }

Conditions:
  IsProduction: !Equals [!Ref EnvironmentType, Production]
  IsPrimaryRegion: !Equals [!Ref RegionMode, Primary]
  HasRdsEndpoint: !Not [!Equals [!Ref SharedRdsMysqlEndpoint, ""]]
  HasAuroraEndpoint: !Not [!Equals [!Ref SharedAuroraMysqlEndpoint, ""]]
  EnableWorkers: !And [!Condition HasAuroraEndpoint, !Condition IsPrimaryRegion]

Resources:
  HostHeaderListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
      Conditions:
        - Field: host-header
          Values:
            - cms.*
      ListenerArn: !Ref AlbHttpsListenerArn
      Priority: !Join ["", [!Ref AlbListenerRulePriorityPrefix, "01"]]

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 15
      HealthCheckPath: /api/v1
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: "30"
      Tags:
        - { Key: Name, Value: !Sub "${RootStackName}_cms" }
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: CMS }
      TargetType: instance
      UnhealthyThresholdCount: 3
      VpcId: !Ref VpcId
  TargetGroupHttp5xxAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsProduction
    Properties:
      AlarmName: !Sub ERROR [CMS] Web server <${EnvironmentTypeAbbreviation}> RETURNING 5XX ERRORS (${RootStackName})
      AlarmDescription: !Sub >-
        ${EnvironmentType} CMS's Rails server is returning 5XX errors from
        the ECS service to the load balancer.
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: LoadBalancer
          Value: !Ref AlbFullName
        - Name: TargetGroup
          Value: !GetAtt TargetGroup.TargetGroupFullName
      EvaluationPeriods: 1
      MetricName: HTTPCode_Target_5XX_Count
      Namespace: AWS/ApplicationELB
      Period: 60
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching
  TargetGroupHttp5xxAlarmTags:
    Type: Custom::CloudWatchAlarmTags
    Condition: IsProduction
    Properties:
      ServiceToken: !Ref CloudWatchAlarmTaggerServiceToken
      AlarmArn: !GetAtt TargetGroupHttp5xxAlarm.Arn
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:ops:cloudwatch-log-group-name, Value: !Ref WebTaskLogGroup }
        - { Key: prx:dev:application, Value: CMS }

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::ImportValue: !Sub ${SecretsStackName}-SecretsInstanceDecryptPolicyArn
        - Fn::ImportValue: !Sub ${SecretsStackName}-SecretsInstanceAccessPolicyArn
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: CMS }
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: CMS }

  WebEcsService:
    Type: AWS::ECS::Service
    Condition: HasAuroraEndpoint # See README
    Properties:
      Cluster: !Ref EcsClusterArn
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 2
      EnableECSManagedTags: true
      LoadBalancers:
        - ContainerName: !Ref kWebContainerName
          ContainerPort: !Ref kApplicationPort
          TargetGroupArn: !Ref TargetGroup
      PropagateTags: TASK_DEFINITION
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: CMS }
      TaskDefinition: !Ref WebTaskDefinition
  WorkerEcsService:
    Type: AWS::ECS::Service
    Condition: EnableWorkers # See README
    Properties:
      Cluster: !Ref EcsClusterArn
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 0 # TODO
      EnableECSManagedTags: true
      PropagateTags: TASK_DEFINITION
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: CMS }
      TaskDefinition: !Ref WorkerTaskDefinition

  WebTaskLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
  WebTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Command:
            - web
          Cpu: !If [IsProduction, 200, 128]
          Environment:
            - Name: APP_NAME
              Value: cms
            - Name: APP_ENV
              Value: !Ref EnvironmentTypeAbbreviation
            - Name: AWS_SECRETS_BASE
              Value: !Ref SecretsBase
            - Name: AWS_SECRETS_VERSION
              Value: !Ref SecretsVersion
            - Name: AWS_DEFAULT_REGION
              Value: !Ref AWS::Region
            - Name: MEMCACHE_SERVERS
              Value: !Ref SharedMemcachedEndpointAddress
            - Name: ELASTICSEARCH_URL
              Value: !Sub https://${ElasticsearchDomain.DomainEndpoint}:9200
            - Name: DB_PORT_3306_TCP_ADDR
              Value: !If [IsProduction, !Ref SharedRdsMysqlEndpoint, !Ref SharedAuroraMysqlEndpoint]
            - Name: DB_PORT_3306_TCP_PORT
              Value: "3306"
            - Name: AUDIO_CALLBACK_QUEUE_NAME
              Value: !GetAtt AudioCallbackQueue.QueueName
            - Name: IMAGE_CALLBACK_QUEUE_NAME
              Value: !GetAtt ImageCallbackQueue.QueueName
            - Name: PODCAST_IMPORT_QUEUE_NAME
              Value: !GetAtt PodcastImportQueue.QueueName
            - Name: SEARCH_INDEXER_QUEUE_NAME
              Value: !GetAtt SearchIndexerQueue.QueueName
            - Name: DEFAULT_JOB_QUEUE_NAME
              Value: !GetAtt DefaultJobQueue.QueueName
          Essential: true
          Image: !Ref EcrImageTag
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref WebTaskLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          Memory: !If [IsProduction, 2000, 1000]
          MemoryReservation: !If [IsProduction, 1000, 500]
          Name: !Ref kWebContainerName
          PortMappings:
            - ContainerPort: !Ref kApplicationPort
              HostPort: 0
      ExecutionRoleArn: !GetAtt ExecutionRole.Arn
      NetworkMode: bridge
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: CMS }
      TaskRoleArn: !GetAtt TaskRole.Arn

  WorkerTaskLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
  WorkerTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Command:
            - worker
          Cpu: !If [IsProduction, 200, 128]
          Environment:
            - Name: APP_NAME
              Value: cms
            - Name: APP_ENV
              Value: !Ref EnvironmentTypeAbbreviation
            - Name: AWS_SECRETS_BASE
              Value: !Ref SecretsBase
            - Name: AWS_SECRETS_VERSION
              Value: !Ref SecretsVersion
            - Name: AWS_DEFAULT_REGION
              Value: !Ref AWS::Region
            - Name: MEMCACHE_SERVERS
              Value: !Ref SharedMemcachedEndpointAddress
            - Name: ELASTICSEARCH_URL
              Value: !Sub https://${ElasticsearchDomain.DomainEndpoint}:9200
            - Name: DB_PORT_3306_TCP_ADDR
              Value: !If [IsProduction, !Ref SharedRdsMysqlEndpoint, !Ref SharedAuroraMysqlEndpoint]
            - Name: DB_PORT_3306_TCP_PORT
              Value: "3306"
            - Name: AUDIO_CALLBACK_QUEUE_NAME
              Value: !GetAtt AudioCallbackQueue.QueueName
            - Name: IMAGE_CALLBACK_QUEUE_NAME
              Value: !GetAtt ImageCallbackQueue.QueueName
            - Name: PODCAST_IMPORT_QUEUE_NAME
              Value: !GetAtt PodcastImportQueue.QueueName
            - Name: SEARCH_INDEXER_QUEUE_NAME
              Value: !GetAtt SearchIndexerQueue.QueueName
            - Name: DEFAULT_JOB_QUEUE_NAME
              Value: !GetAtt DefaultJobQueue.QueueName
          Essential: true
          Image: !Ref EcrImageTag
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref WorkerTaskLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          Memory: !If [IsProduction, 2000, 1000]
          MemoryReservation: !If [IsProduction, 1000, 500]
          Name: !Ref kWorkerContainerName
          PortMappings:
            - ContainerPort: !Ref kApplicationPort
              HostPort: 0
      ExecutionRoleArn: !GetAtt ExecutionRole.Arn
      NetworkMode: bridge
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: CMS }
      TaskRoleArn: !GetAtt TaskRole.Arn

  ElasticsearchSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: !Sub CMS ${EnvironmentType} Elasticsearch security group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 9200
          SourceSecurityGroupId: !Ref SharedEcsAsgInstanceSecurityGroupId
          ToPort: 9200
      Tags:
        - { Key: Name, Value: !Sub "${RootStackName}_cms_elasticsearch" }
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: CMS }
  ElasticsearchDomain:
    Type: AWS::Elasticsearch::Domain
    Properties:
      # AccessPolicies: Json
      AdvancedSecurityOptions:
        Enabled: false
      DomainEndpointOptions:
        EnforceHTTPS: true
        TLSSecurityPolicy: Policy-Min-TLS-1-2-2019-07
      EBSOptions:
        EBSEnabled: true
        VolumeSize: 10 # GiB
        VolumeType: gp2
      ElasticsearchClusterConfig:
        InstanceCount: !If [IsProduction, 2, 1]
        InstanceType: t3.small.elasticsearch
        ZoneAwarenessEnabled: !If [IsProduction, true, false]
      ElasticsearchVersion: "7.9"
      EncryptionAtRestOptions:
        Enabled: false
      NodeToNodeEncryptionOptions:
        Enabled: false
      SnapshotOptions:
        AutomatedSnapshotStartHour: 8 # UTC
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: CMS }
      VPCOptions:
        SecurityGroupIds:
          - !GetAtt ElasticsearchSecurityGroup.GroupId
        SubnetIds:
          - !Ref VpcPrivateSubnet1Id
          - !If [IsProduction, !Ref VpcPrivateSubnet2Id, !Ref "AWS::NoValue"]

  AudioCallbackQueue:
    Type: AWS::SQS::Queue # TODO Alarms?
    Properties:
      DelaySeconds: 0
      MessageRetentionPeriod: 604800 # 7 days
      ReceiveMessageWaitTimeSeconds: 0
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt AudioCallbackDeadletterQueue.Arn
        maxReceiveCount: 10
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: CMS }
      VisibilityTimeout: 3600 # 1 hour
  AudioCallbackDeadletterQueue:
    Type: AWS::SQS::Queue
    Properties:
      DelaySeconds: 0
      MessageRetentionPeriod: 604800 # 7 days
      ReceiveMessageWaitTimeSeconds: 0
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: CMS }
      VisibilityTimeout: 3600 # 1 hour
  AudioCallbackDeadletterQueueMessageAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsProduction
    Properties:
      AlarmName: !Sub ERROR [CMS] Audio dead-letter queue <${EnvironmentTypeAbbreviation}> NOT EMPTY (${RootStackName})
      AlarmDescription: !Sub >-
        ${EnvironmentType} CMS's dead-letter queue for the audio callback
        queue is not empty, which means some job callbacks were not
        successfully processed.
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: QueueName
          Value: !GetAtt AudioCallbackDeadletterQueue.QueueName
      EvaluationPeriods: 1
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Period: 60
      Statistic: Average
      Threshold: 0
      TreatMissingData: notBreaching
  AudioCallbackDeadletterQueueMessageAlarmTags:
    Type: Custom::CloudWatchAlarmTags
    Condition: IsProduction
    Properties:
      ServiceToken: !Ref CloudWatchAlarmTaggerServiceToken
      AlarmArn: !GetAtt AudioCallbackDeadletterQueueMessageAlarm.Arn
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:ops:cloudwatch-log-group-name, Value: !Ref WorkerTaskLogGroup }
        - { Key: prx:dev:application, Value: CMS }

  ImageCallbackQueue:
    Type: AWS::SQS::Queue # TODO Alarms?
    Properties:
      DelaySeconds: 0
      MessageRetentionPeriod: 604800 # 7 days
      ReceiveMessageWaitTimeSeconds: 0
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt ImageCallbackDeadletterQueue.Arn
        maxReceiveCount: 10
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: CMS }
      VisibilityTimeout: 3600 # 1 hour
  ImageCallbackDeadletterQueue:
    Type: AWS::SQS::Queue
    Properties:
      DelaySeconds: 0
      MessageRetentionPeriod: 604800 # 7 days
      ReceiveMessageWaitTimeSeconds: 0
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: CMS }
      VisibilityTimeout: 3600 # 1 hour
  ImageCallbackDeadletterQueueMessageAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsProduction
    Properties:
      AlarmName: !Sub ERROR [CMS] Image dead-letter queue <${EnvironmentTypeAbbreviation}> NOT EMPTY (${RootStackName})
      AlarmDescription: !Sub >-
        ${EnvironmentType} CMS's dead-letter queue for the image callback
        queue is not empty, which means some job callbacks were not
        successfully processed.
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: QueueName
          Value: !GetAtt ImageCallbackDeadletterQueue.QueueName
      EvaluationPeriods: 1
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Period: 60
      Statistic: Average
      Threshold: 0
      TreatMissingData: notBreaching
  ImageCallbackDeadletterQueueMessageAlarmTags:
    Type: Custom::CloudWatchAlarmTags
    Condition: IsProduction
    Properties:
      ServiceToken: !Ref CloudWatchAlarmTaggerServiceToken
      AlarmArn: !GetAtt ImageCallbackDeadletterQueueMessageAlarm.Arn
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:ops:cloudwatch-log-group-name, Value: !Ref WorkerTaskLogGroup }
        - { Key: prx:dev:application, Value: CMS }

  PodcastImportQueue:
    Type: AWS::SQS::Queue # TODO Alarms?
    Properties:
      DelaySeconds: 0
      MessageRetentionPeriod: 604800 # 7 days
      ReceiveMessageWaitTimeSeconds: 0
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt PodcastImportDeadletterQueue.Arn
        maxReceiveCount: 10
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: CMS }
      VisibilityTimeout: 3600 # 1 hour
  PodcastImportDeadletterQueue:
    Type: AWS::SQS::Queue
    Properties:
      DelaySeconds: 0
      MessageRetentionPeriod: 604800 # 7 days
      ReceiveMessageWaitTimeSeconds: 0
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: CMS }
      VisibilityTimeout: 3600 # 1 hour
  PodcastImportDeadletterQueueMessageAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsProduction
    Properties:
      AlarmName: !Sub ERROR [CMS] Import dead-letter queue <${EnvironmentTypeAbbreviation}> NOT EMPTY (${RootStackName})
      AlarmDescription: !Sub >-
        ${EnvironmentType} CMS's dead-letter queue for the podcast import
        callback queue is not empty, which means some imports were not
        successfully.
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: QueueName
          Value: !GetAtt PodcastImportDeadletterQueue.QueueName
      EvaluationPeriods: 1
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Period: 60
      Statistic: Average
      Threshold: 0
      TreatMissingData: notBreaching
  PodcastImportDeadletterQueueMessageAlarmTags:
    Type: Custom::CloudWatchAlarmTags
    Condition: IsProduction
    Properties:
      ServiceToken: !Ref CloudWatchAlarmTaggerServiceToken
      AlarmArn: !GetAtt PodcastImportDeadletterQueueMessageAlarm.Arn
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:ops:cloudwatch-log-group-name, Value: !Ref WorkerTaskLogGroup }
        - { Key: prx:dev:application, Value: CMS }

  SearchIndexerQueue:
    Type: AWS::SQS::Queue # TODO Alarms?
    Properties:
      DelaySeconds: 0
      MessageRetentionPeriod: 604800 # 7 days
      ReceiveMessageWaitTimeSeconds: 0
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt SearchIndexerDeadletterQueue.Arn
        maxReceiveCount: 10
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: CMS }
      VisibilityTimeout: 3600 # 1 hour
  SearchIndexerDeadletterQueue:
    Type: AWS::SQS::Queue
    Properties:
      DelaySeconds: 0
      MessageRetentionPeriod: 604800 # 7 days
      ReceiveMessageWaitTimeSeconds: 0
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: CMS }
      VisibilityTimeout: 3600 # 1 hour
  SearchIndexerDeadletterQueueMessageAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsProduction
    Properties:
      AlarmName: !Sub ERROR [CMS] Search index dead-letter queue <${EnvironmentTypeAbbreviation}> NOT EMPTY (${RootStackName})
      AlarmDescription: !Sub >-
        ${EnvironmentType} CMS's dead-letter queue for the search index
        queue is not empty, which means some indexing jobs were not successful.
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: QueueName
          Value: !GetAtt SearchIndexerDeadletterQueue.QueueName
      EvaluationPeriods: 1
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Period: 60
      Statistic: Average
      Threshold: 0
      TreatMissingData: notBreaching
  SearchIndexerDeadletterQueueMessageAlarmTags:
    Type: Custom::CloudWatchAlarmTags
    Condition: IsProduction
    Properties:
      ServiceToken: !Ref CloudWatchAlarmTaggerServiceToken
      AlarmArn: !GetAtt SearchIndexerDeadletterQueueMessageAlarm.Arn
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:ops:cloudwatch-log-group-name, Value: !Ref WorkerTaskLogGroup }
        - { Key: prx:dev:application, Value: CMS }

  DefaultJobQueue:
    Type: AWS::SQS::Queue # TODO Alarms?
    Properties:
      DelaySeconds: 0
      MessageRetentionPeriod: 604800 # 7 days
      ReceiveMessageWaitTimeSeconds: 0
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DefaultJobDeadletterQueue.Arn
        maxReceiveCount: 10
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: CMS }
      VisibilityTimeout: 3600 # 1 hour
  DefaultJobDeadletterQueue:
    Type: AWS::SQS::Queue
    Properties:
      DelaySeconds: 0
      MessageRetentionPeriod: 604800 # 7 days
      ReceiveMessageWaitTimeSeconds: 0
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:dev:application, Value: CMS }
      VisibilityTimeout: 3600 # 1 hour
  DefaultJobDeadletterQueueMessageAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsProduction
    Properties:
      AlarmName: !Sub ERROR [CMS] Default dead-letter queue <${EnvironmentTypeAbbreviation}> NOT EMPTY (${RootStackName})
      AlarmDescription: !Sub >-
        ${EnvironmentType} CMS's dead-letter queue for the default
        queue is not empty, which means some jobs were not successful.
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: QueueName
          Value: !GetAtt DefaultJobDeadletterQueue.QueueName
      EvaluationPeriods: 1
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Period: 60
      Statistic: Average
      Threshold: 0
      TreatMissingData: notBreaching
  DefaultJobDeadletterQueueMessageAlarmTags:
    Type: Custom::CloudWatchAlarmTags
    Condition: IsProduction
    Properties:
      ServiceToken: !Ref CloudWatchAlarmTaggerServiceToken
      AlarmArn: !GetAtt DefaultJobDeadletterQueueMessageAlarm.Arn
      Tags:
        - { Key: prx:meta:tagging-version, Value: "2021-04-07" }
        - { Key: prx:cloudformation:stack-name, Value: !Ref AWS::StackName }
        - { Key: prx:cloudformation:stack-id, Value: !Ref AWS::StackId }
        - { Key: prx:cloudformation:root-stack-name, Value: !Ref RootStackName }
        - { Key: prx:cloudformation:root-stack-id, Value: !Ref RootStackId }
        - { Key: prx:ops:environment, Value: !Ref EnvironmentType }
        - { Key: prx:ops:cloudwatch-log-group-name, Value: !Ref WorkerTaskLogGroup }
        - { Key: prx:dev:application, Value: CMS }

  # TODO
  # # callback queues are being slow
  # CmsAudioCallbackSlowAlarm:
  #   Type: AWS::CloudWatch::Alarm
  #   Properties:
  #     AlarmName: !Sub "[CMS][Worker][SQS] - ${EnvironmentType} Audio Callbacks Slow"
  #     AlarmDescription: Audio callbacks are behind
  #     ComparisonOperator: GreaterThanThreshold
  #     EvaluationPeriods: 3
  #     MetricName: ApproximateAgeOfOldestMessage
  #     Namespace: AWS/SQS
  #     Period: 60
  #     Statistic: Average
  #     Threshold: 60
  #     TreatMissingData: notBreaching
  #     Dimensions:
  #       - Name: QueueName
  #         Value: !Ref AudioSqsCallbackName
  # CmsImageCallbackSlowAlarm:
  #   Type: AWS::CloudWatch::Alarm
  #   Properties:
  #     AlarmName: !Sub "[CMS][Worker][SQS] - ${EnvironmentType} Image Callbacks Slow"
  #     AlarmDescription: Image callbacks are behind
  #     ComparisonOperator: GreaterThanThreshold
  #     EvaluationPeriods: 3
  #     MetricName: ApproximateAgeOfOldestMessage
  #     Namespace: AWS/SQS
  #     Period: 60
  #     Statistic: Average
  #     Threshold: 60
  #     TreatMissingData: notBreaching
  #     Dimensions:
  #       - Name: QueueName
  #         Value: !Ref ImageSqsCallbackName
  # # callback queues likely aren't processing
  # CmsAudioCallbackFatalAlarm:
  #   Type: AWS::CloudWatch::Alarm
  #   Properties:
  #     AlarmName: !Sub "[CMS][Worker][SQS] - ${EnvironmentType} Audio Callbacks Not Processing"
  #     AlarmDescription: Audio callbacks are maybe not processing
  #     ComparisonOperator: GreaterThanOrEqualToThreshold
  #     EvaluationPeriods: 1
  #     MetricName: ApproximateAgeOfOldestMessage
  #     Namespace: AWS/SQS
  #     Period: 60
  #     Statistic: Average
  #     Threshold: 300
  #     TreatMissingData: notBreaching
  #     Dimensions:
  #       - Name: QueueName
  #         Value: !Ref AudioSqsCallbackName
  # CmsImageCallbackFatalAlarm:
  #   Type: AWS::CloudWatch::Alarm
  #   Properties:
  #     AlarmName: !Sub "[CMS][Worker][SQS] - ${EnvironmentType} Image Callbacks Not Processing"
  #     AlarmDescription: Image callbacks are maybe not processing
  #     ComparisonOperator: GreaterThanOrEqualToThreshold
  #     EvaluationPeriods: 1
  #     MetricName: ApproximateAgeOfOldestMessage
  #     Namespace: AWS/SQS
  #     Period: 60
  #     Statistic: Average
  #     Threshold: 300
  #     TreatMissingData: notBreaching
  #     Dimensions:
  #       - Name: QueueName
  #         Value: !Ref ImageSqsCallbackName

Outputs:
  ElasticsearchDomainName:
    Value: !Ref ElasticsearchDomain

  TargetGroupFullName:
    Value: !GetAtt TargetGroup.TargetGroupFullName
