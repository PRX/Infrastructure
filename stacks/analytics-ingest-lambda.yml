AWSTemplateFormatVersion: "2010-09-09"
Description: Analytics ingest lambda functions
Conditions:
  CreateProductionResources: !Equals [!Ref EnvironmentType, Production]
Parameters:
  OpsWarnMessagesSnsTopicArn:
    Type: String
  OpsErrorMessagesSnsTopicArn:
    Type: String
  CodeS3Bucket:
    Type: String
  CodeS3ObjectVersion:
    Type: String
  EnvironmentType:
    Type: String
  EnvironmentTypeAbbreviation:
    Type: String
Mappings:
  VPCSettingsMap:
    test:
      redishost: ""
      vpcsecurity: ""
      vpcsubnets: ""
    beta:
      redishost: ""
      vpcsecurity: ""
      vpcsubnets: ""
    stag:
      redishost: "prx-castle-staging.bbsmj9.0001.use1.cache.amazonaws.com"
      vpcsecurity: "sg-8128d3f8"
      vpcsubnets: "subnet-89ac7dff,subnet-79442344"
    prod:
      redishost: "prx-castle-prod.bbsmj9.0001.use1.cache.amazonaws.com"
      vpcsecurity: "sg-c6eb1da1"
      vpcsubnets: "subnet-83ed9fda,subnet-414e296a,subnet-a0bce4d7,subnet-a0dfd19a"
Resources:
  # IAM Roles
  AnalyticsLambdaExecutionIAMRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
            - Effect: "Allow"
              Principal:
                Service:
                  - "lambda.amazonaws.com"
              Action:
                - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: ParameterStoreReadPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ssm:DescribeParameters"
                  - "ssm:GetParameters"
                  - "ssm:GetParametersByPath"
                Resource:
                  - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/prx/${EnvironmentTypeAbbreviation}/analytics-*"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaKinesisExecutionRole"
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
  # Lambda Functions
  AnalyticsBigqueryLambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket: !Ref CodeS3Bucket
        S3Key: lambda/PRX-analytics-ingest-lambda.zip
        S3ObjectVersion: !Ref CodeS3ObjectVersion
      Description: Dovetail analytics to BigQuery
      Environment:
        Variables:
          PARAMSTORE_PREFIX: !Sub "/prx/${EnvironmentTypeAbbreviation}/analytics-bigquery"
          BQ_IMPRESSIONS_TABLE: "impressions"
          BQ_DOWNLOADS_TABLE: "downloads"
          BQ_PROJECT_ID: "prx-metrics"
      Handler: index.handler
      MemorySize: 256
      Role: !GetAtt AnalyticsLambdaExecutionIAMRole.Arn
      Runtime: nodejs6.10
      Timeout: 30
  AnalyticsPingbacksLambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket: !Ref CodeS3Bucket
        S3Key: lambda/PRX-analytics-ingest-lambda.zip
        S3ObjectVersion: !Ref CodeS3ObjectVersion
      Description: Dovetail analytics http pingbacks
      Environment:
        Variables:
          PINGBACKS: "true"
      Handler: index.handler
      MemorySize: 256
      Role: !GetAtt AnalyticsLambdaExecutionIAMRole.Arn
      Runtime: nodejs6.10
      Timeout: 30
  AnalyticsRedisLambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket: !Ref CodeS3Bucket
        S3Key: lambda/PRX-analytics-ingest-lambda.zip
        S3ObjectVersion: !Ref CodeS3ObjectVersion
      Description: Dovetail analytics redis increments
      Environment:
        Variables:
          REDIS_HOST: !FindInMap [VPCSettingsMap, !Ref EnvironmentTypeAbbreviation, redishost]
          REDIS_TTL: "7200"
      Handler: index.handler
      MemorySize: 256
      Role: !GetAtt AnalyticsLambdaExecutionIAMRole.Arn
      Runtime: nodejs6.10
      Timeout: 30
      VpcConfig:
        SecurityGroupIds: !Split [",", !FindInMap [VPCSettingsMap, !Ref EnvironmentTypeAbbreviation, vpcsecurity]]
        SubnetIds: !Split [",", !FindInMap [VPCSettingsMap, !Ref EnvironmentTypeAbbreviation, vpcsubnets]]
  # Lambda Alarms
  AnalyticsBigqueryErrorAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[AnalyticsLambda][BigQuery][Errors] ${EnvironmentType} > 1"
      AlarmActions:
        - !If [CreateProductionResources, !Ref OpsErrorMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      InsufficientDataActions:
        - !If [CreateProductionResources, !Ref OpsErrorMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      OKActions:
        - !If [CreateProductionResources, !Ref OpsErrorMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      AlarmDescription:
        Too many analytics bigquery lambda errors
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: "2"
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: "300"
      Statistic: Sum
      Threshold: "1"
      TreatMissingData: notBreaching
      Dimensions:
        - Name: FunctionName
          Value: !Ref AnalyticsBigqueryLambdaFunction
  AnalyticsBigqueryInvocationsAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CreateProductionResources
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[AnalyticsLambda][BigQuery][Invocations] ${EnvironmentType} < 1500"
      AlarmActions:
        - !If [CreateProductionResources, !Ref OpsErrorMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      InsufficientDataActions:
        - !If [CreateProductionResources, !Ref OpsErrorMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      OKActions:
        - !If [CreateProductionResources, !Ref OpsErrorMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      AlarmDescription:
        Too few invocations
      ComparisonOperator: LessThanThreshold
      EvaluationPeriods: "1"
      MetricName: Invocations
      Namespace: AWS/Lambda
      Period: "300"
      Statistic: Sum
      Threshold: "1500"
      TreatMissingData: breaching
      Dimensions:
        - Name: FunctionName
          Value: !Ref AnalyticsBigqueryLambdaFunction
  AnalyticsPingbacksErrorAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[AnalyticsLambda][Pingbacks][Errors] ${EnvironmentType} > 0"
      AlarmActions:
        - !If [CreateProductionResources, !Ref OpsErrorMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      InsufficientDataActions:
        - !If [CreateProductionResources, !Ref OpsErrorMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      OKActions:
        - !If [CreateProductionResources, !Ref OpsErrorMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      AlarmDescription:
        Too many analytics pingbacks lambda errors
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: "1"
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: "300"
      Statistic: Sum
      Threshold: "0"
      TreatMissingData: notBreaching
      Dimensions:
        - Name: FunctionName
          Value: !Ref AnalyticsPingbacksLambdaFunction
  AnalyticsRedisErrorAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "[AnalyticsLambda][Redis][Errors] ${EnvironmentType} > 0"
      AlarmActions:
        - !If [CreateProductionResources, !Ref OpsErrorMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      InsufficientDataActions:
        - !If [CreateProductionResources, !Ref OpsErrorMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      OKActions:
        - !If [CreateProductionResources, !Ref OpsErrorMessagesSnsTopicArn, !Ref OpsWarnMessagesSnsTopicArn]
      AlarmDescription:
        Too many analytics redis lambda errors
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: "1"
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: "300"
      Statistic: Sum
      Threshold: "0"
      TreatMissingData: notBreaching
      Dimensions:
        - Name: FunctionName
          Value: !Ref AnalyticsRedisLambdaFunction
