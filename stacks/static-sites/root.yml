AWSTemplateFormatVersion: "2010-09-09"
Description: >
  TKTKTK
Conditions:
  IsUsEast1: !Equals [!Ref "AWS::Region", us-east-1]
  IsStaging: !Equals [!Ref EnvironmentType, Staging]
  IsProduction: !Equals [!Ref EnvironmentType, Production]
Parameters:
  InfrastructureStorageStackName:
    Type: String
  InfrastructureNotificationsStackName:
    Type: String
  EnvironmentType:
    Type: String
Resources:
  Temp:
    Type: "AWS::SNS::Topic"
  # ## S3 static site deploy
  S3StaticSiteDeployIamRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: S3SyncPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:PutObject"
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                Resource:
                  - !Join ["", ["arn:aws:s3:::", "Fn::ImportValue": !Sub "${InfrastructureStorageStackName}-InfrastructureApplicationCodeBucket", "/*"]]
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
  # S3StaticSiteDeployFunction:
  #   Type: "AWS::Lambda::Function"
  #   Properties:
  #     Code:
  #       S3Bucket:
  #         Fn::ImportValue:
  #           !Sub ${InfrastructureStorageStackName}-InfrastructureSupportBucket
  #       S3Key: utility/s3-static-site-deploy.zip
  #     Description: Deploys the contents of a zip archive to an S3 bucket
  #     Handler: lambda_function.lambda_handler
  #     MemorySize: 256
  #     Role: !GetAtt S3StaticSiteDeployIamRole.Arn
  #     Runtime: python3.6
  #     Tags:
  #       - Key: Project
  #         Value: Infrastructure
  #       - Key: "prx:cloudformation:stack-name"
  #         Value: !Ref AWS::StackName
  #       - Key: "prx:cloudformation:stack-id"
  #         Value: !Ref AWS::StackId
  #     Timeout: 60
  # # Static site stacks
  # RadiotopiaRadioStack:
  #   Type: "AWS::CloudFormation::Stack"
  #   Properties:
  #     NotificationARNs:
  #       - Fn::ImportValue:
  #           !Sub "${InfrastructureNotificationsStackName}-CloudFormationNotificationSnsTopic"
  #     Parameters:
  #       CodeS3Bucket:
  #         Fn::ImportValue:
  #           !Sub "${InfrastructureStorageStackName}-InfrastructureApplicationCodeBucket"
  #       StaticSiteArchiveS3ObjectVersion: !Ref RadiotopiaRadioArchiveS3ObjectVersion
  #       StaticSiteS3StagingDeployBucket: "/prx/stag/radio.radiotopia.fm/DEPLOY_S3_BUCKET"
  #       StaticSiteS3ProductionDeployBucket: "/prx/prod/radio.radiotopia.fm/DEPLOY_S3_BUCKET"
  #       EnvironmentType: !Ref EnvironmentType
  #       S3StaticSiteDeployFunctionArn: !GetAtt S3StaticSiteDeployFunction.Arn
  #     Tags:
  #       - Key: "prx:cloudformation:stack-name"
  #         Value: !Ref AWS::StackName
  #       - Key: "prx:cloudformation:stack-id"
  #         Value: !Ref AWS::StackId
  #     TemplateURL: !Join ["", ["http://s3", !If [IsUsEast1, "", "-"], !If [IsUsEast1, "", !Ref "AWS::Region"], ".amazonaws.com/", "Fn::ImportValue": !Sub "${InfrastructureStorageStackName}-InfrastructureSourceBucket", "/", !Ref InfrastructureGitCommit, "/stacks/static-sites/radio.radiotopia.fm.yml"]]
  #     TimeoutInMinutes: "5"
  # BetaPrxOrgStack:
  #   Type: "AWS::CloudFormation::Stack"
  #   Properties:
  #     NotificationARNs:
  #       - Fn::ImportValue:
  #           !Sub "${NotificationsStackName}-CloudFormationNotificationSnsTopic"
  #     Parameters:
  #       CodeS3Bucket:
  #         Fn::ImportValue:
  #           !Sub "${InfrastructureStorageStackName}-InfrastructureApplicationCodeBucket"
  #       StaticSiteArchiveS3ObjectVersion: !Ref BetaPrxOrgArchiveS3ObjectVersion
  #       StaticSiteS3StagingDeployBucket: "/prx/stag/beta.prx.org/DEPLOY_S3_BUCKET"
  #       StaticSiteS3ProductionDeployBucket: "/prx/prod/beta.prx.org/DEPLOY_S3_BUCKET"
  #       EnvironmentType: !Ref EnvironmentType
  #       S3StaticSiteDeployFunctionArn: !GetAtt S3StaticSiteDeployFunction.Arn
  #     Tags:
  #       - Key: "prx:cloudformation:stack-name"
  #         Value: !Ref AWS::StackName
  #       - Key: "prx:cloudformation:stack-id"
  #         Value: !Ref AWS::StackId
  #     TemplateURL: !Join ["", ["http://s3", !If [IsUsEast1, "", "-"], !If [IsUsEast1, "", !Ref "AWS::Region"], ".amazonaws.com/", "Fn::ImportValue": !Sub "${InfrastructureStorageStackName}-InfrastructureSourceBucket", "/", !Ref InfrastructureGitCommit, "/stacks/static-sites/beta.prx.org.yml"]]
  #     TimeoutInMinutes: "5"
