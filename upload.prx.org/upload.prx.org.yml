AWSTemplateFormatVersion: "2010-09-09"
Description: File upload Lambda function
Parameters: #these get passed in to stack
  CodeBucket:
    Type: String
  LambdaFunctionCodeS3Key:
    Type: String
Resources: #these will be launched for us by CF
  LambdaBasicExecutionIAMRole: #creating a role, giving it the policies/permissions it'll need
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
            - Effect: "Allow"
              Principal:
                Service:
                  - "lambda.amazonaws.com"
              Action:
                - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
  UploadRestApi:
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      Name: "Upload-Gateway-API"
      Description: "Api used by PRX Upload Lambda"
  UploadRestApiSignatureResource:
    Type: "AWS::ApiGateway::Resource"
    Properties:
      RestApiId: !Ref UploadRestApi
      ParentId: !GetAtt UploadRestApi.RootResourceId
      PathPart: "signature"
  UploadRestApiSignatureMethod:
    Type: "AWS::ApiGateway::Method"
    Properties:
      RestApiId: !Ref UploadRestApi
      ResourceId: !Ref UploadRestApiSignatureResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UploadLambdaFunction.Arn}/invocations
  UploadRestApiDeployment:
    DependsOn: UploadRestApiSignatureMethod
    Type: "AWS::ApiGateway::Deployment"
    Properties:
      RestApiId: !Ref UploadRestApi
  UploadRestApiStage:
    Type: "AWS::ApiGateway::Stage"
    Properties:
      StageName: prod
      Description: production stage for upload lambda gateway integration
      RestApiId: !Ref UploadRestApi
      DeploymentId: !Ref UploadRestApiDeployment
  UploadRestApiLambdaPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref UploadLambdaFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${UploadRestApi}/${UploadRestApiStage}/*"
  UploadLambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket: !Ref CodeBucket
        S3Key: !Ref LambdaFunctionCodeS3Key
      Description: File upload Lambda function
      Handler: index.handler
      MemorySize: 128
      Role: !GetAtt LambdaBasicExecutionIAMRole.Arn #can't use !Ref because it'll return name instead of ARN
      Runtime: nodejs4.3
      Timeout: 5
