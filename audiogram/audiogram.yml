AWSTemplateFormatVersion: "2010-09-09"
Description: Audiogram application running in Docker
Parameters:
  EnvironmentTypeAbbreviation:
    Description: A short abbreviation indicating the environment type
    Type: String
  VPC:
    Description: The VPC for the cluster
    Type: String
  RootStackName:
    Description: The name of the stack that created this stack
    Type: String
  ECSCluster:
    Description: The ECS cluster this service will deploy into
    Type: String
  ECSServiceAutoscaleIAMRoleArn:
    Description: >
      ARN of policy to enable Task Autoscaling for Amazon EC2 Container Service
    Type: String
  ECSServiceIAMRole:
    Description: >
      The IAM role that allows your Amazon ECS container agent to make calls
      to your load balancer
    Type: String
  Subnet1:
    Description: A VPC subnet available to the cluster
    Type: String
  Subnet2:
    Description: A VPC subnet available to the cluster
    Type: String
Resources:
  AudiogramLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      RetentionInDays: 14
  AudiogramSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Allow web and SSH traffic to the ALB
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
      Tags:
        - Key: Name
          Value: !Sub ${RootStackName} Audiogram ALB
  AudiogramALBTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    DependsOn: AudiogramALB
    Properties:
      HealthCheckIntervalSeconds: 60
      UnhealthyThresholdCount: 10
      HealthCheckPath: /
      Name: !Sub audiogram-${EnvironmentTypeAbbreviation}-${VPC}
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VPC
  AudiogramALB:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Scheme: internet-facing
      Subnets:
        - !Ref Subnet1
        - !Ref Subnet2
      SecurityGroups:
        - !Ref AudiogramSecurityGroup
  AudiogramALBListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      LoadBalancerArn: !Ref AudiogramALB
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref AudiogramALBTargetGroup
  AudiogramTaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      ContainerDefinitions:
        - Command:
            - npm
            - start
          Cpu: 512
          Essential: true
          Image: 561178107736.dkr.ecr.us-east-1.amazonaws.com/audiogram.prx.tech
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref AudiogramLogGroup
              awslogs-region: !Ref AWS::Region
          Memory: 384
          Name: audiogram-aio
          PortMappings:
            - HostPort: 0
              ContainerPort: 8888
  AudiogramService:
    Type: "AWS::ECS::Service"
    DependsOn: AudiogramALBListener
    Properties:
      Cluster: !Ref ECSCluster
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      LoadBalancers:
        - ContainerName: audiogram-aio
          ContainerPort: 8888
          TargetGroupArn: !Ref AudiogramALBTargetGroup
      Role: !Ref ECSServiceIAMRole
      TaskDefinition: !Ref AudiogramTaskDefinition
  AudiogramWebRecordSetGroup:
    Type: "AWS::Route53::RecordSetGroup"
    DependsOn: AudiogramALB
    Properties:
      Comment: Record sets for dualstack web traffic to an audiogram instance
      HostedZoneName: prx.tech.
      RecordSets:
        - Type: A
          Name: !Sub |
            ${EnvironmentTypeAbbreviation}.audiogram.${VPC}.prx.tech.
          AliasTarget:
            DNSName: !GetAtt AudiogramALB.DNSName
            HostedZoneId: !GetAtt AudiogramALB.CanonicalHostedZoneID
  AudiogramScalableTarget:
    Type: "AWS::ApplicationAutoScaling::ScalableTarget"
    Properties:
      MaxCapacity: 5
      MinCapacity: 1
      ResourceId: !Join ["/", ["service", !Ref ECSCluster, !GetAtt AudiogramService.Name]]
      RoleARN: !Ref ECSServiceAutoscaleIAMRoleArn
      ScalableDimension: "ecs:service:DesiredCount"
      ServiceNamespace: ecs
  AudiogramScaleOutPolicy:
    Type: "AWS::ApplicationAutoScaling::ScalingPolicy"
    Properties:
      PolicyName: AudiogramScaleOutPolicy
      PolicyType: StepScaling
      ScalingTargetId: !Ref AudiogramScalableTarget
      StepScalingPolicyConfiguration:
        AdjustmentType: ChangeInCapacity
        Cooldown: 60
        MetricAggregationType: Average
        StepAdjustments:
          - MetricIntervalLowerBound: 0
            MetricIntervalUpperBound: 25
            ScalingAdjustment: 1
          - MetricIntervalLowerBound: 25
            ScalingAdjustment: 2
  AudiogramScaleInPolicy:
    Type: "AWS::ApplicationAutoScaling::ScalingPolicy"
    Properties:
      PolicyName: AudiogramScaleInPolicy
      PolicyType: StepScaling
      ScalingTargetId: !Ref AudiogramScalableTarget
      StepScalingPolicyConfiguration:
        AdjustmentType: ChangeInCapacity
        Cooldown: 60
        MetricAggregationType: Average
        StepAdjustments:
          - MetricIntervalUpperBound: 0
            ScalingAdjustment: -1
  AudiogramScaleOutAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref AudiogramScaleOutPolicy
      AlarmDescription: >
        The CPU utilization of the service has exceeded 50% for more than
        one minute. Breaching this alarm should trigger a service scale out.
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: ClusterName
          Value: !Ref ECSCluster
        - Name: ServiceName
          Value: !GetAtt AudiogramService.Name
      EvaluationPeriods: "1"
      MetricName: CPUUtilization
      Namespace: AWS/ECS
      Period: "60"
      Statistic: Average
      Threshold: "50"
      Unit: Percent
  AudiogramScaleInAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref AudiogramScaleInPolicy
      AlarmDescription: >
        The CPU utilization of the service has dropped below 10% for more than
        five minutes. Breaching this alarm should trigger a service scale in.
      ComparisonOperator: LessThanOrEqualToThreshold
      Dimensions:
        - Name: ClusterName
          Value: !Ref ECSCluster
        - Name: ServiceName
          Value: !GetAtt AudiogramService.Name
      EvaluationPeriods: "5"
      MetricName: CPUUtilization
      Namespace: AWS/ECS
      Period: "60"
      Statistic: Average
      Threshold: "10"
      Unit: Percent
Outputs:
  DNSName:
    Description: The DNS name for the applications load balancer
    Value: !GetAtt AudiogramALB.DNSName
  HostedZoneDNSName:
    Description: Convenience domain name for the ALB in a hosted zone
    Value: !Sub |
      ${EnvironmentTypeAbbreviation}.audiogram.${VPC}.prx.tech.
