AWSTemplateFormatVersion: "2010-09-09"
Description: Audiogram application running in Docker
Mappings:
  ContainerNameMap:
    AudiogramApp:
      name: server-worker-combined
Parameters:
  VPC:
    Type: "AWS::EC2::VPC::Id"
  # Load Balancer ##############################################################
  PlatformALBDNSName:
    Type: String
  PlatformALBCanonicalHostedZoneID:
    Type: String
  PlatformALBHTTPListenerArn:
    Type: String
  PlatformALBHTTPSListenerArn:
    Type: String
  PlatformALBHTTPListenerPriority:
    Type: String
  PlatformALBHTTPSListenerPriority:
    Type: String
  ##############################################################################
  RootStackName:
    Type: String
  ECSCluster:
    Type: String
  ECSServiceAutoscaleIAMRoleArn:
    Type: String
  ECSServiceIAMRole:
    Type: String
  EnvironmentTypeAbbreviation:
    Type: String
  ECRRegion:
    Type: String
  AudiogramECRImageTag:
    Type: String
  OpsDebugMessagesSNSTopicArn:
    Type: String
Resources:
  AudiogramLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      RetentionInDays: 14
  AudiogramALBTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      HealthCheckIntervalSeconds: 60
      UnhealthyThresholdCount: 10
      HealthCheckPath: /
      Name: !Sub audiogram-${EnvironmentTypeAbbreviation}-${VPC}
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VPC
  AudiogramALBHTTPHostListenerRule:
    Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
    Properties:
      Actions:
        - TargetGroupArn: !Ref AudiogramALBTargetGroup
          Type: forward
      Conditions:
        - Field: host-header
          Values:
            - !Sub ${EnvironmentTypeAbbreviation}-audiogram.${VPC}.prx.tech
      ListenerArn: !Ref PlatformALBHTTPListenerArn
      Priority: !Ref PlatformALBHTTPListenerPriority
  AudiogramALBHTTPSHostListenerRule:
    Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
    Properties:
      Actions:
        - TargetGroupArn: !Ref AudiogramALBTargetGroup
          Type: forward
      Conditions:
        - Field: host-header
          Values:
            - !Sub ${EnvironmentTypeAbbreviation}-audiogram.${VPC}.prx.tech
      ListenerArn: !Ref PlatformALBHTTPSListenerArn
      Priority: !Ref PlatformALBHTTPSListenerPriority
  AudiogramTaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      ContainerDefinitions:
        - Command:
            - npm
            - start
          Cpu: 512
          Essential: true
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${ECRRegion}.amazonaws.com/audiogram.prx.tech:${AudiogramECRImageTag}
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref AudiogramLogGroup
              awslogs-region: !Ref AWS::Region
          Memory: 384
          Name: !FindInMap [ContainerNameMap, AudiogramApp, name]
          PortMappings:
            - HostPort: 0
              ContainerPort: 8888
  AudiogramService:
    Type: "AWS::ECS::Service"
    Properties:
      Cluster: !Ref ECSCluster
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      LoadBalancers:
        - ContainerName: !FindInMap [ContainerNameMap, AudiogramApp, name]
          ContainerPort: 8888
          TargetGroupArn: !Ref AudiogramALBTargetGroup
      Role: !Ref ECSServiceIAMRole
      TaskDefinition: !Ref AudiogramTaskDefinition
  AudiogramWebRecordSetGroup:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      Comment: Record sets for dualstack web traffic to an audiogram instance
      HostedZoneName: prx.tech.
      RecordSets:
        - Type: A
          Name: !Sub |
            ${EnvironmentTypeAbbreviation}-audiogram.${VPC}.prx.tech.
          AliasTarget:
            DNSName: !Ref PlatformALBDNSName
            HostedZoneId: !Ref PlatformALBCanonicalHostedZoneID
  # AudiogramScalableTarget:
  #   Type: "AWS::ApplicationAutoScaling::ScalableTarget"
  #   Properties:
  #     MaxCapacity: 5
  #     MinCapacity: 1
  #     ResourceId: !Join ["/", ["service", !Ref ECSCluster, !GetAtt AudiogramService.Name]]
  #     RoleARN: !Ref ECSServiceAutoscaleIAMRoleArn
  #     ScalableDimension: "ecs:service:DesiredCount"
  #     ServiceNamespace: ecs
  # AudiogramScaleOutPolicy:
  #   Type: "AWS::ApplicationAutoScaling::ScalingPolicy"
  #   Properties:
  #     PolicyName: AudiogramScaleOutPolicy
  #     PolicyType: StepScaling
  #     ScalingTargetId: !Ref AudiogramScalableTarget
  #     StepScalingPolicyConfiguration:
  #       AdjustmentType: ChangeInCapacity
  #       Cooldown: 60
  #       MetricAggregationType: Average
  #       StepAdjustments:
  #         - MetricIntervalLowerBound: 0
  #           MetricIntervalUpperBound: 25
  #           ScalingAdjustment: 1
  #         - MetricIntervalLowerBound: 25
  #           ScalingAdjustment: 2
  # AudiogramScaleInPolicy:
  #   Type: "AWS::ApplicationAutoScaling::ScalingPolicy"
  #   Properties:
  #     PolicyName: AudiogramScaleInPolicy
  #     PolicyType: StepScaling
  #     ScalingTargetId: !Ref AudiogramScalableTarget
  #     StepScalingPolicyConfiguration:
  #       AdjustmentType: ChangeInCapacity
  #       Cooldown: 60
  #       MetricAggregationType: Average
  #       StepAdjustments:
  #         - MetricIntervalUpperBound: 0
  #           ScalingAdjustment: -1
  # AudiogramScaleOutAlarm:
  #   Type: "AWS::CloudWatch::Alarm"
  #   Properties:
  #     ActionsEnabled: true
  #     AlarmActions:
  #       - !Ref AudiogramScaleOutPolicy
  #       - !Ref OpsDebugMessagesSNSTopicArn
  #     AlarmDescription: >
  #       The CPU utilization of the service has exceeded 50% for more than
  #       one minute. Breaching this alarm should trigger a service scale out.
  #     ComparisonOperator: GreaterThanOrEqualToThreshold
  #     Dimensions:
  #       - Name: ClusterName
  #         Value: !Ref ECSCluster
  #       - Name: ServiceName
  #         Value: !GetAtt AudiogramService.Name
  #     EvaluationPeriods: "1"
  #     MetricName: CPUUtilization
  #     Namespace: AWS/ECS
  #     Period: "60"
  #     Statistic: Average
  #     Threshold: "50"
  #     Unit: Percent
  # AudiogramScaleInAlarm:
  #   Type: "AWS::CloudWatch::Alarm"
  #   Properties:
  #     ActionsEnabled: true
  #     AlarmActions:
  #       - !Ref AudiogramScaleInPolicy
  #       - !Ref OpsDebugMessagesSNSTopicArn
  #     AlarmDescription: >
  #       The CPU utilization of the service has dropped below 10% for more than
  #       five minutes. Breaching this alarm should trigger a service scale in.
  #     ComparisonOperator: LessThanOrEqualToThreshold
  #     Dimensions:
  #       - Name: ClusterName
  #         Value: !Ref ECSCluster
  #       - Name: ServiceName
  #         Value: !GetAtt AudiogramService.Name
  #     EvaluationPeriods: "5"
  #     MetricName: CPUUtilization
  #     Namespace: AWS/ECS
  #     Period: "60"
  #     Statistic: Average
  #     Threshold: "10"
  #     Unit: Percent
  # AudiogramHTTP500Alarm:
    # Type: "AWS::CloudWatch::Alarm"
    # Properties:
      # Statistic: Sum
Outputs:
  HostedZoneDNSName:
    Description: Convenience domain name for the ALB in a hosted zone
    Value: !Sub |
      ${EnvironmentTypeAbbreviation}-audiogram.${VPC}.prx.tech.
